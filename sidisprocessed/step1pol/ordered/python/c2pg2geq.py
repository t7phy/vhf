def C2Pg2gEq(inx, inz, cx, cz,                Q, muR, muF, muA):
      res = (0.0)

      rln2 = (ln(2.0))

      LMUR = (2 * log(muR / Q))
      LMUF = (2 * log(muF / Q))
      LMUA = (2 * log(muA / Q))

      NC = (3.0)
      CF = (4.0 / 3.0)
      TR = (0.5)

      if cx == "D" and cz == "D":
      
            res = (0)

            return res
      
      if cx == "D" and cz == "0":
      
            res = (0)

            return res
      
      if cx == "D" and cz == "1":
      
            res = (0)

            return res
      
      if cx == "D" and cz == "2":
      
            res = (0)

            return res
      
      if cx == "D" and cz == "3":
      
            res = (0)

            return res
      
      if cx == "0" and cz == "D":
      
            res = (0)

            return res
      
      if cx == "0" and cz == "0":
      
            res = (0)

            return res
      
      if cx == "0" and cz == "1":
      
            res = (0)

            return res
      
      if cx == "0" and cz == "2":
      
            res = (0)

            return res
      
      if cx == "0" and cz == "3":
      
            res = (0)

            return res
      
      if cx == "1" and cz == "D":
      
            res = (0)

            return res
      
      if cx == "1" and cz == "0":
      
            res = (0)

            return res
      
      if cx == "1" and cz == "1":
      
            res = (0)

            return res
      
      if cx == "1" and cz == "2":
      
            res = (0)

            return res
      
      if cx == "1" and cz == "3":
      
            res = (0)

            return res
      
      if cx == "2" and cz == "D":
      
            res = (0)

            return res
      
      if cx == "2" and cz == "0":
      
            res = (0)

            return res
      
      if cx == "2" and cz == "1":
      
            res = (0)

            return res
      
      if cx == "2" and cz == "2":
      
            res = (0)

            return res
      
      if cx == "2" and cz == "3":
      
            res = (0)

            return res
      
      if cx == "3" and cz == "D":
      
            res = (0)

            return res
      
      if cx == "3" and cz == "0":
      
            res = (0)

            return res
      
      if cx == "3" and cz == "1":
      
            res = (0)

            return res
      
      if cx == "3" and cz == "2":
      
            res = (0)

            return res
      
      if cx == "3" and cz == "3":
      
            res = (0)

            return res
      
      if cx == "D" and cz == "R":
      
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            res = (0)

            return res
      
      if cx == "0" and cz == "R":
      
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            res = (0)

            return res
      
      if cx == "1" and cz == "R":
      
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            res = (0)

            return res
      
      if cx == "2" and cz == "R":
      
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            res = (0)

            return res
      
      if cx == "3" and cz == "R":
      
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            res = (0)

            return res
      
      if cx == "R" and cz == "D":
      
            x = (inx)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            res = (0)

            return res
      
      if cx == "R" and cz == "0":
      
            x = (inx)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            res = (0)

            return res
      
      if cx == "R" and cz == "1":
      
            x = (inx)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            res = (0)

            return res
      
      if cx == "R" and cz == "2":
      
            x = (inx)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            res = (0)

            return res
      
      if cx == "R" and cz == "3":
      
            x = (inx)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            res = (0)

            return res
      
      if cx == "R" and cz == "R":
      
            x = (inx)
            z = (inz)
            omz = (1. - z)
            opz = (1. + z)
            omx = (1. - x)
            opx = (1. + x)
            op6xpxsq = (1. + 6. * x + x * x)
            xmz = (x - z)
            omxmz = (1. - x - z)
            poly2 = (1 + 2 * x + x * x - 4 * x * z)
            sqrtxz1 = (mysqrt(1 - 2 * z + z * z + 4 * x * z))
            sqrtxz2 = (mysqrt(poly2))
            sqrtxz3 = (mysqrt(x / z))
            if z < 1. - x and z < x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z > 1. - x and z < x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z < 1. - x and z > x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z > 1. - x and z > x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z > x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z < x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z < 1. - x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z > 1. - x:
            
                  tmp = (0.0)
                  tmp = (0)

                  res += ( tmp)
            
            if z != x and z != 1. - x:
            
                  tmp = (0.0)
                  # Split orders:
                  tmp = (0)
                  # Order 000:
                  tmp += ( 13. / 16. * pow(z, -1) * pow(NC, -1) + (-1) * 4 * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) * pow(opz, -1) + 4 * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) + (-1) * 8 * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 6 * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) + 6 * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) + (-1) * 157. / 16. * pow(z, -1) * NC + (-1) * 2 * pow(z, -1) * NC * pow(rln2, 2) + (-1) * 2 * pow(z, -1) * NC * sqrtxz1 * rln2 + (-1) * 24 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 18 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 12 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + 7. / 8. * pow(NC, -1) + (-1) * 4 * pow(NC, -1) * pow(rln2, 2) + 65. / 8. * NC + 2 * NC * pow(rln2, 2) + 8 * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 0)
                  tmp += ( 6 * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + (-1) * 6 * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + (-1) * 43. / 16. * z * pow(NC, -1) + 2 * z * pow(NC, -1) * pow(rln2, 2) + 43. / 16. * z * NC + (-1) * 2 * z * NC * pow(rln2, 2) + 3. / 4. * x * pow(z, -1) * pow(NC, -1) + 8 * x * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) * pow(opz, -1) + (-1) * 8 * x * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) + 16 * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 16 * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 12 * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) + (-1) * 12 * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) + 41. / 4. * x * pow(z, -1) * NC + 4 * x * pow(z, -1) * NC * pow(rln2, 2) + 4 * x * pow(z, -1) * NC * sqrtxz1 * rln2 + 80 * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 64 * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 60 * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + (-1) * 48 * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + 0)
                  tmp += ( (-1) * 5. / 2. * x * pow(NC, -1) + 8 * x * pow(NC, -1) * pow(rln2, 2) + (-1) * 17. / 2. * x * NC + (-1) * 4 * x * NC * pow(rln2, 2) + (-1) * 16 * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 12 * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 12 * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + 11. / 4. * x * z * pow(NC, -1) + (-1) * 4 * x * z * pow(NC, -1) * pow(rln2, 2) + (-1) * 11. / 4. * x * z * NC + 4 * x * z * NC * pow(rln2, 2) + (-1) * 4 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) * pow(opz, -1) + 4 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(rln2, 2) + (-1) * 8 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 6 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) + 6 * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(rln2, 2) + (-1) * 88 * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 80 * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 0)
                  tmp += ( (-1) * 66 * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 60 * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + (-1) * 4 * pow(x, 2) * pow(NC, -1) * pow(rln2, 2) + 4 * pow(x, 2) * NC * pow(rln2, 2) + 8 * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 6 * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + (-1) * 6 * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + 32 * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 32 * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 24 * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + (-1) * 24 * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 1. / 3. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 1. / 3. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 6. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 1. / 6. * pow(pi, 2) * pow(x, -2) * pow(z, -1) * NC + 1. / 6. * pow(pi, 2) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 6. * pow(pi, 2) * pow(x, -2) * pow(NC, -1) + 0)
                  tmp += ( 1. / 6. * pow(pi, 2) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 6. * pow(pi, 2) * pow(x, -2) * z * pow(NC, -1) + (-1) * 1. / 6. * pow(pi, 2) * pow(x, -2) * z * NC * pow(opx, -1) + 1. / 6. * pow(pi, 2) * pow(x, -2) * z * NC + (-1) * pow(pi, 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2. / 3. * pow(pi, 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + pow(pi, 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2. / 3. * pow(pi, 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 2. * pow(pi, 2) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + 1. / 3. * pow(pi, 2) * pow(x, -1) * pow(z, -1) * NC + 1. / 2. * pow(pi, 2) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, -1) * pow(NC, -1) + 1. / 2. * pow(pi, 2) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, -1) * z * pow(NC, -1) + (-1) * 1. / 2. * pow(pi, 2) * pow(x, -1) * z * NC * pow(opx, -1) + 1. / 3. * pow(pi, 2) * pow(x, -1) * z * NC + (-1) * pow(pi, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + pow(pi, 2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 7. / 24. * pow(pi, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 0)
                  tmp += ( 1. / 3. * pow(pi, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 1. / 3. * pow(pi, 2) * pow(z, -1) * NC * pow(opx, -1) + 7. / 24. * pow(pi, 2) * pow(z, -1) * NC + (-1) * pow(pi, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2. / 3. * pow(pi, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 3. * pow(pi, 2) * pow(NC, -1) * pow(omz, -1) + 2. / 3. * pow(pi, 2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 12. * pow(pi, 2) * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * NC * pow(opx, -1) + 1. / 12. * pow(pi, 2) * NC + 1. / 3. * pow(pi, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 1. / 3. * pow(pi, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 3. * pow(pi, 2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 6. * pow(pi, 2) * z * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * z * NC * pow(opx, -1) + 1. / 6. * pow(pi, 2) * z * NC + (-1) * 1. / 3. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2. / 3. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 1. / 3. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 5. / 4. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( 2. / 3. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2. / 3. * pow(pi, 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 7. / 12. * pow(pi, 2) * x * pow(z, -1) * NC + 10. / 3. * pow(pi, 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8. / 3. * pow(pi, 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 2. / 3. * pow(pi, 2) * x * pow(NC, -1) * pow(omz, -1) + 1. / 3. * pow(pi, 2) * x * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * pow(pi, 2) * x * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * x * NC * pow(opx, -1) + 1. / 2. * pow(pi, 2) * x * NC + (-1) * 2. / 3. * pow(pi, 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2. / 3. * pow(pi, 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * pow(pi, 2) * x * z * pow(NC, -1) + (-1) * 1. / 2. * pow(pi, 2) * x * z * NC + (-1) * 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 11. / 3. * pow(pi, 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 10. / 3. * pow(pi, 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + 1. / 3. * pow(pi, 2) * pow(x, 2) * pow(NC, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, 2) * NC + 1. / 3. * pow(pi, 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 1. / 3. * pow(pi, 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 4. / 3. * pow(pi, 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4. / 3. * pow(pi, 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 5 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * rln2 + 8 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 8 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 3 * ln(1 + sqrtxz1 - z) * pow(z, -1) * NC * rln2 + 2 * ln(1 + sqrtxz1 - z) * pow(z, -1) * NC * sqrtxz1 + 24 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) + 24 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 + 0)
                  tmp += ( (-1) * 4 * ln(1 + sqrtxz1 - z) * NC * rln2 + (-1) * 8 * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 3 * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * rln2 + 3 * ln(1 + sqrtxz1 - z) * z * NC * rln2 + (-1) * 8 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 10 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 16 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 16 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 6 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * NC * rln2 + (-1) * 4 * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * NC * sqrtxz1 + (-1) * 80 * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 64 * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 80 * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 64 * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 12 * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * rln2 + 0)
                  tmp += ( 8 * ln(1 + sqrtxz1 - z) * x * NC * rln2 + 16 * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 16 * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 16 * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 6 * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * rln2 + (-1) * 6 * ln(1 + sqrtxz1 - z) * x * z * NC * rln2 + 4 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 + 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 88 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 80 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 88 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 80 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 6 * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * rln2 + (-1) * 6 * ln(1 + sqrtxz1 - z) * pow(x, 2) * NC * rln2 + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 32 * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 32 * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + pow(ln(1 + sqrtxz1 - z), 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, -1) * NC + (-1) * 6 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC + 2 * pow(ln(1 + sqrtxz1 - z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + pow(ln(1 + sqrtxz1 - z), 2) * z * pow(NC, -1) + (-1) * pow(ln(1 + sqrtxz1 - z), 2) * z * NC + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, -1) * NC + 20 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(NC, -1) + (-1) * 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * NC + (-1) * 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * pow(NC, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * NC + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * pow(NC, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * NC + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 3 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * NC + (-1) * 12 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) + (-1) * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * NC + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 6 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * NC + 40 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) + (-1) * 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * NC + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 44 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * NC + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 3 * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 0)
                  tmp += ( (-1) * 4 * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + ln(1 + sqrtxz1 + z) * pow(z, -1) * NC * rln2 + 12 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * rln2 + (-1) * 4 * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 4 * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * rln2 + ln(1 + sqrtxz1 + z) * z * NC * rln2 + (-1) * 8 * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 6 * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 8 * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 2 * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * NC * rln2 + (-1) * 40 * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 32 * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 4 * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * rln2 + 8 * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 2 * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * rln2 + 0)
                  tmp += ( (-1) * 2 * ln(1 + sqrtxz1 + z) * x * z * NC * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 44 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 40 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 2 * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * rln2 + (-1) * 2 * ln(1 + sqrtxz1 + z) * pow(x, 2) * NC * rln2 + (-1) * 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 4 * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 16 * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 3. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 0)
                  tmp += ( (-1) * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 5 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 11. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 5 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 1. / 2. * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + ln(z * sqrtxz3) * ArcTan(z * sqrtxz3) * pow(x, -1) * NC * sqrtxz3 + 5 * ln(z * sqrtxz3) * ArcTan(z * sqrtxz3) * pow(z, -1) * NC * sqrtxz3 + (-1) * 4 * ln(z * sqrtxz3) * ArcTan(z * sqrtxz3) * z * pow(NC, -1) * sqrtxz3 + 9 * ln(z * sqrtxz3) * ArcTan(z * sqrtxz3) * z * NC * sqrtxz3 + 5 * ln(z * sqrtxz3) * ArcTan(z * sqrtxz3) * x * NC * sqrtxz3 + (-1) * 4 * ln(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 0)
                  tmp += ( 4 * ln(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 4 * ln(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 2 * ln(x) * pow(x, -2) * pow(z, -1) * NC + 2 * ln(x) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * pow(x, -2) * pow(NC, -1) + 2 * ln(x) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * pow(x, -2) * z * pow(NC, -1) + (-1) * 2 * ln(x) * pow(x, -2) * z * NC * pow(opx, -1) + 2 * ln(x) * pow(x, -2) * z * NC + (-1) * 12 * ln(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 12 * ln(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 8 * ln(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 6 * ln(x) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + 4 * ln(x) * pow(x, -1) * pow(z, -1) * NC + 6 * ln(x) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 4 * ln(x) * pow(x, -1) * pow(NC, -1) + 6 * ln(x) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 4 * ln(x) * pow(x, -1) * z * pow(NC, -1) + 0)
                  tmp += ( (-1) * 6 * ln(x) * pow(x, -1) * z * NC * pow(opx, -1) + 4 * ln(x) * pow(x, -1) * z * NC + (-1) * 12 * ln(x) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 12 * ln(x) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 11. / 4. * ln(x) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 3 * ln(x) * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 4 * ln(x) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(x) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 4 * ln(x) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 15. / 4. * ln(x) * pow(z, -1) * NC + (-1) * 2 * ln(x) * pow(z, -1) * NC * rln2 + (-1) * ln(x) * pow(z, -1) * NC * sqrtxz1 + (-1) * 12 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(x) * pow(NC, -1) * pow(omz, -1) + 8 * ln(x) * pow(NC, -1) * pow(opx, -1) + (-1) * 11. / 2. * ln(x) * pow(NC, -1) + (-1) * 4 * ln(x) * pow(NC, -1) * rln2 + (-1) * 4 * ln(x) * NC * pow(opx, -1) + 0)
                  tmp += ( 13. / 2. * ln(x) * NC + 3 * ln(x) * NC * rln2 + 4 * ln(x) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(x) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(x) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 7. / 4. * ln(x) * z * pow(NC, -1) + 2 * ln(x) * z * pow(NC, -1) * rln2 + (-1) * 4 * ln(x) * z * NC * pow(opx, -1) + 7. / 4. * ln(x) * z * NC + (-1) * 2 * ln(x) * z * NC * rln2 + (-1) * 4 * ln(x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 8 * ln(x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 4 * ln(x) * x * pow(z, -1) * pow(NC, -1) + 4 * ln(x) * x * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 6 * ln(x) * x * pow(z, -1) * pow(NC, -1) * rln2 + 8 * ln(x) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * ln(x) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 1. / 2. * ln(x) * x * pow(z, -1) * NC + 4 * ln(x) * x * pow(z, -1) * NC * rln2 + 0)
                  tmp += ( 2 * ln(x) * x * pow(z, -1) * NC * sqrtxz1 + 40 * ln(x) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 32 * ln(x) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(x) * x * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * x * pow(NC, -1) * pow(opx, -1) + 4 * ln(x) * x * pow(NC, -1) + 8 * ln(x) * x * pow(NC, -1) * rln2 + (-1) * 4 * ln(x) * x * NC * pow(opx, -1) + 1. / 2. * ln(x) * x * NC + (-1) * 6 * ln(x) * x * NC * rln2 + (-1) * 8 * ln(x) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(x) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(x) * x * z * pow(NC, -1) * rln2 + 4 * ln(x) * x * z * NC * rln2 + (-1) * 4 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 2 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 4 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 44 * ln(x) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(x) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(x) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + (-1) * 4 * ln(x) * pow(x, 2) * pow(NC, -1) * rln2 + 4 * ln(x) * pow(x, 2) * NC * rln2 + 4 * ln(x) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(x) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 16 * ln(x) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(x) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + ln(x) * ln(1 + sqrtxz1 - z) * pow(z, -1) * NC + (-1) * 6 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC + 2 * ln(x) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) + 0)
                  tmp += ( ln(x) * ln(1 + sqrtxz1 - z) * z * NC + 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * NC + 20 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * NC + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * NC + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * NC + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + ln(x) * ln(1 + sqrtxz1 + z) * pow(z, -1) * NC + 6 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) + (-1) * ln(x) * ln(1 + sqrtxz1 + z) * NC + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) + ln(x) * ln(1 + sqrtxz1 + z) * z * NC + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * NC + (-1) * 20 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * NC + 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(x) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * z * NC + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 22 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 20 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * NC + (-1) * 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC + (-1) * 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * NC + 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) + (-1) * 3. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) + 3. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * NC + 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, -1) * NC + (-1) * 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * NC + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * z * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * z * NC * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * pow(z, -1)) * z * NC + ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) * 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * NC + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * x * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * x * z * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * x * z * NC + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(NC, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, 2) * NC + ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * NC + (-1) * 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * z * pow(NC, -1) + 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(1 + x * z) * pow(x, -2) * z * NC + 3 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3. / 2. * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3. / 2. * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(x, -1) * pow(NC, -1) + (-1) * 3. / 2. * ln(x) * ln(1 + x * z) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(x, -1) * z * pow(NC, -1) + 3. / 2. * ln(x) * ln(1 + x * z) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(x, -1) * z * NC + 3 * ln(x) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * ln(x) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + ln(x) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) + ln(x) * ln(1 + x * z) * pow(z, -1) * NC * pow(opx, -1) + 0)
                  tmp += ( (-1) * 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * NC * pow(opx, -1) + (-1) * ln(x) * ln(1 + x * z) * NC + (-1) * ln(x) * ln(1 + x * z) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * z * NC * pow(opx, -1) + ln(x) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 4 * ln(x) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) + 2 * ln(x) * ln(1 + x * z) * x * pow(z, -1) * NC + (-1) * ln(x) * ln(1 + x * z) * x * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * x * NC * pow(opx, -1) + (-1) * 2 * ln(x) * ln(1 + x * z) * x * z * pow(NC, -1) + 2 * ln(x) * ln(1 + x * z) * x * z * NC + ln(x) * ln(1 + x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(1 + x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(1 + x * z) * pow(x, 2) * pow(NC, -1) + 2 * ln(x) * ln(1 + x * z) * pow(x, 2) * NC + ln(x) * ln(z + x) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * ln(x) * ln(z + x) * pow(z, -1) * pow(NC, -1) + 1. / 2. * ln(x) * ln(z + x) * pow(z, -1) * NC + 1. / 2. * ln(x) * ln(z + x) * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(z + x) * z * pow(NC, -1) + 1. / 2. * ln(x) * ln(z + x) * z * NC + (-1) * 2 * ln(x) * ln(z + x) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * ln(x) * ln(z + x) * x * pow(z, -1) * pow(NC, -1) + (-1) * ln(x) * ln(z + x) * x * pow(z, -1) * NC + (-1) * ln(x) * ln(z + x) * x * pow(NC, -1) + ln(x) * ln(z + x) * x * z * pow(NC, -1) + (-1) * ln(x) * ln(z + x) * x * z * NC + ln(x) * ln(z + x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * ln(x) * ln(z + x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + ln(x) * ln(z + x) * pow(x, 2) * pow(NC, -1) + (-1) * ln(x) * ln(z + x) * pow(x, 2) * NC + 3. / 2. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 3. / 2. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 3. / 4. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 0)
                  tmp += ( (-1) * 3. / 4. * pow(ln(x), 2) * pow(x, -2) * pow(z, -1) * NC + (-1) * 3. / 4. * pow(ln(x), 2) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 3. / 4. * pow(ln(x), 2) * pow(x, -2) * pow(NC, -1) + (-1) * 3. / 4. * pow(ln(x), 2) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 3. / 4. * pow(ln(x), 2) * pow(x, -2) * z * pow(NC, -1) + 3. / 4. * pow(ln(x), 2) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 3. / 4. * pow(ln(x), 2) * pow(x, -2) * z * NC + 9. / 2. * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 9. / 2. * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 9. / 4. * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, -1) * pow(z, -1) * NC + (-1) * 9. / 4. * pow(ln(x), 2) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + 3. / 2. * pow(ln(x), 2) * pow(x, -1) * pow(NC, -1) + (-1) * 9. / 4. * pow(ln(x), 2) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + 3. / 2. * pow(ln(x), 2) * pow(x, -1) * z * pow(NC, -1) + 9. / 4. * pow(ln(x), 2) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, -1) * z * NC + 9. / 2. * pow(ln(x), 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) * 9. / 2. * pow(ln(x), 2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * pow(ln(x), 2) * pow(z, -1) * pow(NC, -1) + 3. / 2. * pow(ln(x), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 3. / 2. * pow(ln(x), 2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * pow(ln(x), 2) * pow(z, -1) * NC + 9. / 2. * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 3 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * pow(ln(x), 2) * pow(NC, -1) * pow(opx, -1) + pow(ln(x), 2) * pow(NC, -1) + 3. / 2. * pow(ln(x), 2) * NC * pow(opx, -1) + (-1) * pow(ln(x), 2) * NC + (-1) * 3. / 2. * pow(ln(x), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 3. / 2. * pow(ln(x), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * z * pow(NC, -1) * pow(opx, -1) + 3. / 2. * pow(ln(x), 2) * z * NC * pow(opx, -1) + 3. / 2. * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 3 * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) *
                             4 * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) +
                         (-1) * 3 * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 3 * pow(ln(x), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + pow(ln(x), 2) * x * pow(z, -1) * NC + (-1) * 15 * pow(ln(x), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 12 * pow(ln(x), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 3 * pow(ln(x), 2) * x * pow(NC, -1) * pow(omz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * x * pow(NC, -1) * pow(opx, -1) + pow(ln(x), 2) * x * pow(NC, -1) + 3. / 2. * pow(ln(x), 2) * x * NC * pow(opx, -1) + (-1) * pow(ln(x), 2) * x * NC + 3 * pow(ln(x), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 3 * pow(ln(x), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * pow(ln(x), 2) * x * z * pow(NC, -1) + pow(ln(x), 2) * x * z * NC + 3. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 3. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 33. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * 15 * pow(ln(x), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + (-1) * 1. / 2. * pow(ln(x), 2) * pow(x, 2) * pow(NC, -1) + 1. / 2. * pow(ln(x), 2) * pow(x, 2) * NC + (-1) * 3. / 2. * pow(ln(x), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 3. / 2. * pow(ln(x), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 6 * pow(ln(x), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 6 * pow(ln(x), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * ln(x) * ln(z) * pow(x, -2) * pow(z, -1) * NC + 1. / 2. * ln(x) * ln(z) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * pow(x, -2) * pow(NC, -1) + 1. / 2. * ln(x) * ln(z) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * pow(x, -2) * z * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * pow(x, -2) * z * NC * pow(opx, -1) + 1. / 2. * ln(x) * ln(z) * pow(x, -2) * z * NC + 0)
                  tmp += ( (-1) * 3 * ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 3 * ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 3. / 2. * ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + ln(x) * ln(z) * pow(x, -1) * pow(z, -1) * NC + 3. / 2. * ln(x) * ln(z) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(z) * pow(x, -1) * pow(NC, -1) + 3. / 2. * ln(x) * ln(z) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(z) * pow(x, -1) * z * pow(NC, -1) + (-1) * 3. / 2. * ln(x) * ln(z) * pow(x, -1) * z * NC * pow(opx, -1) + ln(x) * ln(z) * pow(x, -1) * z * NC + (-1) * 3 * ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 3 * ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 5. / 4. * ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) + ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * ln(x) * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * ln(x) * ln(z) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 7. / 4. * ln(x) * ln(z) * pow(z, -1) * NC + 0)
                  tmp += ( 3 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(z) * pow(NC, -1) + (-1) * ln(x) * ln(z) * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * NC + (-1) * ln(x) * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + ln(x) * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(z) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(z) * z * pow(NC, -1) + (-1) * ln(x) * ln(z) * z * NC * pow(opx, -1) + (-1) * ln(x) * ln(z) * z * NC + (-1) * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 1. / 2. * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 1. / 2. * ln(x) * ln(z) * x * pow(z, -1) * NC + (-1) * 10 * ln(x) * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(x) * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(z) * x * pow(NC, -1) * pow(omz, -1) + ln(x) * ln(z) * x * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * x * pow(NC, -1) + (-1) * ln(x) * ln(z) * x * NC * pow(opx, -1) + (-1) * 3 * ln(x) * ln(z) * x * NC + 2 * ln(x) * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(z) * x * z * pow(NC, -1) + ln(x) * ln(z) * x * z * NC + (-1) * ln(x) * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * ln(x) * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + ln(x) * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * ln(x) * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 11 * ln(x) * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 10 * ln(x) * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(z) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + 0)
                  tmp += ( (-1) * ln(x) * ln(z) * pow(x, 2) * pow(NC, -1) + ln(x) * ln(z) * pow(x, 2) * NC + (-1) * ln(x) * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + ln(x) * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(x) * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * ln(x) * ln(omx) * pow(x, -2) * pow(z, -1) * NC + (-1) * ln(x) * ln(omx) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(omx) * pow(x, -2) * pow(NC, -1) + (-1) * ln(x) * ln(omx) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(omx) * pow(x, -2) * z * pow(NC, -1) + ln(x) * ln(omx) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * ln(x) * ln(omx) * pow(x, -2) * z * NC + 6 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 4 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 0)
                  tmp += ( (-1) * 6 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3 * ln(x) * ln(omx) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, -1) * pow(NC, -1) + (-1) * 3 * ln(x) * ln(omx) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, -1) * z * pow(NC, -1) + 3 * ln(x) * ln(omx) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, -1) * z * NC + 6 * ln(x) * ln(omx) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 6 * ln(x) * ln(omx) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(x) * ln(omx) * pow(z, -1) * pow(NC, -1) + 2 * ln(x) * ln(omx) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * ln(x) * ln(omx) * pow(z, -1) * NC + (-1) * 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) + (-1) * 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) + 2 * ln(x) * ln(omx) * NC * pow(opx, -1) + (-1) * 2 * ln(x) * ln(omx) * NC + 0)
                  tmp += ( (-1) * 2 * ln(x) * ln(omx) * z * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * z * NC * pow(opx, -1) + 2 * ln(x) * ln(omx) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(omx) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * ln(x) * ln(omx) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 3 * ln(x) * ln(omx) * x * pow(z, -1) * pow(NC, -1) + (-1) * ln(x) * ln(omx) * x * pow(z, -1) * NC + (-1) * 4 * ln(x) * ln(omx) * x * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * ln(x) * ln(omx) * x * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * x * NC * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(omx) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(x) * ln(omx) * pow(x, 2) * pow(NC, -1) + ln(x) * ln(omx) * pow(x, 2) * NC + (-1) * 3. / 4. * ln(x) * ln(omz) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 3. / 4. * ln(x) * ln(omz) * pow(z, -1) * NC + (-1) * 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( 4 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * ln(x) * ln(omz) * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * ln(omz) * NC + 2 * ln(x) * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 3. / 2. * ln(x) * ln(omz) * x * pow(z, -1) * pow(NC, -1) + 4 * ln(x) * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(x) * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 3. / 2. * ln(x) * ln(omz) * x * pow(z, -1) * NC + 20 * ln(x) * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(x) * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(x) * ln(omz) * x * pow(NC, -1) + ln(x) * ln(omz) * x * NC + (-1) * 4 * ln(x) * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(omz) * x * z * pow(NC, -1) + (-1) * ln(x) * ln(omz) * x * z * NC + (-1) * 2 * ln(x) * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * ln(x) * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( 20 * ln(x) * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(x) * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(x) * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(x) * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(x) * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + ln(x) * ln(opx) * pow(x, -2) * pow(z, -1) * NC + ln(x) * ln(opx) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(opx) * pow(x, -2) * pow(NC, -1) + ln(x) * ln(opx) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(opx) * pow(x, -2) * z * pow(NC, -1) + (-1) * ln(x) * ln(opx) * pow(x, -2) * z * NC * pow(opx, -1) + ln(x) * ln(opx) * pow(x, -2) * z * NC + (-1) * 6 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 6 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) * 4 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 3 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(x, -1) * pow(z, -1) * NC + 3 * ln(x) * ln(opx) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(x, -1) * pow(NC, -1) + 3 * ln(x) * ln(opx) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(x, -1) * z * pow(NC, -1) + (-1) * 3 * ln(x) * ln(opx) * pow(x, -1) * z * NC * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(x, -1) * z * NC + (-1) * 6 * ln(x) * ln(opx) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 6 * ln(x) * ln(opx) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(z, -1) * NC * pow(opx, -1) + (-1) * ln(x) * ln(opx) * pow(z, -1) * NC + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(x) * ln(opx) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * NC * pow(opx, -1) + 2 * ln(x) * ln(opx) * NC + 2 * ln(x) * ln(opx) * z * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(opx) * z * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * z * NC * pow(opx, -1) + 0)
                  tmp += ( (-1) * ln(x) * ln(opx) * z * NC + (-1) * 2 * ln(x) * ln(opx) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 4 * ln(x) * ln(opx) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * x * pow(z, -1) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * x * pow(z, -1) * NC + 2 * ln(x) * ln(opx) * x * pow(NC, -1) * pow(opx, -1) + 2 * ln(x) * ln(opx) * x * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * x * NC * pow(opx, -1) + 2 * ln(x) * ln(opx) * x * z * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * x * z * NC + (-1) * 2 * ln(x) * ln(opx) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 2 * ln(x) * ln(opx) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * ln(x) * ln(opx) * pow(x, 2) * NC + (-1) * 33. / 8. * ln(z) * pow(z, -1) * pow(NC, -1) + (-1) * 6 * ln(z) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 5 * ln(z) * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 4 * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 8 * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 5. / 8. * ln(z) * pow(z, -1) * NC + (-1) * 2 * ln(z) * pow(z, -1) * NC * rln2 + (-1) * ln(z) * pow(z, -1) * NC * sqrtxz1 + (-1) * 12 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 24 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 3. / 4. * ln(z) * pow(NC, -1) + (-1) * 4 * ln(z) * pow(NC, -1) * rln2 + (-1) * 17. / 4. * ln(z) * NC + ln(z) * NC * rln2 + 4 * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * ln(z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 9. / 8. * ln(z) * z * pow(NC, -1) + 2 * ln(z) * z * pow(NC, -1) * rln2 + 9. / 8. * ln(z) * z * NC + 0)
                  tmp += ( (-1) * 2 * ln(z) * z * NC * rln2 + 13. / 2. * ln(z) * x * pow(z, -1) * pow(NC, -1) + 12 * ln(z) * x * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + (-1) * 10 * ln(z) * x * pow(z, -1) * pow(NC, -1) * rln2 + 8 * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 16 * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 16 * ln(z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 3 * ln(z) * x * pow(z, -1) * NC + 4 * ln(z) * x * pow(z, -1) * NC * rln2 + 2 * ln(z) * x * pow(z, -1) * NC * sqrtxz1 + 40 * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 32 * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 80 * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 64 * ln(z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 8 * ln(z) * x * pow(NC, -1) * rln2 + 7. / 2. * ln(z) * x * NC + (-1) * 2 * ln(z) * x * NC * rln2 + (-1) * 8 * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( (-1) * 16 * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * ln(z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 5. / 4. * ln(z) * x * z * pow(NC, -1) + (-1) * 4 * ln(z) * x * z * pow(NC, -1) * rln2 + (-1) * 5. / 4. * ln(z) * x * z * NC + 4 * ln(z) * x * z * NC * rln2 + (-1) * 6 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 * pow(opz, -1) + 6 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * rln2 + (-1) * 4 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 8 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 44 * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 88 * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 80 * ln(z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 4 * ln(z) * pow(x, 2) * pow(NC, -1) * rln2 + 4 * ln(z) * pow(x, 2) * NC * rln2 + 4 * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 8 * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 8 * ln(z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 16 * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 32 * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 32 * ln(z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + ln(z) * ln(1 + sqrtxz1 - z) * pow(z, -1) * NC + 12 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) + (-1) * ln(z) * ln(1 + sqrtxz1 - z) * NC + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(z) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) + ln(z) * ln(1 + sqrtxz1 - z) * z * NC + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 0)
                  tmp += ( 4 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * NC + (-1) * 40 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * NC + 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * z * NC + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 44 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 40 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * NC + 0)
                  tmp += ( (-1) * 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 3 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + ln(z) * ln(1 + sqrtxz1 + z) * pow(z, -1) * NC + 12 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(z) * ln(1 + sqrtxz1 + z) * z * pow(NC, -1) + ln(z) * ln(1 + sqrtxz1 + z) * z * NC + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 6 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, -1) * NC + (-1) * 40 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(NC, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * pow(NC, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * NC + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 44 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 40 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * NC + (-1) * 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC + 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) + 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * NC * pow(opx, -1) + 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * NC + (-1) * 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 3. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC + 3. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) + 0)
                  tmp += ( 3. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) + (-1) * 3. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * NC * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * NC + (-1) * 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, -1) * NC + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC + ln(z) * ln(1 + x * pow(z, -1)) * z * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * z * pow(NC, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * pow(z, -1)) * z * NC + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, -1) * NC + ln(z) * ln(1 + x * pow(z, -1)) * x * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * x * pow(NC, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * x * NC * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * x * z * pow(NC, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * x * z * NC + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, 2) * pow(NC, -1) + (-1) * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, 2) * NC + ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, -1) * NC + (-1) * 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * z * pow(NC, -1) + 0)
                  tmp += ( 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * ln(z) * ln(1 + x * z) * pow(x, -2) * z * NC + 3 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3. / 2. * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3. / 2. * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(x, -1) * pow(NC, -1) + (-1) * 3. / 2. * ln(z) * ln(1 + x * z) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(x, -1) * z * pow(NC, -1) + 3. / 2. * ln(z) * ln(1 + x * z) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(x, -1) * z * NC + 3 * ln(z) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * ln(z) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + ln(z) * ln(1 + x * z) * pow(z, -1) * pow(NC, -1) + ln(z) * ln(1 + x * z) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( ln(z) * ln(1 + x * z) * NC * pow(opx, -1) + (-1) * ln(z) * ln(1 + x * z) * NC + (-1) * ln(z) * ln(1 + x * z) * z * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * z * NC * pow(opx, -1) + ln(z) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(z) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 4 * ln(z) * ln(1 + x * z) * x * pow(z, -1) * pow(NC, -1) + 2 * ln(z) * ln(1 + x * z) * x * pow(z, -1) * NC + (-1) * ln(z) * ln(1 + x * z) * x * pow(NC, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * x * NC * pow(opx, -1) + (-1) * 2 * ln(z) * ln(1 + x * z) * x * z * pow(NC, -1) + 2 * ln(z) * ln(1 + x * z) * x * z * NC + ln(z) * ln(1 + x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * ln(z) * ln(1 + x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(z) * ln(1 + x * z) * pow(x, 2) * pow(NC, -1) + 2 * ln(z) * ln(1 + x * z) * pow(x, 2) * NC + (-1) * ln(z) * ln(z + x) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + ln(z) * ln(z + x) * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 1. / 2. * ln(z) * ln(z + x) * pow(z, -1) * NC + (-1) * 1. / 2. * ln(z) * ln(z + x) * pow(NC, -1) + 1. / 2. * ln(z) * ln(z + x) * z * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * ln(z + x) * z * NC + 2 * ln(z) * ln(z + x) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * ln(z) * ln(z + x) * x * pow(z, -1) * pow(NC, -1) + ln(z) * ln(z + x) * x * pow(z, -1) * NC + ln(z) * ln(z + x) * x * pow(NC, -1) + (-1) * ln(z) * ln(z + x) * x * z * pow(NC, -1) + ln(z) * ln(z + x) * x * z * NC + (-1) * ln(z) * ln(z + x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + ln(z) * ln(z + x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * ln(z) * ln(z + x) * pow(x, 2) * pow(NC, -1) + ln(z) * ln(z + x) * pow(x, 2) * NC + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 1. / 2. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 1. / 2. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 4. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + 1. / 4. * pow(ln(z), 2) * pow(x, -2) * pow(z, -1) * NC + 0)
                  tmp += ( 1. / 4. * pow(ln(z), 2) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 4. * pow(ln(z), 2) * pow(x, -2) * pow(NC, -1) + 1. / 4. * pow(ln(z), 2) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 4. * pow(ln(z), 2) * pow(x, -2) * z * pow(NC, -1) + (-1) * 1. / 4. * pow(ln(z), 2) * pow(x, -2) * z * NC * pow(opx, -1) + 1. / 4. * pow(ln(z), 2) * pow(x, -2) * z * NC + (-1) * 3. / 2. * pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 3. / 2. * pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 3. / 4. * pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * pow(ln(z), 2) * pow(x, -1) * pow(z, -1) * NC + 3. / 4. * pow(ln(z), 2) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, -1) * pow(NC, -1) + 3. / 4. * pow(ln(z), 2) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, -1) * z * pow(NC, -1) + (-1) * 3. / 4. * pow(ln(z), 2) * pow(x, -1) * z * NC * pow(opx, -1) + 1. / 2. * pow(ln(z), 2) * pow(x, -1) * z * NC + (-1) * 3. / 2. * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 3. / 2. * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) + (-1) * 5. / 2. * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 5. / 2. * pow(ln(z), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 1. / 2. * pow(ln(z), 2) * pow(z, -1) * NC * pow(opx, -1) + 1. / 2. * pow(ln(z), 2) * pow(z, -1) * NC + (-1) * 15. / 2. * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(NC, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * NC * pow(opx, -1) + 1. / 2. * pow(ln(z), 2) * NC + 5. / 2. * pow(ln(z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 5. / 2. * pow(ln(z), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * pow(ln(z), 2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 1. / 4. * pow(ln(z), 2) * z * pow(NC, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * z * NC * pow(opx, -1) + 1. / 4. * pow(ln(z), 2) * z * NC + (-1) * 1. / 2. * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 0)
                  tmp += ( (-1) * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 1. / 2. * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) + 5 * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 5 * pow(ln(z), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 2 * pow(ln(z), 2) * x * pow(z, -1) * NC + 25 * pow(ln(z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 20 * pow(ln(z), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + pow(ln(z), 2) * x * pow(NC, -1) * pow(omz, -1) + 1. / 2. * pow(ln(z), 2) * x * pow(NC, -1) * pow(opx, -1) + pow(ln(z), 2) * x * pow(NC, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * x * NC * pow(opx, -1) + (-1) * 5 * pow(ln(z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 5 * pow(ln(z), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 3. / 2. * pow(ln(z), 2) * x * z * pow(NC, -1) + (-1) * 3. / 2. * pow(ln(z), 2) * x * z * NC + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * pow(ln(z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 3. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 5. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 5. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 55. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 25 * pow(ln(z), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 1. / 2. * pow(ln(z), 2) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + pow(ln(z), 2) * pow(x, 2) * pow(NC, -1) + (-1) * pow(ln(z), 2) * pow(x, 2) * NC + 5. / 2. * pow(ln(z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 5. / 2. * pow(ln(z), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 10 * pow(ln(z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 10 * pow(ln(z), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(z) * ln(omx) * pow(NC, -1) + ln(z) * ln(omx) * NC + 2 * ln(z) * ln(omx) * x * pow(NC, -1) + (-1) * 2 * ln(z) * ln(omx) * x * NC + (-1) * 2 * ln(z) * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(z) * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 6 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * 2 * ln(z) * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(z) * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(z) * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 20 * ln(z) * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * ln(z) * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(z) * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(z) * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(z) * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * ln(z) * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * ln(z) * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(z) * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * ln(z) * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(z) * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(z) * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * ln(sqrtxz3) * ArcTan(sqrtxz3) * pow(x, -1) * NC * sqrtxz3 + (-1) * 5 * ln(sqrtxz3) * ArcTan(sqrtxz3) * pow(z, -1) * NC * sqrtxz3 + 4 * ln(sqrtxz3) * ArcTan(sqrtxz3) * z * pow(NC, -1) * sqrtxz3 + (-1) * 9 * ln(sqrtxz3) * ArcTan(sqrtxz3) * z * NC * sqrtxz3 + (-1) * 5 * ln(sqrtxz3) * ArcTan(sqrtxz3) * x * NC * sqrtxz3 + 0)
                  tmp += ( (-1) * 25. / 8. * ln(omx) * pow(z, -1) * pow(NC, -1) + 25. / 8. * ln(omx) * pow(z, -1) * NC + 11. / 4. * ln(omx) * pow(NC, -1) + (-1) * 11. / 4. * ln(omx) * NC + 3. / 8. * ln(omx) * z * pow(NC, -1) + (-1) * 3. / 8. * ln(omx) * z * NC + 9. / 2. * ln(omx) * x * pow(z, -1) * pow(NC, -1) + (-1) * 9. / 2. * ln(omx) * x * pow(z, -1) * NC + (-1) * 4 * ln(omx) * x * pow(NC, -1) + 4 * ln(omx) * x * NC + (-1) * 3. / 4. * ln(omx) * x * z * pow(NC, -1) + 3. / 4. * ln(omx) * x * z * NC + 1. / 2. * pow(ln(omx), 2) * pow(z, -1) * pow(NC, -1) + (-1) * 1. / 2. * pow(ln(omx), 2) * pow(z, -1) * NC + (-1) * 1. / 2. * pow(ln(omx), 2) * pow(NC, -1) + 1. / 2. * pow(ln(omx), 2) * NC + 1. / 4. * pow(ln(omx), 2) * z * pow(NC, -1) + (-1) * 1. / 4. * pow(ln(omx), 2) * z * NC + (-1) * pow(ln(omx), 2) * x * pow(z, -1) * pow(NC, -1) + pow(ln(omx), 2) * x * pow(z, -1) * NC + 0)
                  tmp += ( pow(ln(omx), 2) * x * pow(NC, -1) + (-1) * pow(ln(omx), 2) * x * NC + (-1) * 1. / 2. * pow(ln(omx), 2) * x * z * pow(NC, -1) + 1. / 2. * pow(ln(omx), 2) * x * z * NC + ln(omx) * ln(omz) * pow(z, -1) * pow(NC, -1) + (-1) * ln(omx) * ln(omz) * pow(z, -1) * NC + (-1) * ln(omx) * ln(omz) * pow(NC, -1) + ln(omx) * ln(omz) * NC + 1. / 2. * ln(omx) * ln(omz) * z * pow(NC, -1) + (-1) * 1. / 2. * ln(omx) * ln(omz) * z * NC + (-1) * 2 * ln(omx) * ln(omz) * x * pow(z, -1) * pow(NC, -1) + 2 * ln(omx) * ln(omz) * x * pow(z, -1) * NC + 2 * ln(omx) * ln(omz) * x * pow(NC, -1) + (-1) * 2 * ln(omx) * ln(omz) * x * NC + (-1) * ln(omx) * ln(omz) * x * z * pow(NC, -1) + ln(omx) * ln(omz) * x * z * NC + (-1) * 25. / 8. * ln(omz) * pow(z, -1) * pow(NC, -1) + (-1) * 4 * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 4 * ln(omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + 25. / 8. * ln(omz) * pow(z, -1) * NC + 0)
                  tmp += ( (-1) * 12 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 11. / 4. * ln(omz) * pow(NC, -1) + (-1) * 11. / 4. * ln(omz) * NC + 4 * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 4 * ln(omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 3. / 8. * ln(omz) * z * pow(NC, -1) + (-1) * 3. / 8. * ln(omz) * z * NC + 9. / 2. * ln(omz) * x * pow(z, -1) * pow(NC, -1) + 8 * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + (-1) * 8 * ln(omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 9. / 2. * ln(omz) * x * pow(z, -1) * NC + 40 * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 32 * ln(omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 4 * ln(omz) * x * pow(NC, -1) + 4 * ln(omz) * x * NC + (-1) * 8 * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + (-1) * 3. / 4. * ln(omz) * x * z * pow(NC, -1) + 3. / 4. * ln(omz) * x * z * NC + 0)
                  tmp += ( (-1) * 4 * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 4 * ln(omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * rln2 + (-1) * 44 * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 40 * ln(omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 4 * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 4 * ln(omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 16 * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + (-1) * 16 * ln(omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 12 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(omz) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * ln(omz) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 40 * ln(omz) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(omz) * ln(1 + sqrtxz1 - z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * ln(omz) * ln(1 + sqrtxz1 - z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 44 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 40 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 6 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 20 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 22 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 20 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 2. * pow(ln(omz), 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * pow(ln(omz), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * pow(ln(omz), 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 1. / 2. * pow(ln(omz), 2) * pow(z, -1) * NC + (-1) * 6 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 1. / 2. * pow(ln(omz), 2) * pow(NC, -1) + 1. / 2. * pow(ln(omz), 2) * NC + 2 * pow(ln(omz), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * pow(ln(omz), 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 1. / 4. * pow(ln(omz), 2) * z * pow(NC, -1) + (-1) * 1. / 4. * pow(ln(omz), 2) * z * NC + 0)
                  tmp += ( (-1) * pow(ln(omz), 2) * x * pow(z, -1) * pow(NC, -1) + 4 * pow(ln(omz), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * pow(ln(omz), 2) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + pow(ln(omz), 2) * x * pow(z, -1) * NC + 20 * pow(ln(omz), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * pow(ln(omz), 2) * x * pow(NC, -1) * pow(sqrtxz1, -1) + pow(ln(omz), 2) * x * pow(NC, -1) + (-1) * pow(ln(omz), 2) * x * NC + (-1) * 4 * pow(ln(omz), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * pow(ln(omz), 2) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 1. / 2. * pow(ln(omz), 2) * x * z * pow(NC, -1) + 1. / 2. * pow(ln(omz), 2) * x * z * NC + (-1) * 2 * pow(ln(omz), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * pow(ln(omz), 2) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * pow(ln(omz), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * pow(ln(omz), 2) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * pow(ln(omz), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * pow(ln(omz), 2) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * pow(ln(omz), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * pow(ln(omz), 2) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 6 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * NC + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) + 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 20 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * NC + (-1) * 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * Li2(1. / 2. - 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 6 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) + Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * NC + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) + 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 0)
                  tmp += ( (-1) * 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 20 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * NC + (-1) * 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * Li2(1. / 2. + 1. / 2. * pow(z, -1) - 1. / 2. * pow(z, -1) * sqrtxz1) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(z, -1) * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(z, -1) * NC + 6 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(NC, -1) + (-1) * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * NC + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * z * pow(NC, -1) + Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * z * NC + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(z, -1) * NC + (-1) * 20 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * NC + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + 0)
                  tmp += ( 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * z * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * x * z * NC + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 22 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 20 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * NC + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(1. / 2. - 1. / 2. * sqrtxz1 - 1. / 2. * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(z, -1) * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(z, -1) * NC + 6 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 0)
                  tmp += ( (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(NC, -1) + Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * NC + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * z * pow(NC, -1) + (-1) * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * z * NC + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(z, -1) * NC + (-1) * 20 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * pow(NC, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * NC + 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * z * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * x * z * NC + 0)
                  tmp += ( (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 22 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 20 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * pow(NC, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * NC + (-1) * 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(1. / 2. - 1. / 2. * sqrtxz1 + 1. / 2. * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 12 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(pow(sqrtxz1, -1) * omz) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * Li2(pow(sqrtxz1, -1) * omz) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( 40 * Li2(pow(sqrtxz1, -1) * omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 32 * Li2(pow(sqrtxz1, -1) * omz) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * Li2(pow(sqrtxz1, -1) * omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 44 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 12 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(-sqrtxz1 * pow(omz, -1)) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 8 * Li2(-sqrtxz1 * pow(omz, -1)) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( 40 * Li2(-sqrtxz1 * pow(omz, -1)) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 32 * Li2(-sqrtxz1 * pow(omz, -1)) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 8 * Li2(-sqrtxz1 * pow(omz, -1)) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 44 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, -1) * NC + (-1) * 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * z * pow(NC, -1) + 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * Li2(-x * pow(z, -1)) * pow(x, -2) * z * NC + 3 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3. / 2. * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3. / 2. * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, -1) * pow(NC, -1) + (-1) * 3. / 2. * Li2(-x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, -1) * z * pow(NC, -1) + 3. / 2. * Li2(-x * pow(z, -1)) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * Li2(-x * pow(z, -1)) * pow(x, -1) * z * NC + 3 * Li2(-x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * Li2(-x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * Li2(-x * pow(z, -1)) * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( Li2(-x * pow(z, -1)) * pow(z, -1) * NC * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(z, -1) * NC + (-1) * 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) + Li2(-x * pow(z, -1)) * NC * pow(opx, -1) + (-1) * Li2(-x * pow(z, -1)) * NC + (-1) * Li2(-x * pow(z, -1)) * z * pow(NC, -1) * pow(opx, -1) + (-1) * Li2(-x * pow(z, -1)) * z * pow(NC, -1) + Li2(-x * pow(z, -1)) * z * NC * pow(opx, -1) + Li2(-x * pow(z, -1)) * z * NC + Li2(-x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(-x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x * pow(z, -1)) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * Li2(-x * pow(z, -1)) * x * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x * pow(z, -1)) * x * pow(NC, -1) + Li2(-x * pow(z, -1)) * x * NC * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + Li2(-x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(-x * pow(z, -1)) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(-x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * Li2(-x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + (-1) * Li2(-x) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + Li2(-x) * pow(x, -2) * pow(z, -1) * NC + Li2(-x) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + (-1) * Li2(-x) * pow(x, -2) * pow(NC, -1) + Li2(-x) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + (-1) * Li2(-x) * pow(x, -2) * z * pow(NC, -1) + (-1) * Li2(-x) * pow(x, -2) * z * NC * pow(opx, -1) + Li2(-x) * pow(x, -2) * z * NC + (-1) * 6 * Li2(-x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 6 * Li2(-x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 4 * Li2(-x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + (-1) * 3 * Li2(-x) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + 2 * Li2(-x) * pow(x, -1) * pow(z, -1) * NC + 3 * Li2(-x) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x) * pow(x, -1) * pow(NC, -1) + 0)
                  tmp += ( 3 * Li2(-x) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x) * pow(x, -1) * z * pow(NC, -1) + (-1) * 3 * Li2(-x) * pow(x, -1) * z * NC * pow(opx, -1) + 2 * Li2(-x) * pow(x, -1) * z * NC + (-1) * 6 * Li2(-x) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 6 * Li2(-x) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x) * pow(z, -1) * NC * pow(opx, -1) + (-1) * Li2(-x) * pow(z, -1) * NC + 4 * Li2(-x) * pow(NC, -1) * pow(opx, -1) + (-1) * Li2(-x) * pow(NC, -1) + (-1) * 2 * Li2(-x) * NC * pow(opx, -1) + 2 * Li2(-x) * NC + 2 * Li2(-x) * z * pow(NC, -1) * pow(opx, -1) + Li2(-x) * z * pow(NC, -1) + (-1) * 2 * Li2(-x) * z * NC * pow(opx, -1) + (-1) * Li2(-x) * z * NC + (-1) * 2 * Li2(-x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 4 * Li2(-x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * Li2(-x) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 4 * Li2(-x) * x * pow(z, -1) * pow(NC, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(-x) * x * pow(z, -1) * NC + 2 * Li2(-x) * x * pow(NC, -1) * pow(opx, -1) + 2 * Li2(-x) * x * pow(NC, -1) + (-1) * 2 * Li2(-x) * x * NC * pow(opx, -1) + 2 * Li2(-x) * x * z * pow(NC, -1) + (-1) * 2 * Li2(-x) * x * z * NC + (-1) * 2 * Li2(-x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 2 * Li2(-x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + 2 * Li2(-x) * pow(x, 2) * pow(NC, -1) + (-1) * 2 * Li2(-x) * pow(x, 2) * NC + Li2(-x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * Li2(-x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(-x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + Li2(-x * z) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + 1. / 2. * Li2(-x * z) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 2. * Li2(-x * z) * pow(x, -2) * pow(z, -1) * NC + (-1) * 1. / 2. * Li2(-x * z) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + 1. / 2. * Li2(-x * z) * pow(x, -2) * pow(NC, -1) + (-1) * 1. / 2. * Li2(-x * z) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + 1. / 2. * Li2(-x * z) * pow(x, -2) * z * pow(NC, -1) + 0)
                  tmp += ( 1. / 2. * Li2(-x * z) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * 1. / 2. * Li2(-x * z) * pow(x, -2) * z * NC + 3 * Li2(-x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * Li2(-x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 3 * Li2(-x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * Li2(-x * z) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3. / 2. * Li2(-x * z) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * Li2(-x * z) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3. / 2. * Li2(-x * z) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + Li2(-x * z) * pow(x, -1) * pow(NC, -1) + (-1) * 3. / 2. * Li2(-x * z) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + Li2(-x * z) * pow(x, -1) * z * pow(NC, -1) + 3. / 2. * Li2(-x * z) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * Li2(-x * z) * pow(x, -1) * z * NC + 3 * Li2(-x * z) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 3 * Li2(-x * z) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * Li2(-x * z) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + Li2(-x * z) * pow(z, -1) * pow(NC, -1) + Li2(-x * z) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 2 * Li2(-x * z) * pow(NC, -1) * pow(opx, -1) + 0)
                  tmp += ( Li2(-x * z) * NC * pow(opx, -1) + (-1) * Li2(-x * z) * NC + (-1) * Li2(-x * z) * z * pow(NC, -1) * pow(opx, -1) + Li2(-x * z) * z * NC * pow(opx, -1) + Li2(-x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x * z) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(-x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * Li2(-x * z) * x * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 4 * Li2(-x * z) * x * pow(z, -1) * pow(NC, -1) + 2 * Li2(-x * z) * x * pow(z, -1) * NC + (-1) * Li2(-x * z) * x * pow(NC, -1) * pow(opx, -1) + Li2(-x * z) * x * NC * pow(opx, -1) + (-1) * 2 * Li2(-x * z) * x * z * pow(NC, -1) + 2 * Li2(-x * z) * x * z * NC + Li2(-x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(-x * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(opz, -1) + (-1) * 2 * Li2(-x * z) * pow(x, 2) * pow(NC, -1) + 2 * Li2(-x * z) * pow(x, 2) * NC + (-1) * 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 0)
                  tmp += ( (-1) * 6 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + (-1) * 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * pow(z, -1) * pow(NC, -1) * sqrtxz1 + 20 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * x * z * pow(NC, -1) * pow(sqrtxz1, -1) + (-1) * 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * sqrtxz1 + (-1) * 22 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 2) * z * pow(NC, -1) * pow(sqrtxz1, -1) + 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + (-1) * 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(x, 3) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 2 * Li2(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 2 * Li2(x) * pow(x, -2) * pow(z, -1) * pow(NC, -1) + Li2(x) * pow(x, -2) * pow(z, -1) * NC * pow(opx, -1) + (-1) * Li2(x) * pow(x, -2) * pow(z, -1) * NC + (-1) * Li2(x) * pow(x, -2) * pow(NC, -1) * pow(opx, -1) + Li2(x) * pow(x, -2) * pow(NC, -1) + (-1) * Li2(x) * pow(x, -2) * z * pow(NC, -1) * pow(opx, -1) + Li2(x) * pow(x, -2) * z * pow(NC, -1) + Li2(x) * pow(x, -2) * z * NC * pow(opx, -1) + (-1) * Li2(x) * pow(x, -2) * z * NC + 6 * Li2(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 4 * Li2(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 6 * Li2(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 4 * Li2(x) * pow(x, -1) * pow(z, -1) * pow(NC, -1) + 3 * Li2(x) * pow(x, -1) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 2 * Li2(x) * pow(x, -1) * pow(z, -1) * NC + (-1) * 3 * Li2(x) * pow(x, -1) * pow(NC, -1) * pow(opx, -1) + 2 * Li2(x) * pow(x, -1) * pow(NC, -1) + (-1) * 3 * Li2(x) * pow(x, -1) * z * pow(NC, -1) * pow(opx, -1) + 2 * Li2(x) * pow(x, -1) * z * pow(NC, -1) + 0)
                  tmp += ( 3 * Li2(x) * pow(x, -1) * z * NC * pow(opx, -1) + (-1) * 2 * Li2(x) * pow(x, -1) * z * NC + 6 * Li2(x) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + (-1) * 6 * Li2(x) * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + 1. / 4. * Li2(x) * pow(z, -1) * pow(NC, -1) + 2 * Li2(x) * pow(z, -1) * NC * pow(opx, -1) + (-1) * 1. / 4. * Li2(x) * pow(z, -1) * NC + (-1) * 2 * Li2(x) * pow(NC, -1) * pow(omz, -1) + (-1) * 4 * Li2(x) * pow(NC, -1) * pow(opx, -1) + 3. / 2. * Li2(x) * pow(NC, -1) + 2 * Li2(x) * NC * pow(opx, -1) + (-1) * 3. / 2. * Li2(x) * NC + (-1) * 2 * Li2(x) * z * pow(NC, -1) * pow(opx, -1) + 2 * Li2(x) * z * NC * pow(opx, -1) + 2 * Li2(x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) * pow(opx, -1) + 4 * Li2(x) * x * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * Li2(x) * x * pow(z, -1) * pow(NC, -1) * pow(opx, -1) + (-1) * 9. / 2. * Li2(x) * x * pow(z, -1) * pow(NC, -1) + 1. / 2. * Li2(x) * x * pow(z, -1) * NC + (-1) * 4 * Li2(x) * x * pow(NC, -1) * pow(omz, -1) + 0)
                  tmp += ( (-1) * 2 * Li2(x) * x * pow(NC, -1) * pow(opx, -1) + Li2(x) * x * pow(NC, -1) + 2 * Li2(x) * x * NC * pow(opx, -1) + (-1) * Li2(x) * x * NC + (-1) * Li2(x) * x * z * pow(NC, -1) + Li2(x) * x * z * NC + 2 * Li2(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) * pow(omz, -1) + (-1) * 2 * Li2(x) * pow(x, 2) * pow(z, -1) * pow(NC, -1) + (-1) * 2 * Li2(x) * pow(x, 2) * pow(NC, -1) * pow(omz, -1) + (-1) * Li2(x) * pow(x, 2) * pow(NC, -1) + Li2(x) * pow(x, 2) * NC + Li2(z) * pow(NC, -1) + (-1) * Li2(z) * NC + (-1) * 2 * Li2(z) * x * pow(NC, -1) + 2 * Li2(z) * x * NC + (-1) * 1. / 2. * InvTanInt(-sqrtxz3) * pow(x, -1) * NC * sqrtxz3 + (-1) * 5. / 2. * InvTanInt(-sqrtxz3) * pow(z, -1) * NC * sqrtxz3 + 2 * InvTanInt(-sqrtxz3) * z * pow(NC, -1) * sqrtxz3 + (-1) * 9. / 2. * InvTanInt(-sqrtxz3) * z * NC * sqrtxz3 + (-1) * 5. / 2. * InvTanInt(-sqrtxz3) * x * NC * sqrtxz3 + 0)
                  tmp += ( (-1) * InvTanInt(z * sqrtxz3) * pow(x, -1) * NC * sqrtxz3 + (-1) * 5 * InvTanInt(z * sqrtxz3) * pow(z, -1) * NC * sqrtxz3 + 4 * InvTanInt(z * sqrtxz3) * z * pow(NC, -1) * sqrtxz3 + (-1) * 9 * InvTanInt(z * sqrtxz3) * z * NC * sqrtxz3 + (-1) * 5 * InvTanInt(z * sqrtxz3) * x * NC * sqrtxz3 + 1. / 2. * InvTanInt(sqrtxz3) * pow(x, -1) * NC * sqrtxz3 + 5. / 2. * InvTanInt(sqrtxz3) * pow(z, -1) * NC * sqrtxz3 + (-1) * 2 * InvTanInt(sqrtxz3) * z * pow(NC, -1) * sqrtxz3 + 9. / 2. * InvTanInt(sqrtxz3) * z * NC * sqrtxz3 + 5. / 2. * InvTanInt(sqrtxz3) * x * NC * sqrtxz3 + 0)
                  # Order 010:
                  tmp += ( 3. / 4. * pow(z, -1) * LMUF * pow(NC, -1) + (-1) * 3. / 4. * pow(z, -1) * LMUF * NC + (-1) * 1. / 2. * LMUF * pow(NC, -1) + 1. / 2. * LMUF * NC + (-1) * 3. / 4. * z * LMUF * pow(NC, -1) + 3. / 4. * z * LMUF * NC + (-1) * 3. / 4. * x * pow(z, -1) * LMUF * pow(NC, -1) + 3. / 4. * x * pow(z, -1) * LMUF * NC + 1. / 2. * x * LMUF * pow(NC, -1) + (-1) * 1. / 2. * x * LMUF * NC + x * z * LMUF * pow(NC, -1) + (-1) * x * z * LMUF * NC + 1. / 4. * ln(x) * pow(z, -1) * LMUF * pow(NC, -1) + (-1) * 1. / 4. * ln(x) * pow(z, -1) * LMUF * NC + (-1) * 1. / 4. * ln(x) * z * LMUF * pow(NC, -1) + 1. / 4. * ln(x) * z * LMUF * NC + (-1) * 1. / 2. * ln(x) * x * pow(z, -1) * LMUF * pow(NC, -1) + 1. / 2. * ln(x) * x * pow(z, -1) * LMUF * NC + (-1) * 1. / 2. * ln(x) * x * z * LMUF * pow(NC, -1) + 1. / 2. * ln(x) * x * z * LMUF * NC + 0)
                  tmp += ( (-1) * 1. / 2. * ln(z) * pow(z, -1) * LMUF * pow(NC, -1) + 1. / 2. * ln(z) * pow(z, -1) * LMUF * NC + 1. / 2. * ln(z) * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * LMUF * NC + (-1) * 1. / 4. * ln(z) * z * LMUF * pow(NC, -1) + 1. / 4. * ln(z) * z * LMUF * NC + ln(z) * x * pow(z, -1) * LMUF * pow(NC, -1) + (-1) * ln(z) * x * pow(z, -1) * LMUF * NC + (-1) * ln(z) * x * LMUF * pow(NC, -1) + ln(z) * x * LMUF * NC + 1. / 2. * ln(z) * x * z * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * x * z * LMUF * NC + (-1) * 1. / 2. * ln(omx) * pow(z, -1) * LMUF * pow(NC, -1) + 1. / 2. * ln(omx) * pow(z, -1) * LMUF * NC + 1. / 2. * ln(omx) * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(omx) * LMUF * NC + (-1) * 1. / 4. * ln(omx) * z * LMUF * pow(NC, -1) + 1. / 4. * ln(omx) * z * LMUF * NC + ln(omx) * x * pow(z, -1) * LMUF * pow(NC, -1) + (-1) * ln(omx) * x * pow(z, -1) * LMUF * NC + 0)
                  tmp += ( (-1) * ln(omx) * x * LMUF * pow(NC, -1) + ln(omx) * x * LMUF * NC + 1. / 2. * ln(omx) * x * z * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(omx) * x * z * LMUF * NC + (-1) * 1. / 2. * ln(omz) * pow(z, -1) * LMUF * pow(NC, -1) + 1. / 2. * ln(omz) * pow(z, -1) * LMUF * NC + 1. / 2. * ln(omz) * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(omz) * LMUF * NC + (-1) * 1. / 4. * ln(omz) * z * LMUF * pow(NC, -1) + 1. / 4. * ln(omz) * z * LMUF * NC + ln(omz) * x * pow(z, -1) * LMUF * pow(NC, -1) + (-1) * ln(omz) * x * pow(z, -1) * LMUF * NC + (-1) * ln(omz) * x * LMUF * pow(NC, -1) + ln(omz) * x * LMUF * NC + 1. / 2. * ln(omz) * x * z * LMUF * pow(NC, -1) + (-1) * 1. / 2. * ln(omz) * x * z * LMUF * NC + 0)
                  # Order 001:
                  tmp += ( 19. / 8. * pow(z, -1) * LMUA * pow(NC, -1) + (-1) * 19. / 8. * pow(z, -1) * LMUA * NC + (-1) * 9. / 4. * LMUA * pow(NC, -1) + 9. / 4. * LMUA * NC + 3. / 8. * z * LMUA * pow(NC, -1) + (-1) * 3. / 8. * z * LMUA * NC + (-1) * 15. / 4. * x * pow(z, -1) * LMUA * pow(NC, -1) + 15. / 4. * x * pow(z, -1) * LMUA * NC + 7. / 2. * x * LMUA * pow(NC, -1) + (-1) * 7. / 2. * x * LMUA * NC + (-1) * 1. / 4. * x * z * LMUA * pow(NC, -1) + 1. / 4. * x * z * LMUA * NC + 1. / 2. * ln(x) * pow(z, -1) * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(x) * pow(z, -1) * LMUA * NC + (-1) * 1. / 2. * ln(x) * LMUA * pow(NC, -1) + 1. / 2. * ln(x) * LMUA * NC + 1. / 4. * ln(x) * z * LMUA * pow(NC, -1) + (-1) * 1. / 4. * ln(x) * z * LMUA * NC + (-1) * ln(x) * x * pow(z, -1) * LMUA * pow(NC, -1) + ln(x) * x * pow(z, -1) * LMUA * NC + 0)
                  tmp += ( ln(x) * x * LMUA * pow(NC, -1) + (-1) * ln(x) * x * LMUA * NC + (-1) * 1. / 2. * ln(x) * x * z * LMUA * pow(NC, -1) + 1. / 2. * ln(x) * x * z * LMUA * NC + 1. / 2. * ln(z) * pow(z, -1) * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * pow(z, -1) * LMUA * NC + 1. / 2. * ln(z) * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(z) * LMUA * NC + 1. / 4. * ln(z) * z * LMUA * pow(NC, -1) + (-1) * 1. / 4. * ln(z) * z * LMUA * NC + (-1) * ln(z) * x * pow(z, -1) * LMUA * pow(NC, -1) + ln(z) * x * pow(z, -1) * LMUA * NC + (-1) * ln(z) * x * LMUA * pow(NC, -1) + ln(z) * x * LMUA * NC + (-1) * 1. / 2. * ln(z) * x * z * LMUA * pow(NC, -1) + 1. / 2. * ln(z) * x * z * LMUA * NC + (-1) * 1. / 2. * ln(omx) * pow(z, -1) * LMUA * pow(NC, -1) + 1. / 2. * ln(omx) * pow(z, -1) * LMUA * NC + 1. / 2. * ln(omx) * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(omx) * LMUA * NC + 0)
                  tmp += ( (-1) * 1. / 4. * ln(omx) * z * LMUA * pow(NC, -1) + 1. / 4. * ln(omx) * z * LMUA * NC + ln(omx) * x * pow(z, -1) * LMUA * pow(NC, -1) + (-1) * ln(omx) * x * pow(z, -1) * LMUA * NC + (-1) * ln(omx) * x * LMUA * pow(NC, -1) + ln(omx) * x * LMUA * NC + 1. / 2. * ln(omx) * x * z * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(omx) * x * z * LMUA * NC + (-1) * 1. / 2. * ln(omz) * pow(z, -1) * LMUA * pow(NC, -1) + 1. / 2. * ln(omz) * pow(z, -1) * LMUA * NC + 1. / 2. * ln(omz) * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(omz) * LMUA * NC + (-1) * 1. / 4. * ln(omz) * z * LMUA * pow(NC, -1) + 1. / 4. * ln(omz) * z * LMUA * NC + ln(omz) * x * pow(z, -1) * LMUA * pow(NC, -1) + (-1) * ln(omz) * x * pow(z, -1) * LMUA * NC + (-1) * ln(omz) * x * LMUA * pow(NC, -1) + ln(omz) * x * LMUA * NC + 1. / 2. * ln(omz) * x * z * LMUA * pow(NC, -1) + (-1) * 1. / 2. * ln(omz) * x * z * LMUA * NC + 0)
                  # Order 011:
                  tmp += ( 1. / 2. * pow(z, -1) * LMUA * LMUF * pow(NC, -1) + (-1) * 1. / 2. * pow(z, -1) * LMUA * LMUF * NC + (-1) * 1. / 2. * LMUA * LMUF * pow(NC, -1) + 1. / 2. * LMUA * LMUF * NC + 1. / 4. * z * LMUA * LMUF * pow(NC, -1) + (-1) * 1. / 4. * z * LMUA * LMUF * NC + (-1) * x * pow(z, -1) * LMUA * LMUF * pow(NC, -1) + x * pow(z, -1) * LMUA * LMUF * NC + x * LMUA * LMUF * pow(NC, -1) + (-1) * x * LMUA * LMUF * NC + (-1) * 1. / 2. * x * z * LMUA * LMUF * pow(NC, -1) + 1. / 2. * x * z * LMUA * LMUF * NC + 0)

                  res += ( tmp)
            
            return res
      
