from configs.eh import *

LMUR = 1
LMUF = 1
LMUA = 1


def cl_nnlo_g2g_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) + 2 * pow(NC, -1) - 2 * pow(NC, -1) * z + 4.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) - 8 * pow(NC, -1) * x * pow(z, -1) + 14 * pow(NC, -1) * x - 8 * pow(NC, -1) * x * pow(rln2, 2) - 1.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) - 6 * pow(NC, -1) * x * z + 8 * pow(NC, -1) * x * z * pow(rln2, 2) + 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) + 8 * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 16 * pow(NC, -1) * pow(x, 2) + 8 * pow(NC, -1) * pow(x, 2) * pow(rln2, 2) + 8 * pow(NC, -1) * pow(x, 2) * z - 8 * pow(NC, -1) * pow(x, 2) * z * pow(rln2, 2) + 2.0 / 3.0 * pow(NC, -1) * pow(x, 2) * z * pow(pi, 2) + 3.0 / 8.0 * NC * pow(x, -1) * pow(z, -1) - 3.0 / 8.0 * NC * pow(x, -1) + 2.0 / 3.0 * NC * pow(x, -1) * pow(pi, 2) * pow(opx, -1) - 2.0 / 3.0 * NC * pow(x, -1) * pow(pi, 2) - 2.0 / 3.0 * NC * pow(x, -1) * z * pow(pi, 2) * pow(opx, -1) + 2.0 / 3.0 * NC * pow(x, -1) * z * pow(pi, 2) + 3.0 / 8.0 * NC * pow(z, -2) - 7.0 / 4.0 * NC * pow(z, -1) - 5.0 / 4.0 * NC + 4.0 / 3.0 * NC * pow(pi, 2) * pow(opx, -1) - 2.0 / 3.0 * NC * pow(pi, 2) + 21.0 / 8.0 * NC * z - 4.0 / 3.0 * NC * z * pow(pi, 2) * pow(opx, -1) + 2.0 / 3.0 * NC * z * pow(pi, 2) - 3.0 / 8.0 * NC * x * pow(z, -2) - 25.0 / 4.0 * NC * x * pow(z, -1) - 8 * NC * x * pow(z, -1) * sqrtxz1 * rln2 + 5.0 / 4.0 * NC * x + 2.0 / 3.0 * NC * x * pow(pi, 2) * pow(opx, -1) + 1.0 / 3.0 * NC * x * pow(pi, 2) + 43.0 / 8.0 * NC * x * z - 8 * NC * x * z * pow(rln2, 2) - 2.0 / 3.0 * NC * x * z * pow(pi, 2) * pow(opx, -1) + 1.0 / 3.0 * NC * x * z * pow(pi, 2) + 61.0 / 8.0 * NC * pow(x, 2) * pow(z, -1) + 8 * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 + 3.0 / 8.0 * NC * pow(x, 2) - 8 * NC * pow(x, 2) * z + 8 * NC * pow(x, 2) * z * pow(rln2, 2)
                result += -2.0 / 3.0 * NC * pow(x, 2) * z * pow(pi, 2) + ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 - ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 - 15 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 - 3.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -2) * sqrtxz3 + 1.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 - 7.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 - 3.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(z, -2) * sqrtxz3 - 7.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * sqrtxz3 - 19.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(z, 2) * sqrtxz3 - 15.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 + 105.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * x * z * sqrtxz3 - 35.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, 2) * sqrtxz3
                result += -ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 + ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 + 3.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 1.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 + 7.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 + 3.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(z, -2) * sqrtxz3 + 7.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * sqrtxz3 + 19.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(z, 2) * sqrtxz3 + 15.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * x * z * sqrtxz3 + 35.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, 2) * sqrtxz3 - 1.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 + 1.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 + 3.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 1.0 / 8.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 + 7.0 / 8.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 + 3.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(z, -2) * sqrtxz3 + 7.0 / 4.0 * InvTanInt(-sqrtxz3) * NC * sqrtxz3 + 19.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(z, 2) * sqrtxz3 + 15.0 / 8.0 * InvTanInt(-sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 8.0 * InvTanInt(-sqrtxz3) * NC * x * z * sqrtxz3
                result += +35.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(x, 2) * sqrtxz3 - InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 + InvTanInt(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 + 3.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 1.0 / 4.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 + 7.0 / 4.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 + 3.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(z, -2) * sqrtxz3 + 7.0 / 2.0 * InvTanInt(z * sqrtxz3) * NC * sqrtxz3 + 19.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(z, 2) * sqrtxz3 + 15.0 / 4.0 * InvTanInt(z * sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 4.0 * InvTanInt(z * sqrtxz3) * NC * x * z * sqrtxz3 + 35.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, 2) * sqrtxz3 + 1.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 - 1.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * sqrtxz3 + 3.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 - 15.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 - 3.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(x, -2) * sqrtxz3 + 1.0 / 8.0 * InvTanInt(sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 - 7.0 / 8.0 * InvTanInt(sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 - 3.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(z, -2) * sqrtxz3 - 7.0 / 4.0 * InvTanInt(sqrtxz3) * NC * sqrtxz3 - 19.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(z, 2) * sqrtxz3 - 15.0 / 8.0 * InvTanInt(sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 + 105.0 / 8.0 * InvTanInt(sqrtxz3) * NC * x * z * sqrtxz3 - 35.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(x, 2) * sqrtxz3 + 12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2
                result += -12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 - 12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * rln2 + 12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * rln2 + 8 * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) * sqrtxz1 - 4 * ln(1 + sqrtxz1 - z) * NC * x * rln2 + 12 * ln(1 + sqrtxz1 - z) * NC * x * z * rln2 - 8 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 + 4 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * rln2 - 12 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z * rln2 - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * z + 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x - 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x * z - 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(x, 2) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(x, 2) * z - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * z + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * rln2
                result += +4 * ln(1 + sqrtxz1 + z) * NC * x * rln2 + 4 * ln(1 + sqrtxz1 + z) * NC * x * z * rln2 - 4 * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * rln2 - 4 * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z * rln2 + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * pow(x, -1) * z + 3.0 / 2.0 * ln(x) * pow(NC, -1) + 16 * ln(x) * pow(NC, -1) * z * pow(opx, -1) - 19.0 / 2.0 * ln(x) * pow(NC, -1) * z + 4 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 5.0 / 2.0 * ln(x) * pow(NC, -1) * x - 8 * ln(x) * pow(NC, -1) * x * rln2 + 8 * ln(x) * pow(NC, -1) * x * z * pow(opx, -1) - 13.0 / 2.0 * ln(x) * pow(NC, -1) * x * z + 8 * ln(x) * pow(NC, -1) * x * z * rln2 - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, 2) * rln2 + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * z - 8 * ln(x) * pow(NC, -1) * pow(x, 2) * z * rln2 - 3.0 / 16.0 * ln(x) * NC * pow(x, -1) * pow(z, -1) + 8 * ln(x) * NC * pow(x, -1) * pow(opx, -1) - 125.0 / 16.0 * ln(x) * NC * pow(x, -1) - 8 * ln(x) * NC * pow(x, -1) * z * pow(opx, -1) + 8 * ln(x) * NC * pow(x, -1) * z + 3.0 / 16.0 * ln(x) * NC * pow(z, -2) - 1.0 / 8.0 * ln(x) * NC * pow(z, -1) + 16 * ln(x) * NC * pow(opx, -1) - 79.0 / 8.0 * ln(x) * NC - 16 * ln(x) * NC * z * pow(opx, -1) + 157.0 / 16.0 * ln(x) * NC * z + 3.0 / 16.0 * ln(x) * NC * x * pow(z, -2) - 49.0 / 8.0 * ln(x) * NC * x * pow(z, -1) - 4 * ln(x) * NC * x * pow(z, -1) * sqrtxz1 + 8 * ln(x) * NC * x * pow(opx, -1) - 7.0 / 8.0 * ln(x) * NC * x + 4 * ln(x) * NC * x * rln2 - 8 * ln(x) * NC * x * z * pow(opx, -1) + 109.0 / 16.0 * ln(x) * NC * x * z - 8 * ln(x) * NC * x * z * rln2 + 29.0 / 16.0 * ln(x) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(x) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 + 35.0 / 16.0 * ln(x) * NC * pow(x, 2) - 4 * ln(x) * NC * pow(x, 2) * rln2 - 4 * ln(x) * NC * pow(x, 2) * z + 8 * ln(x) * NC * pow(x, 2) * z * rln2
                result += +4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z - 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x + 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x * z + 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * z - 4 * ln(x) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z - 4 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC + 4 * ln(x) * ln(1 + x * pow(z, -1)) * NC * z * pow(opx, -1)
                result += -2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * x * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * x + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * x * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * x * z - 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * z - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * z * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * z - 2 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) + 2 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) * z - 4 * ln(x) * ln(1 + x * z) * NC * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * NC + 4 * ln(x) * ln(1 + x * z) * NC * z * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * NC * z - 2 * ln(x) * ln(1 + x * z) * NC * x * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * NC * x + 2 * ln(x) * ln(1 + x * z) * NC * x * z * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * NC * pow(x, 2) * z - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * z + 2 * ln(x) * ln(z + x) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(x) * ln(z + x) * NC * x + 2 * ln(x) * ln(z + x) * NC * x * z - 2 * ln(x) * ln(z + x) * NC * pow(x, 2) - 2 * ln(x) * ln(z + x) * NC * pow(x, 2) * z - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z - 6 * pow(ln(x), 2) * pow(NC, -1) * z * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * z + pow(ln(x), 2) * pow(NC, -1) * x
                result += -3 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(opx, -1) - pow(ln(x), 2) * pow(NC, -1) * x * z + pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z - 3 * pow(ln(x), 2) * NC * pow(x, -1) * pow(opx, -1) + 3 * pow(ln(x), 2) * NC * pow(x, -1) + 3 * pow(ln(x), 2) * NC * pow(x, -1) * z * pow(opx, -1) - 3 * pow(ln(x), 2) * NC * pow(x, -1) * z - 6 * pow(ln(x), 2) * NC * pow(opx, -1) + 3 * pow(ln(x), 2) * NC + 6 * pow(ln(x), 2) * NC * z * pow(opx, -1) - 3 * pow(ln(x), 2) * NC * z - 3 * pow(ln(x), 2) * NC * x * pow(opx, -1) - pow(ln(x), 2) * NC * x + 3 * pow(ln(x), 2) * NC * x * z * pow(opx, -1) + pow(ln(x), 2) * NC * x * z - pow(ln(x), 2) * NC * pow(x, 2) + pow(ln(x), 2) * NC * pow(x, 2) * z + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z + 4 * ln(x) * ln(z) * pow(NC, -1) * z * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * z + 2 * ln(x) * ln(z) * pow(NC, -1) * x + 2 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * x * z - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(x) * ln(z) * NC * pow(x, -1) * pow(opx, -1) - 2 * ln(x) * ln(z) * NC * pow(x, -1) - 2 * ln(x) * ln(z) * NC * pow(x, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(z) * NC * pow(x, -1) * z + 4 * ln(x) * ln(z) * NC * pow(opx, -1) - 2 * ln(x) * ln(z) * NC - 4 * ln(x) * ln(z) * NC * z * pow(opx, -1) + 2 * ln(x) * ln(z) * NC * z + 2 * ln(x) * ln(z) * NC * x * pow(opx, -1) - 8 * ln(x) * ln(z) * NC * x - 2 * ln(x) * ln(z) * NC * x * z * pow(opx, -1) - 4 * ln(x) * ln(z) * NC * x * z + 2 * ln(x) * ln(z) * NC * pow(x, 2) + 2 * ln(x) * ln(z) * NC * pow(x, 2) * z - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z
                result += -8 * ln(x) * ln(omx) * pow(NC, -1) * z * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * z - 2 * ln(x) * ln(omx) * pow(NC, -1) * x - 4 * ln(x) * ln(omx) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * x * z + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * z - 4 * ln(x) * ln(omx) * NC * pow(x, -1) * pow(opx, -1) + 4 * ln(x) * ln(omx) * NC * pow(x, -1) + 4 * ln(x) * ln(omx) * NC * pow(x, -1) * z * pow(opx, -1) - 4 * ln(x) * ln(omx) * NC * pow(x, -1) * z - 8 * ln(x) * ln(omx) * NC * pow(opx, -1) + 4 * ln(x) * ln(omx) * NC + 8 * ln(x) * ln(omx) * NC * z * pow(opx, -1) - 4 * ln(x) * ln(omx) * NC * z - 4 * ln(x) * ln(omx) * NC * x * pow(opx, -1) + 2 * ln(x) * ln(omx) * NC * x + 4 * ln(x) * ln(omx) * NC * x * z * pow(opx, -1) - 2 * ln(x) * ln(omx) * NC * x * z - 2 * ln(x) * ln(omx) * NC * pow(x, 2) + 2 * ln(x) * ln(omx) * NC * pow(x, 2) * z - 2 * ln(x) * ln(omz) * pow(NC, -1) * x + 2 * ln(x) * ln(omz) * pow(NC, -1) * x * z + 2 * ln(x) * ln(omz) * NC * x - 2 * ln(x) * ln(omz) * NC * x * z + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z + 8 * ln(x) * ln(opx) * pow(NC, -1) * z * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * z + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * z * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * z + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(x) * ln(opx) * NC * pow(x, -1) * pow(opx, -1) - 4 * ln(x) * ln(opx) * NC * pow(x, -1) - 4 * ln(x) * ln(opx) * NC * pow(x, -1) * z * pow(opx, -1) + 4 * ln(x) * ln(opx) * NC * pow(x, -1) * z + 8 * ln(x) * ln(opx) * NC * pow(opx, -1) - 4 * ln(x) * ln(opx) * NC - 8 * ln(x) * ln(opx) * NC * z * pow(opx, -1) + 4 * ln(x) * ln(opx) * NC * z + 4 * ln(x) * ln(opx) * NC * x * pow(opx, -1)
                result += +4 * ln(x) * ln(opx) * NC * x - 4 * ln(x) * ln(opx) * NC * x * z * pow(opx, -1) - 4 * ln(x) * ln(opx) * NC * x * z + 4 * ln(x) * ln(opx) * NC * pow(x, 2) - 4 * ln(x) * ln(opx) * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * pow(NC, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * z - 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 9.0 / 2.0 * ln(z) * pow(NC, -1) * x - 8 * ln(z) * pow(NC, -1) * x * rln2 - 1.0 / 2.0 * ln(z) * pow(NC, -1) * x * z + 8 * ln(z) * pow(NC, -1) * x * z * rln2 + 8 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) + 8 * ln(z) * pow(NC, -1) * pow(x, 2) * rln2 - 8 * ln(z) * pow(NC, -1) * pow(x, 2) * z * rln2 + 3.0 / 16.0 * ln(z) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 16.0 * ln(z) * NC * pow(x, -1) - 3.0 / 16.0 * ln(z) * NC * pow(z, -2) - 1.0 / 8.0 * ln(z) * NC * pow(z, -1) - 17.0 / 8.0 * ln(z) * NC - 3.0 / 16.0 * ln(z) * NC * z + 3.0 / 16.0 * ln(z) * NC * x * pow(z, -2) + 49.0 / 8.0 * ln(z) * NC * x * pow(z, -1) - 4 * ln(z) * NC * x * pow(z, -1) * sqrtxz1 + 1.0 / 8.0 * ln(z) * NC * x - 4 * ln(z) * NC * x * rln2 + 3.0 / 16.0 * ln(z) * NC * x * z - 8 * ln(z) * NC * x * z * rln2 - 99.0 / 16.0 * ln(z) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(z) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 + 29.0 / 16.0 * ln(z) * NC * pow(x, 2) + 4 * ln(z) * NC * pow(x, 2) * rln2 + 8 * ln(z) * NC * pow(x, 2) * z * rln2 + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * z - 4 * ln(z) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x
                result += -4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x + 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * z - 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z + 4 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC - 4 * ln(z) * ln(1 + x * pow(z, -1)) * NC * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * x * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * x - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * x * z * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * x * z + 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * z - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z
                result += -4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * z * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * z - 2 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) + 2 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) * z - 4 * ln(z) * ln(1 + x * z) * NC * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * NC + 4 * ln(z) * ln(1 + x * z) * NC * z * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * NC * z - 2 * ln(z) * ln(1 + x * z) * NC * x * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * NC * x + 2 * ln(z) * ln(1 + x * z) * NC * x * z * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * NC * pow(x, 2) * z + 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * z - 2 * ln(z) * ln(z + x) * pow(NC, -1) * pow(x, 2) * z - 2 * ln(z) * ln(z + x) * NC * x - 2 * ln(z) * ln(z + x) * NC * x * z + 2 * ln(z) * ln(z + x) * NC * pow(x, 2) + 2 * ln(z) * ln(z + x) * NC * pow(x, 2) * z + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z + 2 * pow(ln(z), 2) * pow(NC, -1) * z * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * z - 4 * pow(ln(z), 2) * pow(NC, -1) * x + pow(ln(z), 2) * pow(NC, -1) * x * z * pow(opx, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * z + pow(ln(z), 2) * NC * pow(x, -1) * pow(opx, -1) - pow(ln(z), 2) * NC * pow(x, -1) - pow(ln(z), 2) * NC * pow(x, -1) * z * pow(opx, -1) + pow(ln(z), 2) * NC * pow(x, -1) * z + 2 * pow(ln(z), 2) * NC * pow(opx, -1) - pow(ln(z), 2) * NC - 2 * pow(ln(z), 2) * NC * z * pow(opx, -1) + pow(ln(z), 2) * NC * z + pow(ln(z), 2) * NC * x * pow(opx, -1)
                result += +4 * pow(ln(z), 2) * NC * x - pow(ln(z), 2) * NC * x * z * pow(opx, -1) - 2 * pow(ln(z), 2) * NC * pow(x, 2) - 2 * pow(ln(z), 2) * NC * pow(x, 2) * z - 4 * ln(z) * ln(omx) * pow(NC, -1) * x + 4 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(omx) * NC * x - 4 * ln(z) * ln(omx) * NC * pow(x, 2) - ln(omx) * pow(NC, -1) + ln(omx) * pow(NC, -1) * z - 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) + ln(omx) * pow(NC, -1) * x + 3 * ln(omx) * pow(NC, -1) * x * z + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * z + ln(omx) * NC - ln(omx) * NC * z + 4 * ln(omx) * NC * x * pow(z, -1) - ln(omx) * NC * x - 3 * ln(omx) * NC * x * z - 4 * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(omx) * NC * pow(x, 2) * z - ln(omz) * pow(NC, -1) + ln(omz) * pow(NC, -1) * z - 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) + ln(omz) * pow(NC, -1) * x + 3 * ln(omz) * pow(NC, -1) * x * z + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * z + ln(omz) * NC - ln(omz) * NC * z + 4 * ln(omz) * NC * x * pow(z, -1) - ln(omz) * NC * x - 3 * ln(omz) * NC * x * z - 4 * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(omz) * NC * pow(x, 2) * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(x, 2) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(x, 2) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2)
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * pow(x, 2) * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * z + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * pow(x, 2) * z - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z - 2 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) + 2 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) * z - 4 * Li2(-x * pow(z, -1)) * NC * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * NC + 4 * Li2(-x * pow(z, -1)) * NC * z * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * NC * z - 2 * Li2(-x * pow(z, -1)) * NC * x * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * NC * x * z * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * NC * x * z - 4 * Li2(-x * pow(z, -1)) * NC * pow(x, 2) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z + 8 * Li2(-x) * pow(NC, -1) * z * pow(opx, -1)
                result += -4 * Li2(-x) * pow(NC, -1) * z + 4 * Li2(-x) * pow(NC, -1) * x * z * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * x * z + 4 * Li2(-x) * pow(NC, -1) * pow(x, 2) * z + 4 * Li2(-x) * NC * pow(x, -1) * pow(opx, -1) - 4 * Li2(-x) * NC * pow(x, -1) - 4 * Li2(-x) * NC * pow(x, -1) * z * pow(opx, -1) + 4 * Li2(-x) * NC * pow(x, -1) * z + 8 * Li2(-x) * NC * pow(opx, -1) - 4 * Li2(-x) * NC - 8 * Li2(-x) * NC * z * pow(opx, -1) + 4 * Li2(-x) * NC * z + 4 * Li2(-x) * NC * x * pow(opx, -1) + 4 * Li2(-x) * NC * x - 4 * Li2(-x) * NC * x * z * pow(opx, -1) - 4 * Li2(-x) * NC * x * z + 4 * Li2(-x) * NC * pow(x, 2) - 4 * Li2(-x) * NC * pow(x, 2) * z - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z - 4 * Li2(-x * z) * pow(NC, -1) * z * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * z - 2 * Li2(-x * z) * pow(NC, -1) * x * z * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, 2) * z - 2 * Li2(-x * z) * NC * pow(x, -1) * pow(opx, -1) + 2 * Li2(-x * z) * NC * pow(x, -1) + 2 * Li2(-x * z) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * Li2(-x * z) * NC * pow(x, -1) * z - 4 * Li2(-x * z) * NC * pow(opx, -1) + 2 * Li2(-x * z) * NC + 4 * Li2(-x * z) * NC * z * pow(opx, -1) - 2 * Li2(-x * z) * NC * z - 2 * Li2(-x * z) * NC * x * pow(opx, -1) - 4 * Li2(-x * z) * NC * x + 2 * Li2(-x * z) * NC * x * z * pow(opx, -1) + 4 * Li2(-x * z) * NC * pow(x, 2) * z - 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * z - 8 * Li2(x) * pow(NC, -1) * z * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * z - 4 * Li2(x) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, 2) - 2 * Li2(x) * pow(NC, -1) * pow(x, 2) * z - 4 * Li2(x) * NC * pow(x, -1) * pow(opx, -1)
                result += +4 * Li2(x) * NC * pow(x, -1) + 4 * Li2(x) * NC * pow(x, -1) * z * pow(opx, -1) - 4 * Li2(x) * NC * pow(x, -1) * z - 8 * Li2(x) * NC * pow(opx, -1) + 4 * Li2(x) * NC + 8 * Li2(x) * NC * z * pow(opx, -1) - 4 * Li2(x) * NC * z - 4 * Li2(x) * NC * x * pow(opx, -1) + 4 * Li2(x) * NC * x * z * pow(opx, -1) - 2 * Li2(x) * NC * pow(x, 2) + 2 * Li2(x) * NC * pow(x, 2) * z + 4 * Li2(z) * pow(NC, -1) * x - 4 * Li2(z) * pow(NC, -1) * pow(x, 2) - 4 * Li2(z) * NC * x + 4 * Li2(z) * NC * pow(x, 2)
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += 4 * LMUA * pow(NC, -1) * x * pow(z, -1) - 2 * LMUA * pow(NC, -1) * x - 2 * LMUA * pow(NC, -1) * x * z - 4 * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * LMUA * pow(NC, -1) * pow(x, 2) + 2 * LMUA * pow(NC, -1) * pow(x, 2) * z - 4 * LMUA * NC * x * pow(z, -1) + 2 * LMUA * NC * x + 2 * LMUA * NC * x * z + 4 * LMUA * NC * pow(x, 2) * pow(z, -1) - 2 * LMUA * NC * pow(x, 2) - 2 * LMUA * NC * pow(x, 2) * z + 4 * ln(z) * LMUA * pow(NC, -1) * x - 4 * ln(z) * LMUA * pow(NC, -1) * pow(x, 2) - 4 * ln(z) * LMUA * NC * x + 4 * ln(z) * LMUA * NC * pow(x, 2)
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += +LMUF * pow(NC, -1) - LMUF * pow(NC, -1) * z + LMUF * pow(NC, -1) * x - LMUF * pow(NC, -1) * x * z - 2 * LMUF * pow(NC, -1) * pow(x, 2) + 2 * LMUF * pow(NC, -1) * pow(x, 2) * z - LMUF * NC + LMUF * NC * z - LMUF * NC * x + LMUF * NC * x * z + 2 * LMUF * NC * pow(x, 2) - 2 * LMUF * NC * pow(x, 2) * z + +2 * ln(x) * LMUF * pow(NC, -1) * x - 2 * ln(x) * LMUF * pow(NC, -1) * x * z - 2 * ln(x) * LMUF * NC * x + 2 * ln(x) * LMUF * NC * x * z
        else:
            result = 0
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_g2q_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 1.0 / 8.0 * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) - 1.0 / 8.0 * pow(NC, -1) * pow(x, -1) - 1.0 / 2.0 * pow(NC, -1) * pow(z, -1) - 1.0 / 8.0 * pow(NC, -1) * pow(poly2, -1) + 3.0 / 8.0 * pow(NC, -1) - 1.0 / 2.0 * pow(NC, -1) * z - 5.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) - 1.0 / 4.0 * pow(NC, -1) * x * pow(poly2, -1) - 2 * pow(NC, -1) * x * pow(omz, -1) + pow(NC, -1) * x * pow(omxmz, -1) + 37.0 / 8.0 * pow(NC, -1) * x + 3 * pow(NC, -1) * x * pow(pi, 2) + 17.0 / 2.0 * pow(NC, -1) * x * z - pow(NC, -1) * x * z * pow(pi, 2) + 3 * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 1.0 / 4.0 * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) + 2 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 2 * pow(NC, -1) * pow(x, 2) * pow(omxmz, -1) - 39.0 / 8.0 * pow(NC, -1) * pow(x, 2) - 7.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 8 * pow(NC, -1) * pow(x, 2) * z + 1.0 / 8.0 * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) + pow(NC, -1) * pow(x, 3) * pow(omxmz, -1) - 1.0 / 8.0 * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) - 1.0 / 8.0 * NC * pow(x, -1) * pow(poly2, -1) + 169.0 / 72.0 * NC * pow(x, -1) + 1.0 / 2.0 * NC * pow(z, -1) + 1.0 / 8.0 * NC * pow(poly2, -1) - 409.0 / 24.0 * NC + 41.0 / 2.0 * NC * z + 1.0 / 2.0 * NC * x * pow(z, -1) + 1.0 / 4.0 * NC * x * pow(poly2, -1) - NC * x * pow(omxmz, -1) - 95.0 / 24.0 * NC * x - 17.0 / 3.0 * NC * x * pow(pi, 2) - 57.0 / 2.0 * NC * x * z + NC * x * z * pow(pi, 2) - NC * pow(x, 2) * pow(z, -1) - 1.0 / 4.0 * NC * pow(x, 2) * pow(poly2, -1) + 2 * NC * pow(x, 2) * pow(omxmz, -1) + 1343.0 / 72.0 * NC * pow(x, 2) + 3 * NC * pow(x, 2) * pow(pi, 2) + 8 * NC * pow(x, 2) * z - 1.0 / 8.0 * NC * pow(x, 3) * pow(poly2, -1) - NC * pow(x, 3) * pow(omxmz, -1) + 1.0 / 8.0 * NC * pow(x, 4) * pow(poly2, -1)
                result += +3.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) - 3.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) - 3.0 / 16.0 * ln(x) * pow(NC, -1) * pow(poly2, -2) + 1.0 / 16.0 * ln(x) * pow(NC, -1) * pow(poly2, -1) + 1.0 / 2.0 * ln(x) * pow(NC, -1) + 1.0 / 4.0 * ln(x) * pow(NC, -1) * z - 7 * ln(x) * pow(NC, -1) * x * pow(z, -1) - 9.0 / 16.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -2) - 3.0 / 8.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -1) - 6 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - ln(x) * pow(NC, -1) * x * pow(omxmz, -1) + ln(x) * pow(NC, -1) * x + 17.0 / 4.0 * ln(x) * pow(NC, -1) * x * z + ln(x) * pow(NC, -1) * x * pow(z, 3) * pow(xmz, -2) + 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 9.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) + 5.0 / 8.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) + 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 2 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(xmz, -1) + ln(x) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -2) + ln(x) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -1) - 7.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * z + 9.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) + 9.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) + 5 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(xmz, -1)
                result += -2 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(omxmz, -2) - 9.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) - 11.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) - ln(x) * pow(NC, -1) * pow(x, 4) * pow(xmz, -2) + ln(x) * pow(NC, -1) * pow(x, 4) * pow(omxmz, -2) - 3.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) + 3.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) - 3.0 / 16.0 * ln(x) * NC * pow(x, -1) * pow(poly2, -2) - 5.0 / 16.0 * ln(x) * NC * pow(x, -1) * pow(poly2, -1) + 1.0 / 2.0 * ln(x) * NC * pow(x, -1) + 3.0 / 16.0 * ln(x) * NC * pow(poly2, -2) + 7.0 / 16.0 * ln(x) * NC * pow(poly2, -1) - 2 * ln(x) * NC + 39.0 / 4.0 * ln(x) * NC * z + ln(x) * NC * x * pow(z, -1) + 9.0 / 16.0 * ln(x) * NC * x * pow(poly2, -2) + 3.0 / 8.0 * ln(x) * NC * x * pow(poly2, -1) + ln(x) * NC * x * pow(omxmz, -1) + 19.0 / 2.0 * ln(x) * NC * x + 23.0 / 4.0 * ln(x) * NC * x * z - ln(x) * NC * x * pow(z, 3) * pow(xmz, -2) - 9.0 / 16.0 * ln(x) * NC * pow(x, 2) * pow(poly2, -2) - 5.0 / 8.0 * ln(x) * NC * pow(x, 2) * pow(poly2, -1) - ln(x) * NC * pow(x, 2) * pow(omxmz, -2) - 3 * ln(x) * NC * pow(x, 2) * pow(omxmz, -1) - 64 * ln(x) * NC * pow(x, 2) + 4 * ln(x) * NC * pow(x, 2) * z - 9.0 / 16.0 * ln(x) * NC * pow(x, 3) * pow(poly2, -2) - 1.0 / 16.0 * ln(x) * NC * pow(x, 3) * pow(poly2, -1) - 3 * ln(x) * NC * pow(x, 3) * pow(xmz, -1) + 2 * ln(x) * NC * pow(x, 3) * pow(omxmz, -2) + 2 * ln(x) * NC * pow(x, 3) * pow(omxmz, -1) + 9.0 / 16.0 * ln(x) * NC * pow(x, 4) * pow(poly2, -2) + 3.0 / 16.0 * ln(x) * NC * pow(x, 4) * pow(poly2, -1) + ln(x) * NC * pow(x, 4) * pow(xmz, -2) - ln(x) * NC * pow(x, 4) * pow(omxmz, -2) + 3.0 / 16.0 * ln(x) * NC * pow(x, 5) * pow(poly2, -2) - 3.0 / 16.0 * ln(x) * NC * pow(x, 6) * pow(poly2, -2)
                result += +3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 1.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 31.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 29.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 73.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 7.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 5.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(sqrtxz2, -1) + 5.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * z * pow(sqrtxz2, -1) + 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 151.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) + 51.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) + 129.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - 9.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 193.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += -1.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 31.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) + 29.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) - 9.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 5.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 73.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 7.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1)
                result += +5.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(sqrtxz2, -1) - 5.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 151.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) - 51.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 129.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 193.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(x) * ln(1 + x) * NC * x * z + 4 * ln(x) * ln(1 + x) * NC * pow(x, 2) * z - 15 * pow(ln(x), 2) * pow(NC, -1) * x + pow(ln(x), 2) * pow(NC, -1) * x * z + 13 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z + 29 * pow(ln(x), 2) * NC * x
                result += -pow(ln(x), 2) * NC * x * z - 13 * pow(ln(x), 2) * NC * pow(x, 2) - 3 * pow(ln(x), 2) * NC * pow(x, 2) * z + 10 * ln(x) * ln(z) * pow(NC, -1) * x + 2 * ln(x) * ln(z) * pow(NC, -1) * x * z - 14 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) - 22 * ln(x) * ln(z) * NC * x - 2 * ln(x) * ln(z) * NC * x * z + 18 * ln(x) * ln(z) * NC * pow(x, 2) + 22 * ln(x) * ln(omx) * pow(NC, -1) * x + 2 * ln(x) * ln(omx) * pow(NC, -1) * x * z - 22 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * z - 18 * ln(x) * ln(omx) * NC * x - 2 * ln(x) * ln(omx) * NC * x * z + 18 * ln(x) * ln(omx) * NC * pow(x, 2) + 2 * ln(x) * ln(omx) * NC * pow(x, 2) * z + 20 * ln(x) * ln(omz) * pow(NC, -1) * x - 2 * ln(x) * ln(omz) * pow(NC, -1) * x * z - 20 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) - 40 * ln(x) * ln(omz) * NC * x + 2 * ln(x) * ln(omz) * NC * x * z + 24 * ln(x) * ln(omz) * NC * pow(x, 2) + 3.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) - 3.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) + 3.0 / 16.0 * ln(z) * pow(NC, -1) * pow(poly2, -2) - 1.0 / 16.0 * ln(z) * pow(NC, -1) * pow(poly2, -1) + 1.0 / 4.0 * ln(z) * pow(NC, -1) - 7.0 / 4.0 * ln(z) * pow(NC, -1) * z + 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 9.0 / 16.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -2) - 3.0 / 8.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -1) + 4 * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 15.0 / 4.0 * ln(z) * pow(NC, -1) * x + 11.0 / 4.0 * ln(z) * pow(NC, -1) * x * z - ln(z) * pow(NC, -1) * x * pow(z, 3) * pow(xmz, -2) - 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 9.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) - 5.0 / 8.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(xmz, -1)
                result += +11.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) + 9.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) + 9.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) - 5 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(xmz, -1) + 9.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) + 11.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) + ln(z) * pow(NC, -1) * pow(x, 4) * pow(xmz, -2) - 3.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) - 3.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) - 3.0 / 16.0 * ln(z) * NC * pow(x, -1) * pow(poly2, -2) - 5.0 / 16.0 * ln(z) * NC * pow(x, -1) * pow(poly2, -1) + 11.0 / 6.0 * ln(z) * NC * pow(x, -1) - 3.0 / 16.0 * ln(z) * NC * pow(poly2, -2) - 7.0 / 16.0 * ln(z) * NC * pow(poly2, -1) - 27.0 / 4.0 * ln(z) * NC + 47.0 / 4.0 * ln(z) * NC * z + 9.0 / 16.0 * ln(z) * NC * x * pow(poly2, -2) + 3.0 / 8.0 * ln(z) * NC * x * pow(poly2, -1) - 95.0 / 4.0 * ln(z) * NC * x - 51.0 / 4.0 * ln(z) * NC * x * z + ln(z) * NC * x * pow(z, 3) * pow(xmz, -2) + 9.0 / 16.0 * ln(z) * NC * pow(x, 2) * pow(poly2, -2) + 5.0 / 8.0 * ln(z) * NC * pow(x, 2) * pow(poly2, -1) + 80.0 / 3.0 * ln(z) * NC * pow(x, 2) - 9.0 / 16.0 * ln(z) * NC * pow(x, 3) * pow(poly2, -2) - 1.0 / 16.0 * ln(z) * NC * pow(x, 3) * pow(poly2, -1) + 3 * ln(z) * NC * pow(x, 3) * pow(xmz, -1) - 9.0 / 16.0 * ln(z) * NC * pow(x, 4) * pow(poly2, -2) - 3.0 / 16.0 * ln(z) * NC * pow(x, 4) * pow(poly2, -1) - ln(z) * NC * pow(x, 4) * pow(xmz, -2) + 3.0 / 16.0 * ln(z) * NC * pow(x, 5) * pow(poly2, -2) + 3.0 / 16.0 * ln(z) * NC * pow(x, 6) * pow(poly2, -2) - 2 * pow(ln(z), 2) * pow(NC, -1) * x + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2)
                result += +3 * pow(ln(z), 2) * NC * x - 3 * pow(ln(z), 2) * NC * pow(x, 2) - 8 * ln(z) * ln(omx) * pow(NC, -1) * x + 8 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) + 10 * ln(z) * ln(omx) * NC * x - 10 * ln(z) * ln(omx) * NC * pow(x, 2) - 14 * ln(z) * ln(omz) * pow(NC, -1) * x + 14 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) + 22 * ln(z) * ln(omz) * NC * x - 22 * ln(z) * ln(omz) * NC * pow(x, 2) - ln(omx) * pow(NC, -1) * z + 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + ln(omx) * pow(NC, -1) * x - 3 * ln(omx) * pow(NC, -1) * x * z - 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omx) * pow(NC, -1) * pow(x, 2) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * z + 4.0 / 3.0 * ln(omx) * NC * pow(x, -1) - 4 * ln(omx) * NC + ln(omx) * NC * z - 29 * ln(omx) * NC * x + 3 * ln(omx) * NC * x * z + 95.0 / 3.0 * ln(omx) * NC * pow(x, 2) - 4 * ln(omx) * NC * pow(x, 2) * z - 8 * pow(ln(omx), 2) * pow(NC, -1) * x + 8 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) + 6 * pow(ln(omx), 2) * NC * x - 6 * pow(ln(omx), 2) * NC * pow(x, 2) - 14 * ln(omx) * ln(omz) * pow(NC, -1) * x + 14 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) + 16 * ln(omx) * ln(omz) * NC * x - 16 * ln(omx) * ln(omz) * NC * pow(x, 2) - ln(omz) * pow(NC, -1) * z + 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 2 * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + ln(omz) * pow(NC, -1) * x * pow(omxmz, -1) + 4 * ln(omz) * pow(NC, -1) * x - 3 * ln(omz) * pow(NC, -1) * x * z - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -2) - ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -1)
                result += -4 * ln(omz) * pow(NC, -1) * pow(x, 2) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(omxmz, -2) - ln(omz) * pow(NC, -1) * pow(x, 4) * pow(omxmz, -2) + 4.0 / 3.0 * ln(omz) * NC * pow(x, -1) - 4 * ln(omz) * NC + ln(omz) * NC * z - ln(omz) * NC * x * pow(omxmz, -1) - 30 * ln(omz) * NC * x + 3 * ln(omz) * NC * x * z + ln(omz) * NC * pow(x, 2) * pow(omxmz, -2) + 3 * ln(omz) * NC * pow(x, 2) * pow(omxmz, -1) + 98.0 / 3.0 * ln(omz) * NC * pow(x, 2) - 4 * ln(omz) * NC * pow(x, 2) * z - 2 * ln(omz) * NC * pow(x, 3) * pow(omxmz, -2) - 2 * ln(omz) * NC * pow(x, 3) * pow(omxmz, -1) + ln(omz) * NC * pow(x, 4) * pow(omxmz, -2) - 7 * pow(ln(omz), 2) * pow(NC, -1) * x + 7 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) + 10 * pow(ln(omz), 2) * NC * x - 10 * pow(ln(omz), 2) * NC * pow(x, 2) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 31.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 73.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 7.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) + 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * z * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 151.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) + 51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1) + 129.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - 9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 193.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += +1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 31.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) + 29.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1)
                result += -9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 73.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 7.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) - 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 151.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1)
                result += -51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 193.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1)
                result += +3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 31.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) + 29.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) - 9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 73.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 7.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1)
                result += +5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) - 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 151.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) - 51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 193.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += +1.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 31.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 29.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + 9.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + 73.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 7.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 5.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) + 5.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * z * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 151.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) + 51.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) + 129.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - 9.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - 193.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x
                result += -2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) - 6 * Li2(1 - x * pow(z, -1)) * NC * x + 6 * Li2(1 - x * pow(z, -1)) * NC * pow(x, 2) + 4 * Li2(-x) * pow(NC, -1) * x - 4 * Li2(-x) * pow(NC, -1) * x * z + 4 * Li2(-x) * pow(NC, -1) * pow(x, 2) - 4 * Li2(-x) * pow(NC, -1) * pow(x, 2) * z + 4 * Li2(-x) * NC * x * z + 4 * Li2(-x) * NC * pow(x, 2) * z + 2 * Li2(x) * pow(NC, -1) * x + 4 * Li2(x) * pow(NC, -1) * x * z - 2 * Li2(x) * pow(NC, -1) * pow(x, 2) - 2 * Li2(x) * pow(NC, -1) * pow(x, 2) * z + 18 * Li2(x) * NC * x - 4 * Li2(x) * NC * x * z - 2 * Li2(x) * NC * pow(x, 2) + 2 * Li2(x) * NC * pow(x, 2) * z - 8 * Li2(z) * pow(NC, -1) * x + 8 * Li2(z) * pow(NC, -1) * pow(x, 2) + 8 * Li2(z) * NC * x - 8 * Li2(z) * NC * pow(x, 2)
            if z < round(1 - x, ndecimals) and z < x:
                result += 2 * pow(NC, -1) * x * pow(z, -1) + 2 * pow(NC, -1) * x * pow(omz, -1) - 7.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) - 2 * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 4 * NC * x + 2.0 / 3.0 * NC * x * pow(pi, 2) + 4 * NC * pow(x, 2) - 2.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) + 6 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 6 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * NC * x + 12 * ln(x) * NC * pow(x, 2) + 13 * pow(ln(x), 2) * pow(NC, -1) * x - 13 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 12 * pow(ln(x), 2) * NC * x + 12 * pow(ln(x), 2) * NC * pow(x, 2) - 16 * ln(x) * ln(z) * pow(NC, -1) * x + 16 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 20 * ln(x) * ln(z) * NC * x - 20 * ln(x) * ln(z) * NC * pow(x, 2) - 22 * ln(x) * ln(omx) * pow(NC, -1) * x + 22 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 16 * ln(x) * ln(omx) * NC * x - 16 * ln(x) * ln(omx) * NC * pow(x, 2) - 20 * ln(x) * ln(omz) * pow(NC, -1) * x + 20 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 20 * ln(x) * ln(omz) * NC * x - 20 * ln(x) * ln(omz) * NC * pow(x, 2) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x - 2 * ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(xmz) * NC * x + 4 * ln(x) * ln(xmz) * NC * pow(x, 2) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(omxmz) * NC * x + 4 * ln(x) * ln(omxmz) * NC * pow(x, 2) - 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(z) * pow(NC, -1) * x * pow(omz, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * NC * x - 8 * ln(z) * NC * pow(x, 2)
                result += +5 * pow(ln(z), 2) * pow(NC, -1) * x - 5 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 8 * pow(ln(z), 2) * NC * x + 8 * pow(ln(z), 2) * NC * pow(x, 2) + 12 * ln(z) * ln(omx) * pow(NC, -1) * x - 12 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 8 * ln(z) * ln(omx) * NC * x + 8 * ln(z) * ln(omx) * NC * pow(x, 2) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x - 8 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 16 * ln(z) * ln(omz) * NC * x + 16 * ln(z) * ln(omz) * NC * pow(x, 2) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x + 2 * ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(xmz) * NC * x - 4 * ln(z) * ln(xmz) * NC * pow(x, 2) - 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * NC * x - 4 * ln(omx) * NC * pow(x, 2) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x - 8 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 2 * pow(ln(omx), 2) * NC * x + 2 * pow(ln(omx), 2) * NC * pow(x, 2) + 14 * ln(omx) * ln(omz) * pow(NC, -1) * x - 14 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 12 * ln(omx) * ln(omz) * NC * x + 12 * ln(omx) * ln(omz) * NC * pow(x, 2) - 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(omz) * NC * x - 8 * ln(omz) * NC * pow(x, 2) + 6 * pow(ln(omz), 2) * pow(NC, -1) * x - 6 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 6 * pow(ln(omz), 2) * NC * x + 6 * pow(ln(omz), 2) * NC * pow(x, 2) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(omz) * ln(omxmz) * NC * x
                result += -4 * ln(omz) * ln(omxmz) * NC * pow(x, 2) + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 4 * Li2(omx * pow(omz, -1)) * NC * x - 4 * Li2(omx * pow(omz, -1)) * NC * pow(x, 2) - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) - 4 * Li2(z * pow(omx, -1)) * NC * x + 4 * Li2(z * pow(omx, -1)) * NC * pow(x, 2) + 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2)
            if z > round(1 - x, ndecimals) and z < x:
                result += 2 * pow(NC, -1) * x * pow(z, -1) + 2 * pow(NC, -1) * x * pow(omz, -1) - 7.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) - 2 * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 4 * NC * x + 2.0 / 3.0 * NC * x * pow(pi, 2) + 4 * NC * pow(x, 2) - 2.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) + 6 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 6 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * NC * x + 12 * ln(x) * NC * pow(x, 2) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(-omxmz) * NC * x + 4 * ln(x) * ln(-omxmz) * NC * pow(x, 2) + 12 * pow(ln(x), 2) * pow(NC, -1) * x - 12 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 14 * pow(ln(x), 2) * NC * x + 14 * pow(ln(x), 2) * NC * pow(x, 2) - 18 * ln(x) * ln(z) * pow(NC, -1) * x + 18 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 24 * ln(x) * ln(z) * NC * x - 24 * ln(x) * ln(z) * NC * pow(x, 2) - 20 * ln(x) * ln(omx) * pow(NC, -1) * x + 20 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 12 * ln(x) * ln(omx) * NC * x - 12 * ln(x) * ln(omx) * NC * pow(x, 2) - 18 * ln(x) * ln(omz) * pow(NC, -1) * x + 18 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 24 * ln(x) * ln(omz) * NC * x - 24 * ln(x) * ln(omz) * NC * pow(x, 2) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x - 2 * ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(xmz) * NC * x + 4 * ln(x) * ln(xmz) * NC * pow(x, 2) - 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(z) * pow(NC, -1) * x * pow(omz, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * NC * x - 8 * ln(z) * NC * pow(x, 2)
                result += +5 * pow(ln(z), 2) * pow(NC, -1) * x - 5 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 8 * pow(ln(z), 2) * NC * x + 8 * pow(ln(z), 2) * NC * pow(x, 2) + 12 * ln(z) * ln(omx) * pow(NC, -1) * x - 12 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 8 * ln(z) * ln(omx) * NC * x + 8 * ln(z) * ln(omx) * NC * pow(x, 2) + 10 * ln(z) * ln(omz) * pow(NC, -1) * x - 10 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 20 * ln(z) * ln(omz) * NC * x + 20 * ln(z) * ln(omz) * NC * pow(x, 2) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x + 2 * ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(xmz) * NC * x - 4 * ln(z) * ln(xmz) * NC * pow(x, 2) - 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * NC * x - 4 * ln(omx) * NC * pow(x, 2) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x - 8 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 2 * pow(ln(omx), 2) * NC * x + 2 * pow(ln(omx), 2) * NC * pow(x, 2) + 12 * ln(omx) * ln(omz) * pow(NC, -1) * x - 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 8 * ln(omx) * ln(omz) * NC * x + 8 * ln(omx) * ln(omz) * NC * pow(x, 2) - 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(omz) * NC * x - 8 * ln(omz) * NC * pow(x, 2) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(omz) * ln(-omxmz) * NC * x - 4 * ln(omz) * ln(-omxmz) * NC * pow(x, 2) + 5 * pow(ln(omz), 2) * pow(NC, -1) * x - 5 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 8 * pow(ln(omz), 2) * NC * x
                result += +8 * pow(ln(omz), 2) * NC * pow(x, 2) - 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) + 4 * Li2(pow(z, -1) * omx) * NC * x - 4 * Li2(pow(z, -1) * omx) * NC * pow(x, 2) + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 4 * Li2(omx * pow(omz, -1)) * NC * x - 4 * Li2(omx * pow(omz, -1)) * NC * pow(x, 2) - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2)
            if z < round(1 - x, ndecimals) and z > x:
                result += 2 * pow(NC, -1) * x * pow(z, -1) + 2 * pow(NC, -1) * x * pow(omz, -1) - 7.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) - 2 * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 4 * NC * x + 10.0 / 3.0 * NC * x * pow(pi, 2) + 4 * NC * pow(x, 2) - 10.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) + 6 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 6 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * NC * x + 12 * ln(x) * NC * pow(x, 2) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(-xmz) * NC * x + 4 * ln(x) * ln(-xmz) * NC * pow(x, 2) + 14 * pow(ln(x), 2) * pow(NC, -1) * x - 14 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 14 * pow(ln(x), 2) * NC * x + 14 * pow(ln(x), 2) * NC * pow(x, 2) - 18 * ln(x) * ln(z) * pow(NC, -1) * x + 18 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 24 * ln(x) * ln(z) * NC * x - 24 * ln(x) * ln(z) * NC * pow(x, 2) - 24 * ln(x) * ln(omx) * pow(NC, -1) * x + 24 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 12 * ln(x) * ln(omx) * NC * x - 12 * ln(x) * ln(omx) * NC * pow(x, 2) - 18 * ln(x) * ln(omz) * pow(NC, -1) * x + 18 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 24 * ln(x) * ln(omz) * NC * x - 24 * ln(x) * ln(omz) * NC * pow(x, 2) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(omxmz) * NC * x + 4 * ln(x) * ln(omxmz) * NC * pow(x, 2) - 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(z) * pow(NC, -1) * x * pow(omz, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * NC * x
                result += -8 * ln(z) * NC * pow(x, 2) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x + 2 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(-xmz) * NC * x - 4 * ln(z) * ln(-xmz) * NC * pow(x, 2) + 6 * pow(ln(z), 2) * pow(NC, -1) * x - 6 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 10 * pow(ln(z), 2) * NC * x + 10 * pow(ln(z), 2) * NC * pow(x, 2) + 14 * ln(z) * ln(omx) * pow(NC, -1) * x - 14 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 4 * ln(z) * ln(omx) * NC * x + 4 * ln(z) * ln(omx) * NC * pow(x, 2) + 6 * ln(z) * ln(omz) * pow(NC, -1) * x - 6 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 20 * ln(z) * ln(omz) * NC * x + 20 * ln(z) * ln(omz) * NC * pow(x, 2) - 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * NC * x - 4 * ln(omx) * NC * pow(x, 2) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x - 8 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 6 * pow(ln(omx), 2) * NC * x + 6 * pow(ln(omx), 2) * NC * pow(x, 2) + 14 * ln(omx) * ln(omz) * pow(NC, -1) * x - 14 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 4 * ln(omx) * ln(omz) * NC * x + 4 * ln(omx) * ln(omz) * NC * pow(x, 2) - 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(omz) * NC * x - 8 * ln(omz) * NC * pow(x, 2) + 6 * pow(ln(omz), 2) * pow(NC, -1) * x - 6 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 10 * pow(ln(omz), 2) * NC * x + 10 * pow(ln(omz), 2) * NC * pow(x, 2) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2)
                result += +4 * ln(omz) * ln(omxmz) * NC * x - 4 * ln(omz) * ln(omxmz) * NC * pow(x, 2) - 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 4 * Li2(pow(omx, -1) * omz) * NC * x + 4 * Li2(pow(omx, -1) * omz) * NC * pow(x, 2) - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) - 4 * Li2(z * pow(omx, -1)) * NC * x + 4 * Li2(z * pow(omx, -1)) * NC * pow(x, 2) + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) + 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2)
            if z > round(1 - x, ndecimals) and z > x:
                result += 2 * pow(NC, -1) * x * pow(z, -1) + 2 * pow(NC, -1) * x * pow(omz, -1) - 7.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) - 2 * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 4 * NC * x + 2.0 / 3.0 * NC * x * pow(pi, 2) + 4 * NC * pow(x, 2) - 2.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) + 6 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 6 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 6 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * NC * x + 12 * ln(x) * NC * pow(x, 2) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(-omxmz) * NC * x + 4 * ln(x) * ln(-omxmz) * NC * pow(x, 2) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) - 4 * ln(x) * ln(-xmz) * NC * x + 4 * ln(x) * ln(-xmz) * NC * pow(x, 2) + 13 * pow(ln(x), 2) * pow(NC, -1) * x - 13 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 12 * pow(ln(x), 2) * NC * x + 12 * pow(ln(x), 2) * NC * pow(x, 2) - 20 * ln(x) * ln(z) * pow(NC, -1) * x + 20 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 20 * ln(x) * ln(z) * NC * x - 20 * ln(x) * ln(z) * NC * pow(x, 2) - 22 * ln(x) * ln(omx) * pow(NC, -1) * x + 22 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 16 * ln(x) * ln(omx) * NC * x - 16 * ln(x) * ln(omx) * NC * pow(x, 2) - 16 * ln(x) * ln(omz) * pow(NC, -1) * x + 16 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 20 * ln(x) * ln(omz) * NC * x - 20 * ln(x) * ln(omz) * NC * pow(x, 2) - 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(z) * pow(NC, -1) * x * pow(omz, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * NC * x
                result += -8 * ln(z) * NC * pow(x, 2) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x + 2 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(-xmz) * NC * x - 4 * ln(z) * ln(-xmz) * NC * pow(x, 2) + 6 * pow(ln(z), 2) * pow(NC, -1) * x - 6 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 6 * pow(ln(z), 2) * NC * x + 6 * pow(ln(z), 2) * NC * pow(x, 2) + 14 * ln(z) * ln(omx) * pow(NC, -1) * x - 14 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 12 * ln(z) * ln(omx) * NC * x + 12 * ln(z) * ln(omx) * NC * pow(x, 2) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x - 8 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 16 * ln(z) * ln(omz) * NC * x + 16 * ln(z) * ln(omz) * NC * pow(x, 2) - 4 * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * NC * x - 4 * ln(omx) * NC * pow(x, 2) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x - 8 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 2 * pow(ln(omx), 2) * NC * x + 2 * pow(ln(omx), 2) * NC * pow(x, 2) + 12 * ln(omx) * ln(omz) * pow(NC, -1) * x - 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 8 * ln(omx) * ln(omz) * NC * x + 8 * ln(omx) * ln(omz) * NC * pow(x, 2) - 4 * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(omz) * NC * x - 8 * ln(omz) * NC * pow(x, 2) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) + 4 * ln(omz) * ln(-omxmz) * NC * x - 4 * ln(omz) * ln(-omxmz) * NC * pow(x, 2) + 5 * pow(ln(omz), 2) * pow(NC, -1) * x - 5 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2)
                result += -8 * pow(ln(omz), 2) * NC * x + 8 * pow(ln(omz), 2) * NC * pow(x, 2) - 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) + 4 * Li2(pow(z, -1) * omx) * NC * x - 4 * Li2(pow(z, -1) * omx) * NC * pow(x, 2) - 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 4 * Li2(pow(omx, -1) * omz) * NC * x + 4 * Li2(pow(omx, -1) * omz) * NC * pow(x, 2) + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2)
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +4 * ln(omz) * LMUA * pow(NC, -1) * x - 4 * ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) - 4 * ln(omz) * LMUA * NC * x + 4 * ln(omz) * LMUA * NC * pow(x, 2) + LMUA * pow(NC, -1) * x + 2 * LMUA * pow(NC, -1) * x * z - LMUA * pow(NC, -1) * pow(x, 2) - 2 * LMUA * pow(NC, -1) * pow(x, 2) * z - LMUA * NC * x - 2 * LMUA * NC * x * z + LMUA * NC * pow(x, 2) - 2 * ln(z) * LMUA * NC * pow(x, 2) + 2 * LMUA * NC * pow(x, 2) * z - 2 * ln(z) * LMUA * pow(NC, -1) * x + 2 * ln(z) * LMUA * pow(NC, -1) * pow(x, 2) + 2 * ln(z) * LMUA * NC * x
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -8 * ln(omx) * LMUF * NC * x + 8 * ln(omx) * LMUF * NC * pow(x, 2) + 2 * ln(x) * LMUF * pow(NC, -1) * x * z + 16 * ln(x) * LMUF * NC * x - 2 * ln(x) * LMUF * NC * x * z + LMUF * pow(NC, -1) * z + LMUF * pow(NC, -1) * x * z - 2 * LMUF * pow(NC, -1) * pow(x, 2) * z - 4.0 / 3.0 * LMUF * NC * pow(x, -1) + 4 * LMUF * NC - LMUF * NC * z + 38.0 / 3.0 * LMUF * NC * x - LMUF * NC * x * z - 46.0 / 3.0 * LMUF * NC * pow(x, 2) + 2 * LMUF * NC * pow(x, 2) * z + 4.0 / 3.0 * LMUF * NF * x - 4.0 / 3.0 * LMUF * NF * pow(x, 2)
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += +22.0 / 3.0 * LMUR * NC * x - 22.0 / 3.0 * LMUR * NC * pow(x, 2) - 4.0 / 3.0 * LMUR * NF * x + 4.0 / 3.0 * LMUR * NF * pow(x, 2)
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2g_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -pow(NC, -1) * pow(z, -1) * CF - 2 * pow(NC, -1) * CF + 3 * pow(NC, -1) * z * CF + pow(NC, -1) * x * pow(z, -1) * CF + 4 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 8.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF + 17 * pow(NC, -1) * x * CF + 4 * pow(NC, -1) * x * sqrtxz1 * rln2 * CF + 23.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF - 14 * pow(NC, -1) * x * z * CF - 14.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF + 4 * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) - 4 * pow(NC, -1) * pow(x, 2) * CF - 4 * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) + NC * pow(z, -1) * CF + 10 * NC * CF - 7 * NC * z * CF - 4 * NC * pow(z, 2) * CF + 7 * NC * x * pow(z, -1) * CF - 23 * NC * x * CF + 8 * NC * x * pow(rln2, 2) * CF + 8 * NC * x * sqrtxz1 * rln2 * CF - NC * x * pow(pi, 2) * CF + 6 * NC * x * z * CF + 8 * NC * x * z * pow(rln2, 2) * CF + 14.0 / 3.0 * NC * x * z * pow(pi, 2) * CF + 10 * NC * x * pow(z, 2) * CF - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * NC * x * rln2 * CF - 8 * ln(1 + sqrtxz1 - z) * NC * x * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * NC * x * z * rln2 * CF
                result += +8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * z * CF - 8 * ln(1 + sqrtxz1 + z) * NC * x * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * NC * x * z * rln2 * CF + 2 * ln(x) * pow(NC, -1) * CF - 2 * ln(x) * pow(NC, -1) * z * CF + ln(x) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 7 * ln(x) * pow(NC, -1) * x * CF + 8 * ln(x) * pow(NC, -1) * x * CF * omx + 2 * ln(x) * pow(NC, -1) * x * sqrtxz1 * CF - 16 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * CF + 4 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -2) - 8 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, 4) * CF * pow(omxmz, -2) - 2 * ln(x) * NC * CF + 2 * ln(x) * NC * z * CF - 7 * ln(x) * NC * x * pow(z, -1) * CF - 7 * ln(x) * NC * x * CF + 4 * ln(x) * NC * x * rln2 * CF + 4 * ln(x) * NC * x * sqrtxz1 * CF + 18 * ln(x) * NC * x * z * CF + 4 * ln(x) * NC * x * z * rln2 * CF + 8 * ln(x) * NC * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * z * CF + 14 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 44 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 30 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 16 * pow(ln(x), 2) * NC * x * CF - 16 * pow(ln(x), 2) * NC * x * z * CF - 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 40 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 34 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 32 * ln(x) * ln(z) * NC * x * CF - 2 * ln(x) * ln(z) * NC * x * z * CF
                result += -20 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 56 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 36 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 28 * ln(x) * ln(omx) * NC * x * CF + 28 * ln(x) * ln(omx) * NC * x * z * CF - 20 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 62 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 42 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 22 * ln(x) * ln(omz) * NC * x * CF + 22 * ln(x) * ln(omz) * NC * x * z * CF - 4 * ln(z) * pow(NC, -1) * CF - 4 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * ln(z) * pow(NC, -1) * x * CF + 2 * ln(z) * pow(NC, -1) * x * sqrtxz1 * CF + 18 * ln(z) * pow(NC, -1) * x * z * CF + 8 * ln(z) * NC * CF + 8 * ln(z) * NC * z * CF + 10 * ln(z) * NC * x * pow(z, -1) * CF + 4 * ln(z) * NC * x * CF + 12 * ln(z) * NC * x * rln2 * CF + 4 * ln(z) * NC * x * sqrtxz1 * CF - 28 * ln(z) * NC * x * z * CF + 12 * ln(z) * NC * x * z * rln2 * CF - 4 * ln(z) * NC * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * z * CF + 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 16 * pow(ln(z), 2) * NC * x * CF + 14 * pow(ln(z), 2) * NC * x * z * CF + 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 24 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 18 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 24 * ln(z) * ln(omx) * NC * x * CF - 2 * ln(z) * ln(omx) * NC * x * z * CF + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 24 * ln(z) * ln(omz) * pow(NC, -1) * x * CF
                result += +20 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 20 * ln(z) * ln(omz) * NC * x * CF - 20 * ln(z) * ln(omz) * NC * x * z * CF - 2 * ln(omx) * pow(NC, -1) * CF + 2 * ln(omx) * pow(NC, -1) * z * CF - 2 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 7 * ln(omx) * pow(NC, -1) * x * CF + 9 * ln(omx) * pow(NC, -1) * x * z * CF + 2 * ln(omx) * NC * CF - 2 * ln(omx) * NC * z * CF + 6 * ln(omx) * NC * x * pow(z, -1) * CF - ln(omx) * NC * x * CF - 9 * ln(omx) * NC * x * z * CF - 4 * ln(omx) * NC * x * pow(z, 2) * CF + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 20 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 12 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 10 * pow(ln(omx), 2) * NC * x * CF - 10 * pow(ln(omx), 2) * NC * x * z * CF + 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 36 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 24 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(omx) * ln(omz) * NC * x * CF - 16 * ln(omx) * ln(omz) * NC * x * z * CF - 2 * ln(omz) * pow(NC, -1) * CF + 2 * ln(omz) * pow(NC, -1) * z * CF - 2 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * CF * omx + 9 * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF - 4 * ln(omz) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -2) + 8 * ln(omz) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 4) * CF * pow(omxmz, -2) + 2 * ln(omz) * NC * CF - 2 * ln(omz) * NC * z * CF + 6 * ln(omz) * NC * x * pow(z, -1) * CF - 5 * ln(omz) * NC * x * CF - ln(omz) * NC * x * z * CF
                result += -4 * ln(omz) * NC * x * pow(z, 2) * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 24 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 16 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 6 * pow(ln(omz), 2) * NC * x * CF - 6 * pow(ln(omz), 2) * NC * x * z * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * z * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * z * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * z * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * z * CF + 4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * CF - 4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(1 - x * pow(z, -1)) * NC * x * CF + 4 * Li2(1 - x * pow(z, -1)) * NC * x * z * CF - 2 * Li2(x) * pow(NC, -1) * x * CF + 2 * Li2(x) * pow(NC, -1) * x * z * CF - 2 * Li2(x) * NC * x * CF + 2 * Li2(x) * NC * x * z * CF - 4 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF - 22 * Li2(z) * NC * x * z * CF
            if z < round(1 - x, ndecimals) and z < x:
                result += 8.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * x * pow(pi, 2) * CF + 10.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * CF + 24 * ln(x) * pow(NC, -1) * x * z * CF - 14 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 40 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 26 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 44 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 32 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 64 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 40 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 68 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 44 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(x) * ln(omxmz) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * CF - 12 * ln(z) * pow(NC, -1) * x * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 24 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 16 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 32 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 24 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * CF - 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +18 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 52 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 32 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(omz) * pow(NC, -1) * x * z * CF - 10 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 26 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 16 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF + 8 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF - 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z < x:
                result += 8.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * x * pow(pi, 2) * CF + 10.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * CF + 24 * ln(x) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 38 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 26 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 16 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 56 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 40 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 52 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 32 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 64 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 44 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * CF - 12 * ln(z) * pow(NC, -1) * x * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 24 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 16 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 44 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 32 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * CF - 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +18 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 16 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 40 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 24 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF + 8 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 24 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 16 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * CF + 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF - 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals) and z > x:
                result += 8.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 26.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 6 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * CF + 24 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF - 14 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 42 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 28 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 48 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 36 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 60 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 36 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 72 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 48 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(x) * ln(omxmz) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * CF - 12 * ln(z) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 14 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 12 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 20 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 12 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 36 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 28 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * CF - 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +22 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 14 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 44 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 24 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(omz) * pow(NC, -1) * x * z * CF - 10 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 30 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 20 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF + 8 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z > x:
                result += 8.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * x * pow(pi, 2) * CF + 10.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * CF + 24 * ln(x) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 36 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 24 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 16 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 52 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 36 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 56 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 36 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 60 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 40 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * CF - 12 * ln(z) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 8 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 28 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 20 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 40 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 28 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * CF - 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +18 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 16 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 40 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 24 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF + 8 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 24 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 16 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * CF + 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF + 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > x:
                result += 2 * NC * x * pow(pi, 2) * CF - 2 * NC * x * z * pow(pi, 2) * CF - 12 * ln(x) * NC * x * z * CF - 4 * ln(x) * ln(-xmz) * NC * x * CF + 4 * ln(x) * ln(-xmz) * NC * x * z * CF - 14 * pow(ln(x), 2) * NC * x * CF + 14 * pow(ln(x), 2) * NC * x * z * CF + 24 * ln(x) * ln(z) * NC * x * CF - 24 * ln(x) * ln(z) * NC * x * z * CF + 24 * ln(x) * ln(omx) * NC * x * CF - 24 * ln(x) * ln(omx) * NC * x * z * CF + 12 * ln(x) * ln(omz) * NC * x * CF - 12 * ln(x) * ln(omz) * NC * x * z * CF + 8 * ln(z) * NC * x * z * CF + 4 * ln(z) * ln(-xmz) * NC * x * CF - 4 * ln(z) * ln(-xmz) * NC * x * z * CF - 10 * pow(ln(z), 2) * NC * x * CF + 10 * pow(ln(z), 2) * NC * x * z * CF - 20 * ln(z) * ln(omx) * NC * x * CF + 20 * ln(z) * ln(omx) * NC * x * z * CF - 4 * ln(z) * ln(omz) * NC * x * CF + 4 * ln(z) * ln(omz) * NC * x * z * CF + 8 * ln(omx) * NC * x * z * CF - 8 * pow(ln(omx), 2) * NC * x * CF + 8 * pow(ln(omx), 2) * NC * x * z * CF - 8 * ln(omx) * ln(omz) * NC * x * CF + 8 * ln(omx) * ln(omz) * NC * x * z * CF + 4 * ln(omz) * NC * x * z * CF - 2 * pow(ln(omz), 2) * NC * x * CF + 2 * pow(ln(omz), 2) * NC * x * z * CF + 4 * Li2(pow(omx, -1) * omz) * NC * x * CF - 4 * Li2(pow(omx, -1) * omz) * NC * x * z * CF - 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * x * CF + 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * x * z * CF + 4 * Li2(z) * NC * x * CF - 4 * Li2(z) * NC * x * z * CF
            if z < x:
                result += 2 * NC * x * pow(pi, 2) * CF - 2 * NC * x * z * pow(pi, 2) * CF - 12 * ln(x) * NC * x * z * CF - 12 * pow(ln(x), 2) * NC * x * CF + 12 * pow(ln(x), 2) * NC * x * z * CF + 20 * ln(x) * ln(z) * NC * x * CF - 20 * ln(x) * ln(z) * NC * x * z * CF + 20 * ln(x) * ln(omx) * NC * x * CF - 20 * ln(x) * ln(omx) * NC * x * z * CF + 16 * ln(x) * ln(omz) * NC * x * CF - 16 * ln(x) * ln(omz) * NC * x * z * CF - 4 * ln(x) * ln(xmz) * NC * x * CF + 4 * ln(x) * ln(xmz) * NC * x * z * CF + 8 * ln(z) * NC * x * z * CF - 8 * pow(ln(z), 2) * NC * x * CF + 8 * pow(ln(z), 2) * NC * x * z * CF - 16 * ln(z) * ln(omx) * NC * x * CF + 16 * ln(z) * ln(omx) * NC * x * z * CF - 8 * ln(z) * ln(omz) * NC * x * CF + 8 * ln(z) * ln(omz) * NC * x * z * CF + 4 * ln(z) * ln(xmz) * NC * x * CF - 4 * ln(z) * ln(xmz) * NC * x * z * CF + 8 * ln(omx) * NC * x * z * CF - 8 * pow(ln(omx), 2) * NC * x * CF + 8 * pow(ln(omx), 2) * NC * x * z * CF - 8 * ln(omx) * ln(omz) * NC * x * CF + 8 * ln(omx) * ln(omz) * NC * x * z * CF + 4 * ln(omz) * NC * x * z * CF - 2 * pow(ln(omz), 2) * NC * x * CF + 2 * pow(ln(omz), 2) * NC * x * z * CF + 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * x * CF - 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * x * z * CF - 4 * Li2(omx * pow(omz, -1)) * NC * x * CF + 4 * Li2(omx * pow(omz, -1)) * NC * x * z * CF + 4 * Li2(z) * NC * x * CF - 4 * Li2(z) * NC * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +2 * LMUA * pow(NC, -1) * x * pow(z, -1) * CF - 4 * LMUA * pow(NC, -1) * x * CF + 2 * LMUA * pow(NC, -1) * x * z * CF - 6 * LMUA * NC * x * pow(z, -1) * CF - 22.0 / 3.0 * LMUA * NC * x * CF + 28.0 / 3.0 * LMUA * NC * x * z * CF + 4 * LMUA * NC * x * pow(z, 2) * CF + 4.0 / 3.0 * LMUA * NF * x * CF - 4.0 / 3.0 * LMUA * NF * x * z * CF - 2 * ln(z) * LMUA * pow(NC, -1) * x * z * CF - 8 * ln(z) * LMUA * NC * x * CF - 14 * ln(z) * LMUA * NC * x * z * CF - 8 * ln(omz) * LMUA * NC * x * CF + 8 * ln(omz) * LMUA * NC * x * z * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += +2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * pow(NC, -1) * z * CF + LMUF * pow(NC, -1) * x * CF - LMUF * pow(NC, -1) * x * z * CF - 2 * LMUF * NC * CF + 2 * LMUF * NC * z * CF - LMUF * NC * x * CF + LMUF * NC * x * z * CF - 2 * ln(x) * LMUF * pow(NC, -1) * x * CF + 2 * ln(x) * LMUF * pow(NC, -1) * x * z * CF + 2 * ln(x) * LMUF * NC * x * CF - 2 * ln(x) * LMUF * NC * x * z * CF + 4 * ln(omx) * LMUF * pow(NC, -1) * x * CF - 4 * ln(omx) * LMUF * pow(NC, -1) * x * z * CF - 4 * ln(omx) * LMUF * NC * x * CF + 4 * ln(omx) * LMUF * NC * x * z * CF
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += +22.0 / 3.0 * LMUR * NC * x * CF - 22.0 / 3.0 * LMUR * NC * x * z * CF - 4.0 / 3.0 * LMUR * NF * x * CF + 4.0 / 3.0 * LMUR * NF * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2q_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF - pow(NC, -1) * pow(x, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF * pow(opx, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF - pow(NC, -1) * pow(poly2, -1) * CF + 21 * pow(NC, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) - 36 * pow(NC, -1) * z * CF + 4.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(opx, -1) + 8 * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 8 * pow(NC, -1) * x * pow(z, -1) * CF + 4 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 8 * pow(NC, -1) * x * CF * pow(omz, -1) - 23 * pow(NC, -1) * x * CF + 8 * pow(NC, -1) * x * pow(rln2, 2) * CF + 12 * pow(NC, -1) * x * sqrtxz1 * rln2 * CF - 2 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) + 10.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 54 * pow(NC, -1) * x * z * CF + 8 * pow(NC, -1) * x * z * pow(rln2, 2) * CF + 4 * pow(NC, -1) * x * z * pow(pi, 2) * CF + 2 * pow(NC, -1) * pow(x, 2) * CF * pow(xmz, -1) + pow(NC, -1) * pow(x, 2) * CF - pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF - 2 * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) + pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF + 20.0 / 9.0 * pow(x, -1) * CF - 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) + 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF + 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF - 56.0 / 3.0 * CF + 20 * z * CF - 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) + 2 * pow(z, 2) * CF + 8.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 29.0 / 3.0 * x * CF - 8 * x * sqrtxz1 * rln2 * CF
                result += -x * pow(pi, 2) * CF - 18 * x * z * CF - 2 * x * z * pow(pi, 2) * CF - 7 * x * pow(z, 2) * CF - 32 * x * pow(z, 2) * pow(rln2, 2) * CF + 8.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF + 88.0 / 9.0 * pow(x, 2) * CF - 4.0 / 3.0 * NC * z * CF + 20.0 / 9.0 * NC * x * z * CF - 4 * NC * x * z * pow(pi, 2) * CF + 2 * NC * pow(x, 2) * CF * pow(xmz, -1) + 2 * NC * pow(x, 2) * CF - 2 * NC * pow(x, 3) * CF * pow(xmz, -1) + 4.0 / 3.0 * NF * z * CF - 32.0 / 9.0 * NF * x * z * CF + 6 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF + 10 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF + 10 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 18 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF - 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF - 46 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF - 6 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - 10 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 10 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 18 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF
                result += +2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF + 46 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF - 3 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - 5 * InvTanInt(-sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 5 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 9 * InvTanInt(-sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF + InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - InvTanInt(-sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 6 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - 10 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 10 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 18 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF + 2 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF + 46 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF + 3 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF + 5 * InvTanInt(sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF + 5 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 9 * InvTanInt(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF - InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + InvTanInt(sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF
                result += -8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2 * CF - 12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 * CF + 8 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF + 48 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF - 16 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF + 16 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) * CF - 5.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 17 * ln(x) * pow(NC, -1) * pow(x, -1) * CF + 16 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(poly2, -2) * CF + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(poly2, -1) * CF - 16 * ln(x) * pow(NC, -1) * CF * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * CF + 16 * ln(x) * pow(NC, -1) * z * CF * pow(opx, -1) - 11 * ln(x) * pow(NC, -1) * z * CF - 32 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 30 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 3.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -2) * CF
                result += -3 * ln(x) * pow(NC, -1) * x * pow(poly2, -1) * CF + 32 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) + 9 * ln(x) * pow(NC, -1) * x * CF + 4 * ln(x) * pow(NC, -1) * x * rln2 * CF + 6 * ln(x) * pow(NC, -1) * x * sqrtxz1 * CF + 21 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * pow(NC, -1) * x * z * rln2 * CF - 4 * ln(x) * pow(NC, -1) * x * pow(z, 3) * CF * pow(xmz, -2) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) * CF + 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) * CF + 10 * ln(x) * pow(NC, -1) * pow(x, 2) * CF - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) * CF - 5.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF - 2 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -2) - 18 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) * CF + 7.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF + 6 * ln(x) * pow(NC, -1) * pow(x, 4) * CF * pow(xmz, -2) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) * CF - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) * CF - 16 * ln(x) * pow(x, -1) * z * CF * pow(opx, -1) + 16 * ln(x) * pow(x, -1) * z * CF + 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF - ln(x) * CF - 16 * ln(x) * z * CF * pow(opx, -1) + 9 * ln(x) * z * CF + 32 * ln(x) * pow(z, 2) * CF * pow(opx, -1) - 3 * ln(x) * x * CF - 4 * ln(x) * x * sqrtxz1 * CF + ln(x) * x * z * CF + 8 * ln(x) * x * z * rln2 * CF - 4 * ln(x) * x * pow(z, 2) * CF - 32 * ln(x) * x * pow(z, 2) * rln2 * CF - 4 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 12 * ln(x) * pow(x, 2) * CF + 4 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) - 2 * ln(x) * NC * z * CF + 8 * ln(x) * NC * x * CF + 8.0 / 3.0 * ln(x) * NC * x * z * CF + 4 * ln(x) * NC * pow(x, 2) * CF * pow(xmz, -1)
                result += -2 * ln(x) * NC * pow(x, 3) * CF * pow(xmz, -2) - 2 * ln(x) * NC * pow(x, 3) * CF * pow(xmz, -1) + 2 * ln(x) * NC * pow(x, 4) * CF * pow(xmz, -2) - 8.0 / 3.0 * ln(x) * NF * x * z * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 47.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 36 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 36 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 18 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF
                result += +3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 2 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 8 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 32 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 32 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 8 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 16 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 47.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 36 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 36 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1)
                result += -9 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 18 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 2 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 8 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 32 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 32 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 16 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF + 16 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF + 16 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1)
                result += -4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF - 8 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 8 * ln(x) * ln(1 + x) * pow(NC, -1) * x * pow(z, -1) * CF + 16 * ln(x) * ln(1 + x) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z * CF - 8 * ln(x) * ln(1 + x) * x * CF + 24 * ln(x) * ln(1 + x) * x * z * CF - 16 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF - 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1)
                result += -16 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF - 4 * ln(x) * ln(z + x) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(z + x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(z + x) * x * z * CF + 8 * ln(x) * ln(z + x) * x * pow(z, 2) * CF + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF + 6 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 20 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 30 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 6 * pow(ln(x), 2) * pow(x, -1) * z * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(x, -1) * z * CF - 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF + 6 * pow(ln(x), 2) * z * CF * pow(opx, -1) - 12 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) + 8 * pow(ln(x), 2) * x * CF - 12 * pow(ln(x), 2) * x * z * CF + 8 * pow(ln(x), 2) * x * pow(z, 2) * CF + 16 * pow(ln(x), 2) * NC * x * z * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF
                result += -8 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 38 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(x, -1) * z * CF + 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(z) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * x * CF + 12 * ln(x) * ln(z) * x * z * CF - 8 * ln(x) * ln(z) * x * pow(z, 2) * CF - 10 * ln(x) * ln(z) * NC * x * z * CF + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF + 8 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(opx, -1) - 28 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 28 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 44 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF - 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF + 8 * ln(x) * ln(omx) * z * CF * pow(opx, -1) - 16 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * x * z * CF - 16 * ln(x) * ln(omx) * x * pow(z, 2) * CF - 24 * ln(x) * ln(omx) * NC * x * z * CF - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 38 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(omz) * x * CF - 26 * ln(x) * ln(omz) * NC * x * z * CF - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1)
                result += +8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF - 8 * ln(x) * ln(opx) * pow(NC, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * x * z * CF - 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF + 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF - 8 * ln(x) * ln(opx) * z * CF * pow(opx, -1) + 16 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * x * z * CF + 16 * ln(x) * ln(opx) * x * pow(z, 2) * CF + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) * CF - 5.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF + ln(z) * pow(NC, -1) * pow(x, -1) * CF + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(poly2, -2) * CF - 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(poly2, -1) * CF + 10 * ln(z) * pow(NC, -1) * CF - 9 * ln(z) * pow(NC, -1) * z * CF + 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 18 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 3.0 / 2.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -2) * CF - 3 * ln(z) * pow(NC, -1) * x * pow(poly2, -1) * CF - 16 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 21 * ln(z) * pow(NC, -1) * x * CF + 12 * ln(z) * pow(NC, -1) * x * rln2 * CF + 6 * ln(z) * pow(NC, -1) * x * sqrtxz1 * CF - 25 * ln(z) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * z * rln2 * CF + 4 * ln(z) * pow(NC, -1) * x * pow(z, 3) * CF * pow(xmz, -2) - 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) * CF
                result += -3 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) * CF - 10 * ln(z) * pow(NC, -1) * pow(x, 2) * CF - 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) * CF - 5.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF + 2 * ln(z) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -2) + 18 * ln(z) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) * CF - 7.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF - 6 * ln(z) * pow(NC, -1) * pow(x, 4) * CF * pow(xmz, -2) + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) * CF + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) * CF + 4.0 / 3.0 * ln(z) * pow(x, -1) * CF - 7 * ln(z) * CF + 5 * ln(z) * z * CF - ln(z) * x * CF - 4 * ln(z) * x * sqrtxz1 * CF + 3 * ln(z) * x * z * CF - 8 * ln(z) * x * z * rln2 * CF + 2 * ln(z) * x * pow(z, 2) * CF - 32 * ln(z) * x * pow(z, 2) * rln2 * CF + 4 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) + 20.0 / 3.0 * ln(z) * pow(x, 2) * CF - 4 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) + 12 * ln(z) * NC * x * z * CF - 4 * ln(z) * NC * pow(x, 2) * CF * pow(xmz, -1) + 2 * ln(z) * NC * pow(x, 3) * CF * pow(xmz, -2) + 2 * ln(z) * NC * pow(x, 3) * CF * pow(xmz, -1) - 2 * ln(z) * NC * pow(x, 4) * CF * pow(xmz, -2) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * CF + 16 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF + 16 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF
                result += -4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF + 8 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF - 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF
                result += +4 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF + 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(z + x) * x * z * CF - 8 * ln(z) * ln(z + x) * x * pow(z, 2) * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 2 * pow(ln(z), 2) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(x, -1) * z * CF + 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF - 2 * pow(ln(z), 2) * z * CF * pow(opx, -1) + 4 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) - 12 * pow(ln(z), 2) * x * z * CF + 8 * pow(ln(z), 2) * x * pow(z, 2) * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 22 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(omx) * x * CF - 4 * ln(z) * ln(omx) * x * z * CF + 6 * ln(z) * ln(omx) * NC * x * z * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 36 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(omz) * x * CF + 8 * ln(z) * ln(omz) * x * z * CF + 12 * ln(z) * ln(omz) * NC * x * z * CF - 2 * ln(omx) * pow(NC, -1) * z * CF - 2 * ln(omx) * pow(NC, -1) * x * CF
                result += -12 * ln(omx) * pow(NC, -1) * x * z * CF + 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF - 4 * ln(omx) * CF - 4 * ln(omx) * x * CF + 2 * ln(omx) * x * z * CF + 2 * ln(omx) * x * pow(z, 2) * CF + 8.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 2 * ln(omx) * NC * z * CF - 6 * ln(omx) * NC * x * CF + 2.0 / 3.0 * ln(omx) * NC * x * z * CF + 4.0 / 3.0 * ln(omx) * NF * x * z * CF + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 12 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 10 * pow(ln(omx), 2) * NC * x * z * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 20 * ln(omx) * ln(omz) * NC * x * z * CF - 2 * ln(omz) * pow(NC, -1) * z * CF - 2 * ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * z * CF + 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF - 4 * ln(omz) * CF - 4 * ln(omz) * x * CF + 2 * ln(omz) * x * z * CF + 2 * ln(omz) * x * pow(z, 2) * CF + 8.0 / 3.0 * ln(omz) * pow(x, 2) * CF + 2 * ln(omz) * NC * z * CF - 6 * ln(omz) * NC * x * CF - 10.0 / 3.0 * ln(omz) * NC * x * z * CF + 4.0 / 3.0 * ln(omz) * NF * x * z * CF + 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 12 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 10 * pow(ln(omz), 2) * NC * x * z * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 47.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF
                result += +3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 47.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF
                result += -32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1)
                result += -47.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 36 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF
                result += +3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 47.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 36 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 36 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF
                result += +3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 32 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 32 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * CF + 16 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(1 - x * pow(z, -1)) * x * CF - 8 * Li2(1 - x * pow(z, -1)) * x * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1)
                result += +4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF - 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * x * z * CF - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF + 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF - 8 * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(-x) * pow(NC, -1) * x * CF - 8 * Li2(-x) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(-x) * pow(x, -1) * z * CF + 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF - 8 * Li2(-x) * z * CF * pow(opx, -1) + 16 * Li2(-x) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x) * x * CF + 16 * Li2(-x) * x * z * CF + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * Li2(-x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(opx, -1)
                result += +8 * Li2(-x * z) * pow(NC, -1) * x * CF + 4 * Li2(-x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(x, -1) * z * CF - 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF + 4 * Li2(-x * z) * z * CF * pow(opx, -1) - 8 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(-x * z) * x * pow(z, 2) * CF + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF + 8 * Li2(x) * pow(NC, -1) * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * Li2(x) * pow(NC, -1) * x * CF + 6 * Li2(x) * pow(NC, -1) * x * z * CF + 8 * Li2(x) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(x, -1) * z * CF - 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF + 8 * Li2(x) * z * CF * pow(opx, -1) - 16 * Li2(x) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(x) * x * CF + 8 * Li2(x) * x * z * CF - 16 * Li2(x) * x * pow(z, 2) * CF + 2 * Li2(x) * NC * x * z * CF + 4 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x * CF - 14 * Li2(z) * pow(NC, -1) * x * z * CF - 2 * Li2(z) * x * CF + 12 * Li2(z) * x * z * CF + 6 * Li2(z) * NC * x * z * CF
            if z < round(1 - x, ndecimals) and z < x:
                result += 2 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - 2 * pow(NC, -1) * x * pow(pi, 2) * CF - 8.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * z * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 12 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 24 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 20 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 40 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 20 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 36 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 16 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 36 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 16 * ln(z) * pow(NC, -1) * x * z * CF - 8 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 16 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 16 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 16 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 24 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 24 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF
                result += -8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z < x:
                result += 2 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - 2 * pow(NC, -1) * x * pow(pi, 2) * CF - 8.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 12 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 26 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 20 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 44 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 20 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 32 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 16 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 40 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 16 * ln(z) * pow(NC, -1) * x * z * CF - 8 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 16 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 16 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 16 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 24 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 28 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF
                result += -8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 16 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 4 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * z * CF - 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals) and z > x:
                result += 2 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - 2 * pow(NC, -1) * x * pow(pi, 2) * CF - 16.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF - 14 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 14 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 28 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 24 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 48 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 24 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 36 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 36 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 16 * ln(z) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 20 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 20 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 20 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 24 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 24 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF
                result += +14 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 12 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 4 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 4 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z > x:
                result += 2 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - 2 * pow(NC, -1) * x * pow(pi, 2) * CF - 8.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 24 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF - 14 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 14 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 26 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 24 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 44 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + 24 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 24 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 40 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 32 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 16 * ln(z) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 16 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF - 20 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 20 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 32 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 20 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * pow(NC, -1) * x * z * CF - 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * pow(ln(omx), 2) * pow(NC, -1) * x * CF
                result += +10 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 16 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 12 * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 4 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * z * CF + 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF - 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 4 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 4 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x * CF - 4 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals):
                result += 8.0 / 3.0 * NC * x * z * pow(pi, 2) * CF - 12 * ln(x) * NC * x * CF + 12 * ln(x) * NC * x * z * CF - 14 * pow(ln(x), 2) * NC * x * z * CF + 12 * ln(x) * ln(z) * NC * x * z * CF + 24 * ln(x) * ln(omx) * NC * x * z * CF + 24 * ln(x) * ln(omz) * NC * x * z * CF - 4 * ln(x) * ln(omxmz) * NC * x * z * CF + 4 * ln(z) * NC * x * CF - 4 * ln(z) * NC * x * z * CF - 2 * pow(ln(z), 2) * NC * x * z * CF - 8 * ln(z) * ln(omx) * NC * x * z * CF - 8 * ln(z) * ln(omz) * NC * x * z * CF + 8 * ln(omx) * NC * x * CF - 8 * ln(omx) * NC * x * z * CF - 8 * pow(ln(omx), 2) * NC * x * z * CF - 20 * ln(omx) * ln(omz) * NC * x * z * CF + 8 * ln(omz) * NC * x * CF - 8 * ln(omz) * NC * x * z * CF - 10 * pow(ln(omz), 2) * NC * x * z * CF + 4 * ln(omz) * ln(omxmz) * NC * x * z * CF + 4 * Li2(z * pow(omx, -1)) * NC * x * z * CF - 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * x * z * CF - 4 * Li2(z) * NC * x * z * CF
            if z > round(1 - x, ndecimals):
                result += 8.0 / 3.0 * NC * x * z * pow(pi, 2) * CF - 12 * ln(x) * NC * x * CF + 12 * ln(x) * NC * x * z * CF - 4 * ln(x) * ln(-omxmz) * NC * x * z * CF - 12 * pow(ln(x), 2) * NC * x * z * CF + 16 * ln(x) * ln(z) * NC * x * z * CF + 20 * ln(x) * ln(omx) * NC * x * z * CF + 20 * ln(x) * ln(omz) * NC * x * z * CF + 4 * ln(z) * NC * x * CF - 4 * ln(z) * NC * x * z * CF - 2 * pow(ln(z), 2) * NC * x * z * CF - 8 * ln(z) * ln(omx) * NC * x * z * CF - 12 * ln(z) * ln(omz) * NC * x * z * CF + 8 * ln(omx) * NC * x * CF - 8 * ln(omx) * NC * x * z * CF - 8 * pow(ln(omx), 2) * NC * x * z * CF - 16 * ln(omx) * ln(omz) * NC * x * z * CF + 8 * ln(omz) * NC * x * CF - 8 * ln(omz) * NC * x * z * CF + 4 * ln(omz) * ln(-omxmz) * NC * x * z * CF - 8 * pow(ln(omz), 2) * NC * x * z * CF + 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * x * z * CF - 4 * Li2(pow(z, -1) * omx) * NC * x * z * CF - 4 * Li2(z) * NC * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +4 * ln(omz) * LMUA * pow(NC, -1) * x * z * CF - 4 * ln(omz) * LMUA * NC * x * z * CF - 2 * ln(z) * LMUA * pow(NC, -1) * x * z * CF + 2 * ln(z) * LMUA * x * CF + 4 * ln(z) * LMUA * x * z * CF + 2 * ln(z) * LMUA * NC * x * z * CF + 2 * LMUA * pow(NC, -1) * x * CF + LMUA * pow(NC, -1) * x * z * CF + 4 * LMUA * x * CF - 2 * LMUA * x * z * CF - 2 * LMUA * x * pow(z, 2) * CF - 2 * LMUA * NC * x * CF - LMUA * NC * x * z * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += +4 * ln(omx) * LMUF * pow(NC, -1) * x * z * CF - 4 * ln(omx) * LMUF * NC * x * z * CF + 2 * LMUF * pow(NC, -1) * z * CF + LMUF * pow(NC, -1) * x * z * CF - 4.0 / 3.0 * LMUF * pow(x, -1) * CF + 4 * LMUF * CF - 8.0 / 3.0 * LMUF * pow(x, 2) * CF - 2 * LMUF * NC * z * CF - LMUF * NC * x * z * CF - 2 * ln(x) * LMUF * pow(NC, -1) * x * z * CF + 4 * ln(x) * LMUF * x * CF + 2 * ln(x) * LMUF * NC * x * z * CF
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += +22.0 / 3.0 * LMUR * NC * x * z * CF - 4.0 / 3.0 * LMUR * NF * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2q_eqp(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 3.0 / 4.0 * pow(x, -1) * pow(z, -1) * CF - 3.0 / 4.0 * pow(x, -1) * CF + 3.0 / 4.0 * pow(z, -2) * CF - 7.0 / 2.0 * pow(z, -1) * CF + 3.0 / 2.0 * CF + 5.0 / 4.0 * z * CF - 3.0 / 4.0 * x * pow(z, -2) * CF + 3.0 / 2.0 * x * pow(z, -1) * CF + 1.0 / 2.0 * x * CF - 5.0 / 4.0 * x * z * CF + 5.0 / 4.0 * pow(x, 2) * pow(z, -1) * CF - 5.0 / 4.0 * pow(x, 2) * CF - 3.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -2) * sqrtxz3 * CF + 1.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF - 3.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, -2) * sqrtxz3 * CF + ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 5.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF + 9.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF + 5.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, 2) * sqrtxz3 * CF + 3.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 1.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF + 3.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 5.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, 2) * sqrtxz3 * CF + 3.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 1.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF
                result += +3.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - 1.0 / 2.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 4.0 * InvTanInt(-sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 4.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(x, 2) * sqrtxz3 * CF + 3.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 1.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 5.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(z * sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 2.0 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(x, 2) * sqrtxz3 * CF - 3.0 / 8.0 * InvTanInt(sqrtxz3) * pow(x, -2) * sqrtxz3 * CF + 1.0 / 4.0 * InvTanInt(sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF - 3.0 / 4.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 8.0 * InvTanInt(sqrtxz3) * pow(z, -2) * sqrtxz3 * CF + 1.0 / 2.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF + 5.0 / 8.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 4.0 * InvTanInt(sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF + 9.0 / 4.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 5.0 / 8.0 * InvTanInt(sqrtxz3) * pow(x, 2) * sqrtxz3 * CF - 3.0 / 8.0 * ln(x) * pow(x, -1) * pow(z, -1) * CF + 3.0 / 8.0 * ln(x) * pow(x, -1) * CF + 3.0 / 8.0 * ln(x) * pow(z, -2) * CF - 1.0 / 4.0 * ln(x) * pow(z, -1) * CF - 3.0 / 4.0 * ln(x) * CF + 5.0 / 8.0 * ln(x) * z * CF
                result += +3.0 / 8.0 * ln(x) * x * pow(z, -2) * CF - 13.0 / 4.0 * ln(x) * x * pow(z, -1) * CF + 9.0 / 4.0 * ln(x) * x * CF + 5.0 / 8.0 * ln(x) * x * z * CF + 5.0 / 8.0 * ln(x) * pow(x, 2) * pow(z, -1) * CF - 5.0 / 8.0 * ln(x) * pow(x, 2) * CF - 4 * ln(x) * ln(z) * x * CF + 3.0 / 8.0 * ln(z) * pow(x, -1) * pow(z, -1) * CF + 3.0 / 8.0 * ln(z) * pow(x, -1) * CF - 3.0 / 8.0 * ln(z) * pow(z, -2) * CF - 1.0 / 4.0 * ln(z) * pow(z, -1) * CF - 13.0 / 4.0 * ln(z) * CF + 5.0 / 8.0 * ln(z) * z * CF + 3.0 / 8.0 * ln(z) * x * pow(z, -2) * CF - 3.0 / 4.0 * ln(z) * x * pow(z, -1) * CF + 9.0 / 4.0 * ln(z) * x * CF - 5.0 / 8.0 * ln(z) * x * z * CF + 5.0 / 8.0 * ln(z) * pow(x, 2) * pow(z, -1) * CF + 5.0 / 8.0 * ln(z) * pow(x, 2) * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2qb_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF + 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) - 12 * pow(NC, -1) * CF + 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 20 * pow(NC, -1) * z * CF + 4.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 16 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF * pow(opz, -1) + 16 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF - 32 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) + 32 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 24 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF * pow(opz, -1) + 24 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF * pow(opz, -1) + 4.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF - 96 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 64 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF - 72 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1)
                result += +48 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) * CF + 12 * pow(NC, -1) * x * CF - 16 * pow(NC, -1) * x * pow(rln2, 2) * CF - 4 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) * CF + 4.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) + 2.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 32 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 32 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF + 24 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1) - 24 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF - 20 * pow(NC, -1) * x * z * CF + 16 * pow(NC, -1) * x * z * pow(rln2, 2) * CF + 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF + 128 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 128 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 96 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1) - 96 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF + 16.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) * CF + 20.0 / 9.0 * pow(x, -1) * CF + 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF - 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF - 68.0 / 3.0 * CF + 24 * z * CF + 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) + 2 * pow(z, 2) * CF - 8.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1)
                result += +41.0 / 3.0 * x * CF + 8 * x * sqrtxz1 * rln2 * CF - x * pow(pi, 2) * CF - 22 * x * z * CF + 2.0 / 3.0 * x * z * pow(pi, 2) * CF - 7 * x * pow(z, 2) * CF + 32 * x * pow(z, 2) * pow(rln2, 2) * CF - 8.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF + 88.0 / 9.0 * pow(x, 2) * CF + 16 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 46 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF - 16 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 46 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF - 8 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 16 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 2 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 46 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF + 8 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF
                result += +InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - InvTanInt(sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF + 96 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 96 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2 * CF - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 * CF - 128 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 128 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 128 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1)
                result += +128 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF - 8 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF + 8 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF - 48 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF + 16 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 48 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF
                result += +16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF + 64 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 64 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF + 48 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 * CF - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 * CF - 64 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 64 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF - 16 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF
                result += -2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 6 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 8 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 16 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 16 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 16 * ln(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * CF + 16 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 16 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF - 16 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 16 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 16 * ln(x) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(x) * pow(NC, -1) * CF + 16 * ln(x) * pow(NC, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * z * CF - 16 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 16 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF
                result += -8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) + 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 16 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 16 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 48 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 16 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(x) * pow(NC, -1) * x * CF - 8 * ln(x) * pow(NC, -1) * x * rln2 * CF + 16 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 8 * ln(x) * pow(NC, -1) * x * z * CF + 8 * ln(x) * pow(NC, -1) * x * z * rln2 * CF + 64 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 64 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - ln(x) * pow(x, -1) * pow(poly2, -1) * CF + ln(x) * pow(x, -1) * CF + 16 * ln(x) * pow(x, -1) * z * CF * pow(opx, -1) - 16 * ln(x) * pow(x, -1) * z * CF - 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF + ln(x) * pow(poly2, -1) * CF - 2 * ln(x) * CF + 16 * ln(x) * z * CF * pow(opx, -1) + 11 * ln(x) * z * CF - 32 * ln(x) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * x * pow(poly2, -1) * CF - 14 * ln(x) * x * CF + 4 * ln(x) * x * sqrtxz1 * CF + 11 * ln(x) * x * z * CF - 8 * ln(x) * x * z * rln2 * CF - 4 * ln(x) * x * pow(z, 2) * CF + 32 * ln(x) * x * pow(z, 2) * rln2 * CF - 2 * ln(x) * pow(x, 2) * pow(poly2, -1) * CF + 4 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 5 * ln(x) * pow(x, 2) * CF - ln(x) * pow(x, 3) * pow(poly2, -1) * CF - 4 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) + ln(x) * pow(x, 4) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + 2 * ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 8 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF - 16 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 32 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF
                result += -16 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1)
                result += -4 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF + 8 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 8 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z * CF + 8 * ln(x) * ln(1 + x) * x * CF - 24 * ln(x) * ln(1 + x) * x * z * CF + 16 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF + 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF
                result += +4 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(x) * ln(z + x) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(z + x) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(z + x) * x * z * CF - 8 * ln(x) * ln(z + x) * x * pow(z, 2) * CF + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 18 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 12 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 6 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 6 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF
                result += -24 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 24 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 6 * pow(ln(x), 2) * pow(x, -1) * z * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(x, -1) * z * CF + 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF - 6 * pow(ln(x), 2) * z * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * x * z * CF - 8 * pow(ln(x), 2) * x * pow(z, 2) * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += -8 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 8 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(x, -1) * z * CF - 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(z) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * x * CF + 4 * ln(x) * ln(z) * x * z * CF + 8 * ln(x) * ln(z) * x * pow(z, 2) * CF + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1)
                result += -8 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF + 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF - 8 * ln(x) * ln(omx) * z * CF * pow(opx, -1) + 16 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * x * z * CF + 16 * ln(x) * ln(omx) * x * pow(z, 2) * CF - 8 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 4 * ln(x) * ln(omz) * x * CF - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1)
                result += -8 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF - 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 8 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * x * CF + 8 * ln(x) * ln(opx) * pow(NC, -1) * x * z * CF + 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF - 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF + 8 * ln(x) * ln(opx) * z * CF * pow(opx, -1) - 16 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * x * z * CF - 16 * ln(x) * ln(opx) * x * pow(z, 2) * CF + 4 * ln(z) * pow(NC, -1) * z * CF - 24 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) + 24 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 32 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 48 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 96 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 64 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF - 24 * ln(z) * pow(NC, -1) * x * rln2 * CF + 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF
                result += +32 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 32 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 4 * ln(z) * pow(NC, -1) * x * z * CF + 24 * ln(z) * pow(NC, -1) * x * z * rln2 * CF + 64 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 64 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 128 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 128 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF - ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 7.0 / 3.0 * ln(z) * pow(x, -1) * CF - ln(z) * pow(poly2, -1) * CF - 10 * ln(z) * CF + 7 * ln(z) * z * CF + 2 * ln(z) * x * pow(poly2, -1) * CF + 4 * ln(z) * x * sqrtxz1 * CF - 7 * ln(z) * x * z * CF + 8 * ln(z) * x * z * rln2 * CF + 2 * ln(z) * x * pow(z, 2) * CF + 32 * ln(z) * x * pow(z, 2) * rln2 * CF + 2 * ln(z) * pow(x, 2) * pow(poly2, -1) * CF - 4 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) - 1.0 / 3.0 * ln(z) * pow(x, 2) * CF - ln(z) * pow(x, 3) * pow(poly2, -1) * CF + 4 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) - ln(z) * pow(x, 4) * pow(poly2, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF + 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 48 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * CF - 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += +16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * CF - 64 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 64 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 16 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 48 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 64 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 64 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF - 16 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1)
                result += -4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF - 8 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1)
                result += +4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF + 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * CF + 4 * ln(z) * ln(z + x) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(z + x) * x * z * CF + 8 * ln(z) * ln(z + x) * x * pow(z, 2) * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1)
                result += -2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 6 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 10 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 30 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 20 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 6 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 40 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 40 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 2 * pow(ln(z), 2) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(x, -1) * z * CF - 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF + 2 * pow(ln(z), 2) * z * CF * pow(opx, -1) - 4 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1)
                result += -4 * pow(ln(z), 2) * x * CF + 4 * pow(ln(z), 2) * x * z * CF - 8 * pow(ln(z), 2) * x * pow(z, 2) * CF - 2 * ln(z) * ln(omx) * x * CF - 4 * ln(z) * ln(omx) * x * z * CF - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * ln(z) * ln(omz) * x * CF - 8 * ln(z) * ln(omz) * x * z * CF + 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF - 4 * ln(omx) * CF - 4 * ln(omx) * x * CF + 2 * ln(omx) * x * z * CF + 2 * ln(omx) * x * pow(z, 2) * CF + 8.0 / 3.0 * ln(omx) * pow(x, 2) * CF - 16 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) + 16 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 48 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 32 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 16 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 16 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF + 64 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF - 4 * ln(omz) * CF - 4 * ln(omz) * x * CF + 2 * ln(omz) * x * z * CF + 2 * ln(omz) * x * pow(z, 2) * CF + 8.0 / 3.0 * ln(omz) * pow(x, 2) * CF
                result += +16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 48 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 64 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 64 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 32 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF
                result += -24 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF
                result += +1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF
                result += -8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF
                result += -24 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + 32 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF
                result += +2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1)
                result += -8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF - 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF
                result += +8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF - 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 4 * Li2(1 - x * pow(z, -1)) * x * CF + 8 * Li2(1 - x * pow(z, -1)) * x * z * CF - 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 48 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 64 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 64 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 48 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 64 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += -64 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF + 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * x * z * CF - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1)
                result += +8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) + 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF + 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF - 8 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(NC, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 8 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * Li2(-x) * pow(NC, -1) * x * CF + 8 * Li2(-x) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(x, -1) * z * CF - 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF + 8 * Li2(-x) * z * CF * pow(opx, -1) - 16 * Li2(-x) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x) * x * CF - 16 * Li2(-x) * x * z * CF + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF - 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF + 4 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1)
                result += -4 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * Li2(-x * z) * pow(NC, -1) * x * CF - 4 * Li2(-x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(x, -1) * z * CF + 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * Li2(-x * z) * z * CF * pow(opx, -1) + 8 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(-x * z) * x * pow(z, 2) * CF - 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += -32 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF - 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF + 8 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 8 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 4 * Li2(x) * pow(NC, -1) * x * CF + 4 * Li2(x) * pow(NC, -1) * x * z * CF - 8 * Li2(x) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(x, -1) * z * CF + 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF - 8 * Li2(x) * z * CF * pow(opx, -1) + 16 * Li2(x) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(x) * x * CF - 8 * Li2(x) * x * z * CF + 16 * Li2(x) * x * pow(z, 2) * CF + 6 * Li2(z) * x * CF - 4 * Li2(z) * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +4 * LMUA * x * CF - 2 * LMUA * x * z * CF - 2 * LMUA * x * pow(z, 2) * CF + 2 * ln(z) * LMUA * x * CF + 4 * ln(z) * LMUA * x * z * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -4.0 / 3.0 * LMUF * pow(x, -1) * CF + 4 * LMUF * CF - 8.0 / 3.0 * LMUF * pow(x, 2) * CF + 4 * ln(x) * LMUF * x * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2qp_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -4 * CF + 2 * z * CF + 2 * pow(z, 2) * CF + 7 * x * CF - 1.0 / 3.0 * x * pow(pi, 2) * CF - 2.0 / 3.0 * x * z * pow(pi, 2) * CF - 7 * x * pow(z, 2) * CF + 8 * ln(x) * x * CF - 4 * ln(x) * x * z * CF - 4 * ln(x) * x * pow(z, 2) * CF + 4 * ln(x) * ln(z) * x * CF + 8 * ln(x) * ln(z) * x * z * CF - 2 * ln(z) * CF - 4 * ln(z) * z * CF - 2 * ln(z) * x * CF + 8 * ln(z) * x * z * CF + 2 * ln(z) * x * pow(z, 2) * CF - 2 * pow(ln(z), 2) * x * CF - 4 * pow(ln(z), 2) * x * z * CF - 2 * ln(z) * ln(omx) * x * CF - 4 * ln(z) * ln(omx) * x * z * CF - 4 * ln(omx) * x * CF + 2 * ln(omx) * x * z * CF + 2 * ln(omx) * x * pow(z, 2) * CF - 4 * ln(omz) * x * CF + 2 * ln(omz) * x * z * CF + 2 * ln(omz) * x * pow(z, 2) * CF + 2 * Li2(z) * x * CF + 4 * Li2(z) * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +4 * LMUA * x * CF - 2 * LMUA * x * z * CF - 2 * LMUA * x * pow(z, 2) * CF + 2 * ln(z) * LMUA * x * CF + 4 * ln(z) * LMUA * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2qp_eqp(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 20.0 / 9.0 * pow(x, -1) * CF - 50.0 / 3.0 * CF + 20 * z * CF + 14.0 / 3.0 * x * CF - 2.0 / 3.0 * x * pow(pi, 2) * CF - 20 * x * z * CF + 88.0 / 9.0 * pow(x, 2) * CF - 1.0 / 2.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * pow(x, -1) * CF + 1.0 / 2.0 * ln(x) * pow(poly2, -1) * CF - 3.0 / 2.0 * ln(x) * CF + 10 * ln(x) * z * CF + ln(x) * x * pow(poly2, -1) * CF - 33.0 / 2.0 * ln(x) * x * CF + 10 * ln(x) * x * z * CF - ln(x) * pow(x, 2) * pow(poly2, -1) * CF - 17.0 / 2.0 * ln(x) * pow(x, 2) * CF - 1.0 / 2.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 20 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 20 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 20 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 20 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * pow(ln(x), 2) * x * CF - 2 * ln(x) * ln(z) * x * CF - 4 * ln(x) * ln(omz) * x * CF - 1.0 / 2.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 11.0 / 6.0 * ln(z) * pow(x, -1) * CF - 1.0 / 2.0 * ln(z) * pow(poly2, -1) * CF - 13.0 / 2.0 * ln(z) * CF + 10 * ln(z) * z * CF + ln(z) * x * pow(poly2, -1) * CF + 3.0 / 2.0 * ln(z) * x * CF - 10 * ln(z) * x * z * CF + ln(z) * pow(x, 2) * pow(poly2, -1) * CF + 19.0 / 6.0 * ln(z) * pow(x, 2) * CF - 1.0 / 2.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF + 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF - 4 * ln(omx) * CF + 8.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF - 4 * ln(omz) * CF + 8.0 / 3.0 * ln(omz) * pow(x, 2) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF
                result += -Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF
                result += +20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 20 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 20 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(x) * x * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -4.0 / 3.0 * LMUF * pow(x, -1) * CF + 4 * LMUF * CF - 8.0 / 3.0 * LMUF * pow(x, 2) * CF + 4 * ln(x) * LMUF * x * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2qp_es(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) + 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF + 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF + 2 * CF - 2 * z * CF - 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) + 8.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 2 * x * CF - 8 * x * sqrtxz1 * rln2 * CF + 2 * x * z * CF - 4.0 / 3.0 * x * z * pow(pi, 2) * CF - 32 * x * pow(z, 2) * pow(rln2, 2) * CF + 8.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF - 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF - 46 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF + 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF + 46 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF + InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - InvTanInt(-sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF + 2 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF + 46 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF - InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + InvTanInt(sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 8 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF
                result += +48 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF - 16 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 8 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF + 16 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF + 1.0 / 2.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * pow(x, -1) * CF - 16 * ln(x) * pow(x, -1) * z * CF * pow(opx, -1) + 16 * ln(x) * pow(x, -1) * z * CF + 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF - 1.0 / 2.0 * ln(x) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * CF - 16 * ln(x) * z * CF * pow(opx, -1) - ln(x) * z * CF + 32 * ln(x) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * x * pow(poly2, -1) * CF + 11.0 / 2.0 * ln(x) * x * CF - 4 * ln(x) * x * sqrtxz1 * CF - 5 * ln(x) * x * z * CF + 8 * ln(x) * x * z * rln2 * CF - 32 * ln(x) * x * pow(z, 2) * rln2 * CF + ln(x) * pow(x, 2) * pow(poly2, -1) * CF - 4 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 7.0 / 2.0 * ln(x) * pow(x, 2) * CF + 1.0 / 2.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF + 4 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) - 1.0 / 2.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 12 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF
                result += -12 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 12 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 12 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF + 16 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 16 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1)
                result += -4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF - 8 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 8 * ln(x) * ln(1 + x) * x * CF + 24 * ln(x) * ln(1 + x) * x * z * CF - 16 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF - 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF + 4 * ln(x) * ln(z + x) * x * z * CF + 8 * ln(x) * ln(z + x) * x * pow(z, 2) * CF + 6 * pow(ln(x), 2) * pow(x, -1) * z * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(x, -1) * z * CF - 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF + 6 * pow(ln(x), 2) * z * CF * pow(opx, -1) - 12 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) + 4 * pow(ln(x), 2) * x * CF - 12 * pow(ln(x), 2) * x * z * CF + 8 * pow(ln(x), 2) * x * pow(z, 2) * CF - 4 * ln(x) * ln(z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(x, -1) * z * CF + 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(z) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * x * z * CF
                result += -8 * ln(x) * ln(z) * x * pow(z, 2) * CF + 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF - 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF + 8 * ln(x) * ln(omx) * z * CF * pow(opx, -1) - 16 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * x * z * CF - 16 * ln(x) * ln(omx) * x * pow(z, 2) * CF - 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF + 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF - 8 * ln(x) * ln(opx) * z * CF * pow(opx, -1) + 16 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * x * z * CF + 16 * ln(x) * ln(opx) * x * pow(z, 2) * CF + 1.0 / 2.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(z) * pow(x, -1) * CF + 1.0 / 2.0 * ln(z) * pow(poly2, -1) * CF + 3.0 / 2.0 * ln(z) * CF - ln(z) * z * CF - ln(z) * x * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(z) * x * CF - 4 * ln(z) * x * sqrtxz1 * CF + 5 * ln(z) * x * z * CF - 8 * ln(z) * x * z * rln2 * CF - 32 * ln(z) * x * pow(z, 2) * rln2 * CF - ln(z) * pow(x, 2) * pow(poly2, -1) * CF + 4 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) + 7.0 / 2.0 * ln(z) * pow(x, 2) * CF + 1.0 / 2.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF - 4 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF + 16 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF + 16 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += -8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF + 8 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF - 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(z + x) * x * z * CF - 8 * ln(z) * ln(z + x) * x * pow(z, 2) * CF - 2 * pow(ln(z), 2) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(x, -1) * z * CF + 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF - 2 * pow(ln(z), 2) * z * CF * pow(opx, -1) + 4 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * x * CF - 8 * pow(ln(z), 2) * x * z * CF + 8 * pow(ln(z), 2) * x * pow(z, 2) * CF - 4 * ln(z) * ln(omz) * x * CF + 8 * ln(z) * ln(omz) * x * z * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF
                result += +9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 4 * Li2(1 - x * pow(z, -1)) * x * CF - 8 * Li2(1 - x * pow(z, -1)) * x * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF
                result += -8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * x * z * CF - 8 * Li2(-x) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(-x) * pow(x, -1) * z * CF + 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF - 8 * Li2(-x) * z * CF * pow(opx, -1) + 16 * Li2(-x) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x) * x * CF + 16 * Li2(-x) * x * z * CF + 4 * Li2(-x * z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(x, -1) * z * CF - 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF + 4 * Li2(-x * z) * z * CF * pow(opx, -1) - 8 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(-x * z) * x * pow(z, 2) * CF + 8 * Li2(x) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(x, -1) * z * CF - 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF + 8 * Li2(x) * z * CF * pow(opx, -1) - 16 * Li2(x) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(x) * x * z * CF - 16 * Li2(x) * x * pow(z, 2) * CF - 4 * Li2(z) * x * CF + 8 * Li2(z) * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def cl_nnlo_q2qpb_es(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF - 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 8.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF - 2 * CF + 2 * z * CF + 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) - 8.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 2 * x * CF + 8 * x * sqrtxz1 * rln2 * CF - 2 * x * z * CF + 4.0 / 3.0 * x * z * pow(pi, 2) * CF + 32 * x * pow(z, 2) * pow(rln2, 2) * CF - 8.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF + 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 2 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 46 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 6 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF - 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 46 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF - InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 2 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 2 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 46 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 6 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF + InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - InvTanInt(sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF - 8 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF + 8 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF
                result += -48 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF + 16 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 8 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF - 16 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF - 1.0 / 2.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * pow(x, -1) * CF + 16 * ln(x) * pow(x, -1) * z * CF * pow(opx, -1) - 16 * ln(x) * pow(x, -1) * z * CF - 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 32 * ln(x) * pow(x, -1) * pow(z, 2) * CF + 1.0 / 2.0 * ln(x) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * CF + 16 * ln(x) * z * CF * pow(opx, -1) + ln(x) * z * CF - 32 * ln(x) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * x * pow(poly2, -1) * CF - 11.0 / 2.0 * ln(x) * x * CF + 4 * ln(x) * x * sqrtxz1 * CF + 5 * ln(x) * x * z * CF - 8 * ln(x) * x * z * rln2 * CF + 32 * ln(x) * x * pow(z, 2) * rln2 * CF - ln(x) * pow(x, 2) * pow(poly2, -1) * CF + 4 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) + 7.0 / 2.0 * ln(x) * pow(x, 2) * CF - 1.0 / 2.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF - 4 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 12 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF
                result += +12 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 12 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 12 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF - 16 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 16 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1)
                result += +4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF + 8 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 8 * ln(x) * ln(1 + x) * x * CF - 24 * ln(x) * ln(1 + x) * x * z * CF + 16 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF + 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF - 4 * ln(x) * ln(z + x) * x * z * CF - 8 * ln(x) * ln(z + x) * x * pow(z, 2) * CF - 6 * pow(ln(x), 2) * pow(x, -1) * z * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(x, -1) * z * CF + 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 12 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF - 6 * pow(ln(x), 2) * z * CF * pow(opx, -1) + 12 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) - 4 * pow(ln(x), 2) * x * CF + 12 * pow(ln(x), 2) * x * z * CF - 8 * pow(ln(x), 2) * x * pow(z, 2) * CF + 4 * ln(x) * ln(z) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(x, -1) * z * CF - 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(x) * ln(z) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * x * z * CF
                result += +8 * ln(x) * ln(z) * x * pow(z, 2) * CF - 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(x, -1) * z * CF + 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF - 8 * ln(x) * ln(omx) * z * CF * pow(opx, -1) + 16 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * x * z * CF + 16 * ln(x) * ln(omx) * x * pow(z, 2) * CF + 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(x, -1) * z * CF - 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF + 8 * ln(x) * ln(opx) * z * CF * pow(opx, -1) - 16 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * x * z * CF - 16 * ln(x) * ln(opx) * x * pow(z, 2) * CF - 1.0 / 2.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(z) * pow(x, -1) * CF - 1.0 / 2.0 * ln(z) * pow(poly2, -1) * CF - 3.0 / 2.0 * ln(z) * CF + ln(z) * z * CF + ln(z) * x * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(z) * x * CF + 4 * ln(z) * x * sqrtxz1 * CF - 5 * ln(z) * x * z * CF + 8 * ln(z) * x * z * rln2 * CF + 32 * ln(z) * x * pow(z, 2) * rln2 * CF + ln(z) * pow(x, 2) * pow(poly2, -1) * CF - 4 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) - 7.0 / 2.0 * ln(z) * pow(x, 2) * CF - 1.0 / 2.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF + 4 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) - 1.0 / 2.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF - 16 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF - 16 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += +8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF - 8 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF + 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) + 8 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF + 4 * ln(z) * ln(z + x) * x * z * CF + 8 * ln(z) * ln(z + x) * x * pow(z, 2) * CF + 2 * pow(ln(z), 2) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(x, -1) * z * CF - 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 4 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF + 2 * pow(ln(z), 2) * z * CF * pow(opx, -1) - 4 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * x * CF + 8 * pow(ln(z), 2) * x * z * CF - 8 * pow(ln(z), 2) * x * pow(z, 2) * CF + 4 * ln(z) * ln(omz) * x * CF - 8 * ln(z) * ln(omz) * x * z * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF
                result += -9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 12 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 12 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 4 * Li2(1 - x * pow(z, -1)) * x * CF + 8 * Li2(1 - x * pow(z, -1)) * x * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF
                result += +8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF - 4 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) + 8 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * pow(z, -1)) * x * z * CF + 8 * Li2(-x) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(-x) * pow(x, -1) * z * CF - 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF + 8 * Li2(-x) * z * CF * pow(opx, -1) - 16 * Li2(-x) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x) * x * CF - 16 * Li2(-x) * x * z * CF - 4 * Li2(-x * z) * pow(x, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(x, -1) * z * CF + 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF - 4 * Li2(-x * z) * z * CF * pow(opx, -1) + 8 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) + 16 * Li2(-x * z) * x * pow(z, 2) * CF - 8 * Li2(x) * pow(x, -1) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(x, -1) * z * CF + 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 16 * Li2(x) * pow(x, -1) * pow(z, 2) * CF - 8 * Li2(x) * z * CF * pow(opx, -1) + 16 * Li2(x) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(x) * x * z * CF + 16 * Li2(x) * x * pow(z, 2) * CF + 4 * Li2(z) * x * CF - 8 * Li2(z) * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_g2g_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) * pow(opx, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) + 1.0 / 6.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) * pow(opx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) + 1.0 / 6.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) * pow(opx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) - pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) + pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) + 1.0 / 2.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) + 1.0 / 2.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) + 13.0 / 16.0 * pow(NC, -1) * pow(z, -1) + 4 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * pow(opz, -1) - 4 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) + 8 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 8 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 + 6 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) - 6 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) - pow(NC, -1) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) * pow(opx, -1) + pow(NC, -1) * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 7.0 / 24.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 1.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * sqrtxz1 * pow(opz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * sqrtxz1
                result += +24 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 16 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + 18 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) - 12 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) + 1.0 / 8.0 * pow(NC, -1) + 4 * pow(NC, -1) * pow(rln2, 2) + pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(opx, -1) - 1.0 / 4.0 * pow(NC, -1) * pow(pi, 2) - 8 * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 - 6 * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 6 * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(rln2, 2) - 27.0 / 16.0 * pow(NC, -1) * z - 2 * pow(NC, -1) * z * pow(rln2, 2) - 1.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 1.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(sqrtxz1, -1) + 2.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(opx, -1) - 1.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) + 1.0 / 4.0 * pow(NC, -1) * x * pow(z, -1) - 8 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * pow(opz, -1) + 8 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) - 16 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 16 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 - 12 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) + 12 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) - 1.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * pow(omz, -1) * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 1.0 / 12.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2)
                result += -2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 * pow(opz, -1) + 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 - 80 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 64 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 - 60 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 48 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) + 1.0 / 2.0 * pow(NC, -1) * x - 8 * pow(NC, -1) * x * pow(rln2, 2) - 10.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 8.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) + 2.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) + 1.0 / 2.0 * pow(NC, -1) * x * pow(pi, 2) + 16 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 16 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 + 12 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) - 12 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) + 1.0 / 4.0 * pow(NC, -1) * x * z + 4 * pow(NC, -1) * x * z * pow(rln2, 2) + 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) + 1.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) + 1.0 / 2.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(rln2, 2) * pow(opz, -1) - 4 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(rln2, 2) + 8 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 8 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 + 6 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * pow(opz, -1) - 6 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) - 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) * pow(omz, -1)
                result += +pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) * sqrtxz1 * pow(opz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) * sqrtxz1 + 88 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 80 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 + 66 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) - 60 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) - 9.0 / 4.0 * pow(NC, -1) * pow(x, 2) + 4 * pow(NC, -1) * pow(x, 2) * pow(rln2, 2) + 11.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 10.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 8 * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 - 6 * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 6 * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(rln2, 2) + 3.0 / 2.0 * pow(NC, -1) * pow(x, 2) * z - 4 * pow(NC, -1) * pow(x, 2) * z * pow(rln2, 2) - 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * z * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * z * pow(pi, 2) * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(NC, -1) * pow(x, 2) * z * pow(pi, 2) - 32 * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 32 * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 - 24 * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(rln2, 2) * pow(opz, -1) + 24 * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(rln2, 2) - 4.0 / 3.0 * pow(NC, -1) * pow(x, 3) * pow(pi, 2) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += +4.0 / 3.0 * pow(NC, -1) * pow(x, 3) * pow(pi, 2) * pow(sqrtxz1, -1) - 1.0 / 6.0 * NC * pow(x, -2) * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 1.0 / 6.0 * NC * pow(x, -2) * pow(z, -1) * pow(pi, 2) - 1.0 / 6.0 * NC * pow(x, -2) * z * pow(pi, 2) * pow(opx, -1) + 1.0 / 6.0 * NC * pow(x, -2) * z * pow(pi, 2) - 5.0 / 16.0 * NC * pow(x, -1) * pow(z, -1) - 1.0 / 2.0 * NC * pow(x, -1) * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 1.0 / 3.0 * NC * pow(x, -1) * pow(z, -1) * pow(pi, 2) + 5.0 / 16.0 * NC * pow(x, -1) - 1.0 / 2.0 * NC * pow(x, -1) * z * pow(pi, 2) * pow(opx, -1) + 1.0 / 3.0 * NC * pow(x, -1) * z * pow(pi, 2) - 5.0 / 16.0 * NC * pow(z, -2) - 11.0 / 16.0 * NC * pow(z, -1) + 2 * NC * pow(z, -1) * pow(rln2, 2) + 2 * NC * pow(z, -1) * sqrtxz1 * rln2 - 2.0 / 3.0 * NC * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 1.0 / 24.0 * NC * pow(z, -1) * pow(pi, 2) - 1.0 / 4.0 * NC - 2 * NC * pow(rln2, 2) + 1.0 / 3.0 * NC * pow(pi, 2) * pow(opx, -1) - 1.0 / 12.0 * NC * pow(pi, 2) + 2 * NC * z + 2 * NC * z * pow(rln2, 2) - 2.0 / 3.0 * NC * z * pow(pi, 2) * pow(opx, -1) + 1.0 / 12.0 * NC * z * pow(pi, 2) + 5.0 / 16.0 * NC * x * pow(z, -2) - 47.0 / 8.0 * NC * x * pow(z, -1) - 4 * NC * x * pow(z, -1) * pow(rln2, 2) - 4 * NC * x * pow(z, -1) * sqrtxz1 * rln2 - 1.0 / 3.0 * NC * x * pow(z, -1) * pow(pi, 2) * pow(opx, -1) + 7.0 / 12.0 * NC * x * pow(z, -1) * pow(pi, 2) + 41.0 / 8.0 * NC * x + 4 * NC * x * pow(rln2, 2) + 1.0 / 3.0 * NC * x * pow(pi, 2) * pow(opx, -1) - 1.0 / 2.0 * NC * x * pow(pi, 2) - 9.0 / 16.0 * NC * x * z - 4 * NC * x * z * pow(rln2, 2) - 1.0 / 3.0 * NC * x * z * pow(pi, 2) * pow(opx, -1) + 1.0 / 3.0 * NC * x * z * pow(pi, 2) + 117.0 / 16.0 * NC * pow(x, 2) * pow(z, -1) + 4 * NC * pow(x, 2) * pow(z, -1) * pow(rln2, 2) + 4 * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 - 2.0 / 3.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) - 89.0 / 16.0 * NC * pow(x, 2) + 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2)
                result += -3.0 / 2.0 * NC * pow(x, 2) * z + 4 * NC * pow(x, 2) * z * pow(rln2, 2) - 1.0 / 2.0 * NC * pow(x, 2) * z * pow(pi, 2)
                result += -3.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 + 3.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 + 3.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 - 15.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 + 5.0 / 16.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -2) * sqrtxz3 + 9.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 + 21.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 + 5.0 / 16.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(z, -2) * sqrtxz3 + 5.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * sqrtxz3 - 19.0 / 16.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(z, 2) * sqrtxz3 + 45.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 + 105.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * x * z * sqrtxz3 - 35.0 / 16.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * NC * pow(x, 2) * sqrtxz3 + 3.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 - 3.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 - 5.0 / 16.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 9.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 - 21.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3
                result += -5.0 / 16.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(z, -2) * sqrtxz3 - 5.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * sqrtxz3 + 19.0 / 16.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(z, 2) * sqrtxz3 - 45.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * x * z * sqrtxz3 + 35.0 / 16.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * NC * pow(x, 2) * sqrtxz3 + 3.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 - 3.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15.0 / 4.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 - 5.0 / 32.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 9.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 - 21.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 - 5.0 / 32.0 * InvTanInt(-sqrtxz3) * NC * pow(z, -2) * sqrtxz3 - 5.0 / 8.0 * InvTanInt(-sqrtxz3) * NC * sqrtxz3 + 19.0 / 32.0 * InvTanInt(-sqrtxz3) * NC * pow(z, 2) * sqrtxz3 - 45.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 16.0 * InvTanInt(-sqrtxz3) * NC * x * z * sqrtxz3 + 35.0 / 32.0 * InvTanInt(-sqrtxz3) * NC * pow(x, 2) * sqrtxz3 + 3.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 - 3.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 - 3.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 + 15.0 / 2.0 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 - 5.0 / 16.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -2) * sqrtxz3 - 9.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 - 21.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3
                result += -5.0 / 16.0 * InvTanInt(z * sqrtxz3) * NC * pow(z, -2) * sqrtxz3 - 5.0 / 4.0 * InvTanInt(z * sqrtxz3) * NC * sqrtxz3 + 19.0 / 16.0 * InvTanInt(z * sqrtxz3) * NC * pow(z, 2) * sqrtxz3 - 45.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 - 105.0 / 8.0 * InvTanInt(z * sqrtxz3) * NC * x * z * sqrtxz3 + 35.0 / 16.0 * InvTanInt(z * sqrtxz3) * NC * pow(x, 2) * sqrtxz3 - 3.0 / 4.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 + 3.0 / 4.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * sqrtxz3 + 3.0 / 4.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 - 15.0 / 4.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 + 5.0 / 32.0 * InvTanInt(sqrtxz3) * NC * pow(x, -2) * sqrtxz3 + 9.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(x, -1) * pow(z, -1) * sqrtxz3 + 21.0 / 16.0 * InvTanInt(sqrtxz3) * NC * pow(x, -1) * z * sqrtxz3 + 5.0 / 32.0 * InvTanInt(sqrtxz3) * NC * pow(z, -2) * sqrtxz3 + 5.0 / 8.0 * InvTanInt(sqrtxz3) * NC * sqrtxz3 - 19.0 / 32.0 * InvTanInt(sqrtxz3) * NC * pow(z, 2) * sqrtxz3 + 45.0 / 16.0 * InvTanInt(sqrtxz3) * NC * x * pow(z, -1) * sqrtxz3 + 105.0 / 16.0 * InvTanInt(sqrtxz3) * NC * x * z * sqrtxz3 - 35.0 / 32.0 * InvTanInt(sqrtxz3) * NC * pow(x, 2) * sqrtxz3 - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * pow(opz, -1) + 5 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 - 24 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += +16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) - 24 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 - 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 + 3 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * rln2 + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * pow(opz, -1) - 10 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 + 80 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 80 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 + 12 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2 - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1)
                result += +16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 - 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 * pow(opz, -1) + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 - 88 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 80 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 88 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 80 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 - 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * rln2 + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * rln2 + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1)
                result += -32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 - 3 * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * rln2 - 2 * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * sqrtxz1 + 4 * ln(1 + sqrtxz1 - z) * NC * rln2 - 3 * ln(1 + sqrtxz1 - z) * NC * z * rln2 + 6 * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) * rln2 + 4 * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) * sqrtxz1 - 8 * ln(1 + sqrtxz1 - z) * NC * x * rln2 + 6 * ln(1 + sqrtxz1 - z) * NC * x * z * rln2 - 6 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * pow(z, -1) * rln2 - 4 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 + 2 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * rln2 - 6 * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z * rln2 - pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) - pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1)
                result += -4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * z - 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(z, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC + pow(ln(1 + sqrtxz1 - z), 2) * NC * z - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x * pow(z, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x * z + 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(x, 2) * pow(z, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(x, 2) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(x, 2) * z + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1)
                result += -3 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 12 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) - ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) + 6 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 40 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z
                result += +4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 44 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 40 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z - 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) + ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * z - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * z + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z
                result += -4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 * pow(opz, -1) + 3 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 - 12 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 - 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 + ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * rln2 + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * pow(opz, -1) - 6 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 + 40 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 - 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 * pow(opz, -1) + 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1)
                result += +4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 - 44 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 40 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 - 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * rln2 + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 + 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * rln2 + 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 - ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * rln2 - ln(1 + sqrtxz1 + z) * NC * z * rln2 + 2 * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) * rln2 + 2 * ln(1 + sqrtxz1 + z) * NC * x * z * rln2 - 2 * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * pow(z, -1) * rln2 - 2 * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * rln2 - 2 * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z * rln2 + 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 3.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) - 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1)
                result += -pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 5 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 11.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 5 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 1.0 / 2.0 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1)
                result += +2 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - 2 * ln(x) * pow(NC, -1) * pow(x, -2) + 2 * ln(x) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - 2 * ln(x) * pow(NC, -1) * pow(x, -2) * z - 12 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 12 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) + 6 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, -1) + 6 * ln(x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, -1) * z - 12 * ln(x) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 12 * ln(x) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) - 7.0 / 4.0 * ln(x) * pow(NC, -1) * pow(z, -1) + 2 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * pow(opz, -1) - 3 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 + 4 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 12 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(x) * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * pow(NC, -1) * pow(opx, -1) + 9.0 / 4.0 * ln(x) * pow(NC, -1) + 4 * ln(x) * pow(NC, -1) * rln2 - 4 * ln(x) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 8 * ln(x) * pow(NC, -1) * z * pow(opx, -1) - 5 * ln(x) * pow(NC, -1) * z - 2 * ln(x) * pow(NC, -1) * z * rln2 - 4 * ln(x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 4 * ln(x) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) + 13 * ln(x) * pow(NC, -1) * x * pow(z, -1)
                result += -4 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * pow(opz, -1) + 6 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 - 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 40 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 8 * ln(x) * pow(NC, -1) * x * pow(omz, -1) - 11.0 / 4.0 * ln(x) * pow(NC, -1) * x - 8 * ln(x) * pow(NC, -1) * x * rln2 + 8 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 4 * ln(x) * pow(NC, -1) * x * z * pow(opx, -1) - 5.0 / 4.0 * ln(x) * pow(NC, -1) * x * z + 4 * ln(x) * pow(NC, -1) * x * z * rln2 - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 * pow(opz, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 44 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 40 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * rln2 - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * z - 4 * ln(x) * pow(NC, -1) * pow(x, 2) * z * rln2 - 16 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1)
                result += -2 * ln(x) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * NC * pow(x, -2) * pow(z, -1) - 2 * ln(x) * NC * pow(x, -2) * z * pow(opx, -1) + 2 * ln(x) * NC * pow(x, -2) * z - 6 * ln(x) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 133.0 / 32.0 * ln(x) * NC * pow(x, -1) * pow(z, -1) - 5.0 / 32.0 * ln(x) * NC * pow(x, -1) - 6 * ln(x) * NC * pow(x, -1) * z * pow(opx, -1) + 4 * ln(x) * NC * pow(x, -1) * z - 5.0 / 32.0 * ln(x) * NC * pow(z, -2) - 8 * ln(x) * NC * pow(z, -1) * pow(opx, -1) + 59.0 / 16.0 * ln(x) * NC * pow(z, -1) + 2 * ln(x) * NC * pow(z, -1) * rln2 + ln(x) * NC * pow(z, -1) * sqrtxz1 + 4 * ln(x) * NC * pow(opx, -1) - 67.0 / 16.0 * ln(x) * NC - 3 * ln(x) * NC * rln2 - 8 * ln(x) * NC * z * pow(opx, -1) + 165.0 / 32.0 * ln(x) * NC * z + 2 * ln(x) * NC * z * rln2 - 5.0 / 32.0 * ln(x) * NC * x * pow(z, -2) - 4 * ln(x) * NC * x * pow(z, -1) * pow(opx, -1) - 109.0 / 16.0 * ln(x) * NC * x * pow(z, -1) - 4 * ln(x) * NC * x * pow(z, -1) * rln2 - 2 * ln(x) * NC * x * pow(z, -1) * sqrtxz1 + 4 * ln(x) * NC * x * pow(opx, -1) + 73.0 / 16.0 * ln(x) * NC * x + 6 * ln(x) * NC * x * rln2 - 4 * ln(x) * NC * x * z * pow(opx, -1) + 45.0 / 32.0 * ln(x) * NC * x * z - 4 * ln(x) * NC * x * z * rln2 + 109.0 / 32.0 * ln(x) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(x) * NC * pow(x, 2) * pow(z, -1) * rln2 + 2 * ln(x) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 - 77.0 / 32.0 * ln(x) * NC * pow(x, 2) - 2 * ln(x) * NC * pow(x, 2) * rln2 - 1.0 / 2.0 * ln(x) * NC * pow(x, 2) * z + 4 * ln(x) * NC * pow(x, 2) * z * rln2
                result += +ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1)
                result += +4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z - 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC - ln(x) * ln(1 + sqrtxz1 - z) * NC * z + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x * z
                result += -2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 6 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 20 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1)
                result += +2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 22 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - ln(x) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) + ln(x) * ln(1 + sqrtxz1 + z) * NC - ln(x) * ln(1 + sqrtxz1 + z) * NC * z + 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x + 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * z - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(opx, -1)
                result += +1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z + 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) - 3.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z + 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1)
                result += -ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * z + 3.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(z, -1) - ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * NC + 2 * ln(x) * ln(1 + x * pow(z, -1)) * NC * z * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * pow(z, -1)) * NC * z + ln(x) * ln(1 + x * pow(z, -1)) * NC * x * pow(z, -1) * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * NC * x * pow(z, -1) - ln(x) * ln(1 + x * pow(z, -1)) * NC * x * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * NC * x * z * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * NC * x * z + ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) + ln(x) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * z + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1)
                result += -ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) - 1.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z + 3 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 3 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) - 3.0 / 2.0 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z + 3 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1)
                result += -2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x - ln(x) * ln(1 + x * z) * pow(NC, -1) * x * z * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -2) * z + 3.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - ln(x) * ln(1 + x * z) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * ln(x) * ln(1 + x * z) * NC * pow(x, -1) * z * pow(opx, -1) - ln(x) * ln(1 + x * z) * NC * pow(x, -1) * z + 2 * ln(x) * ln(1 + x * z) * NC * pow(z, -1) * pow(opx, -1) - ln(x) * ln(1 + x * z) * NC * pow(opx, -1) + ln(x) * ln(1 + x * z) * NC + 2 * ln(x) * ln(1 + x * z) * NC * z * pow(opx, -1) + ln(x) * ln(1 + x * z) * NC * x * pow(z, -1) * pow(opx, -1) - ln(x) * ln(1 + x * z) * NC * x * pow(opx, -1) + ln(x) * ln(1 + x * z) * NC * x * z * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(1 + x * z) * NC * pow(x, 2) * z - ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(z + x) * pow(NC, -1) + 1.0 / 2.0 * ln(x) * ln(z + x) * pow(NC, -1) * z + 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) + ln(x) * ln(z + x) * pow(NC, -1) * x - ln(x) * ln(z + x) * pow(NC, -1) * x * z
                result += -ln(x) * ln(z + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + ln(x) * ln(z + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(z + x) * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(x) * ln(z + x) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(z + x) * NC * z + ln(x) * ln(z + x) * NC * x * pow(z, -1) + ln(x) * ln(z + x) * NC * x * z - ln(x) * ln(z + x) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(z + x) * NC * pow(x, 2) - ln(x) * ln(z + x) * NC * pow(x, 2) * z + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 3.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + 3.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) - 3.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 3.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z + 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 9.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) - 9.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z + 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * pow(opx, -1)
                result += -1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(opx, -1) + 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * z * pow(opx, -1) + pow(ln(x), 2) * pow(NC, -1) * z + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 15 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 12 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) - pow(ln(x), 2) * pow(NC, -1) * x - 3 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1)
                result += +3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 33.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 15 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 3.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 3.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -2) * pow(z, -1) + 3.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -2) * z * pow(opx, -1) - 3.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -2) * z + 9.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, -1) * pow(z, -1) + 9.0 / 4.0 * pow(ln(x), 2) * NC * pow(x, -1) * z * pow(opx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, -1) * z + 3 * pow(ln(x), 2) * NC * pow(z, -1) * pow(opx, -1) - pow(ln(x), 2) * NC * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(opx, -1) + pow(ln(x), 2) * NC + 3 * pow(ln(x), 2) * NC * z * pow(opx, -1) - pow(ln(x), 2) * NC * z + 3.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(z, -1) * pow(opx, -1) - pow(ln(x), 2) * NC * x * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(opx, -1) + pow(ln(x), 2) * NC * x + 3.0 / 2.0 * pow(ln(x), 2) * NC * x * z * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) + pow(ln(x), 2) * NC * pow(x, 2) * z
                result += -ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) + 1.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z - 3 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 3 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) + 3.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z - 3 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 3 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - 5.0 / 4.0 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 3 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(z) * pow(NC, -1) + ln(x) * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1)
                result += -ln(x) * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * z * pow(opx, -1) - 3.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * z - ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) + 9.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 10 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + ln(x) * ln(z) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * x * z - ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 11 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 10 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * z + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += -4 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 1.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -2) * z - 3.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(z) * NC * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * ln(z) * NC * pow(x, -1) * z * pow(opx, -1) + ln(x) * ln(z) * NC * pow(x, -1) * z - 2 * ln(x) * ln(z) * NC * pow(z, -1) * pow(opx, -1) + 3.0 / 4.0 * ln(x) * ln(z) * NC * pow(z, -1) + ln(x) * ln(z) * NC * pow(opx, -1) - 5.0 / 2.0 * ln(x) * ln(z) * NC - 2 * ln(x) * ln(z) * NC * z * pow(opx, -1) + 3.0 / 2.0 * ln(x) * ln(z) * NC * z - ln(x) * ln(z) * NC * x * pow(z, -1) * pow(opx, -1) - 7.0 / 2.0 * ln(x) * ln(z) * NC * x * pow(z, -1) + ln(x) * ln(z) * NC * x * pow(opx, -1) - 3 * ln(x) * ln(z) * NC * x - ln(x) * ln(z) * NC * x * z * pow(opx, -1) - 2 * ln(x) * ln(z) * NC * x * z + ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + ln(x) * ln(z) * NC * pow(x, 2) + ln(x) * ln(z) * NC * pow(x, 2) * z + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) - ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z + 6 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1)
                result += -6 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) - 3 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z + 6 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 6 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + 1.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * z + 2 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 5 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + ln(x) * ln(omx) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - ln(x) * ln(omx) * NC * pow(x, -2) * pow(z, -1) + ln(x) * ln(omx) * NC * pow(x, -2) * z * pow(opx, -1) - ln(x) * ln(omx) * NC * pow(x, -2) * z + 3 * ln(x) * ln(omx) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(omx) * NC * pow(x, -1) * pow(z, -1) + 3 * ln(x) * ln(omx) * NC * pow(x, -1) * z * pow(opx, -1)
                result += -2 * ln(x) * ln(omx) * NC * pow(x, -1) * z + 4 * ln(x) * ln(omx) * NC * pow(z, -1) * pow(opx, -1) - 5.0 / 2.0 * ln(x) * ln(omx) * NC * pow(z, -1) - 2 * ln(x) * ln(omx) * NC * pow(opx, -1) + 2 * ln(x) * ln(omx) * NC + 4 * ln(x) * ln(omx) * NC * z * pow(opx, -1) - 2 * ln(x) * ln(omx) * NC * z + 2 * ln(x) * ln(omx) * NC * x * pow(z, -1) * pow(opx, -1) + ln(x) * ln(omx) * NC * x * pow(z, -1) - 2 * ln(x) * ln(omx) * NC * x * pow(opx, -1) + 2 * ln(x) * ln(omx) * NC * x * z * pow(opx, -1) - ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + ln(x) * ln(omx) * NC * pow(x, 2) + 3.0 / 4.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) + 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) - 1.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) - 2 * ln(x) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 1.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * z - 3.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) + ln(x) * ln(omz) * pow(NC, -1) * x + 4 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1)
                result += -2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * z - 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 3.0 / 4.0 * ln(x) * ln(omz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(omz) * NC - 1.0 / 2.0 * ln(x) * ln(omz) * NC * z + 3.0 / 2.0 * ln(x) * ln(omz) * NC * x * pow(z, -1) - ln(x) * ln(omz) * NC * x - 2 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(omz) * NC * pow(x, 2) - ln(x) * ln(omz) * NC * pow(x, 2) * z - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) + ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) + ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z - 6 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 6 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1)
                result += +3 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) + 3 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z - 6 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 6 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(opx, -1) + ln(x) * ln(opx) * pow(NC, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * z * pow(opx, -1) - ln(x) * ln(opx) * pow(NC, -1) * z - 2 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * x + 2 * ln(x) * ln(opx) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * x * z - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, 2) * z - ln(x) * ln(opx) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + ln(x) * ln(opx) * NC * pow(x, -2) * pow(z, -1) - ln(x) * ln(opx) * NC * pow(x, -2) * z * pow(opx, -1) + ln(x) * ln(opx) * NC * pow(x, -2) * z - 3 * ln(x) * ln(opx) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * ln(x) * ln(opx) * NC * pow(x, -1) * pow(z, -1) - 3 * ln(x) * ln(opx) * NC * pow(x, -1) * z * pow(opx, -1) + 2 * ln(x) * ln(opx) * NC * pow(x, -1) * z - 4 * ln(x) * ln(opx) * NC * pow(z, -1) * pow(opx, -1) + ln(x) * ln(opx) * NC * pow(z, -1) + 2 * ln(x) * ln(opx) * NC * pow(opx, -1) - 2 * ln(x) * ln(opx) * NC - 4 * ln(x) * ln(opx) * NC * z * pow(opx, -1)
                result += +ln(x) * ln(opx) * NC * z - 2 * ln(x) * ln(opx) * NC * x * pow(z, -1) * pow(opx, -1) - 2 * ln(x) * ln(opx) * NC * x * pow(z, -1) + 2 * ln(x) * ln(opx) * NC * x * pow(opx, -1) - 2 * ln(x) * ln(opx) * NC * x * z * pow(opx, -1) - 2 * ln(x) * ln(opx) * NC * x * z - 2 * ln(x) * ln(opx) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(opx) * NC * pow(x, 2) - 2 * ln(x) * ln(opx) * NC * pow(x, 2) * z + 23.0 / 8.0 * ln(z) * pow(NC, -1) * pow(z, -1) + 6 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * pow(opz, -1) - 5 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 + 4 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 8 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 + 12 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) + 24 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 16 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 + ln(z) * pow(NC, -1) + 4 * ln(z) * pow(NC, -1) * rln2 - 4 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 8 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 + 1.0 / 8.0 * ln(z) * pow(NC, -1) * z - 2 * ln(z) * pow(NC, -1) * z * rln2 - 7 * ln(z) * pow(NC, -1) * x * pow(z, -1) - 12 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * pow(opz, -1) + 10 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 - 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2
                result += -40 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 80 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 64 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 - 3.0 / 4.0 * ln(z) * pow(NC, -1) * x - 8 * ln(z) * pow(NC, -1) * x * rln2 + 8 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 - ln(z) * pow(NC, -1) * x * z + 4 * ln(z) * pow(NC, -1) * x * z * rln2 + 13.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 * pow(opz, -1) - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * rln2 + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 8 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 + 44 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 40 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 88 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 80 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * rln2 - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 8 * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2
                result += +ln(z) * pow(NC, -1) * pow(x, 2) * z - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * z * rln2 - 16 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 32 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 - 5.0 / 32.0 * ln(z) * NC * pow(x, -1) * pow(z, -1) - 5.0 / 32.0 * ln(z) * NC * pow(x, -1) + 5.0 / 32.0 * ln(z) * NC * pow(z, -2) - 63.0 / 16.0 * ln(z) * NC * pow(z, -1) + 2 * ln(z) * NC * pow(z, -1) * rln2 + ln(z) * NC * pow(z, -1) * sqrtxz1 - 33.0 / 16.0 * ln(z) * NC - ln(z) * NC * rln2 + 1.0 / 32.0 * ln(z) * NC * z + 2 * ln(z) * NC * z * rln2 - 5.0 / 32.0 * ln(z) * NC * x * pow(z, -2) + 93.0 / 16.0 * ln(z) * NC * x * pow(z, -1) - 4 * ln(z) * NC * x * pow(z, -1) * rln2 - 2 * ln(z) * NC * x * pow(z, -1) * sqrtxz1 - 7.0 / 16.0 * ln(z) * NC * x + 2 * ln(z) * NC * x * rln2 + 27.0 / 32.0 * ln(z) * NC * x * z - 4 * ln(z) * NC * x * z * rln2 - 131.0 / 32.0 * ln(z) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(z) * NC * pow(x, 2) * pow(z, -1) * rln2 + 2 * ln(z) * NC * pow(x, 2) * pow(z, -1) * sqrtxz1 + 61.0 / 32.0 * ln(z) * NC * pow(x, 2) + 2 * ln(z) * NC * pow(x, 2) * rln2 - ln(z) * NC * pow(x, 2) * z + 4 * ln(z) * NC * pow(x, 2) * z * rln2
                result += -2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 12 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1)
                result += -4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 40 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 44 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z + 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - ln(z) * ln(1 + sqrtxz1 - z) * NC * pow(z, -1)
                result += +ln(z) * ln(1 + sqrtxz1 - z) * NC - ln(z) * ln(1 + sqrtxz1 - z) * NC * z + 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x + 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * z - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * pow(x, 2) * z - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + 3 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 12 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 6 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 40 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1)
                result += -2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 44 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * z + 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) - ln(z) * ln(1 + sqrtxz1 + z) * NC * z + 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * z - 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(x, 2) * z - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1)
                result += -ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z - 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) + 3.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z - 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 3 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1)
                result += +2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -2) * z - 3.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, -1) * z - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(z, -1) * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(z, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * NC - 2 * ln(z) * ln(1 + x * pow(z, -1)) * NC * z * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * pow(z, -1)) * NC * z - ln(z) * ln(1 + x * pow(z, -1)) * NC * x * pow(z, -1) * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * NC * x * pow(z, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC * x * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * NC * x * z * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * NC * x * z - ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2)
                result += -ln(z) * ln(1 + x * pow(z, -1)) * NC * pow(x, 2) * z + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) - 1.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z + 3 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 3 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) - 3.0 / 2.0 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z + 3 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1)
                result += -ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x - ln(z) * ln(1 + x * z) * pow(NC, -1) * x * z * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -2) * z + 3.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - ln(z) * ln(1 + x * z) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * ln(z) * ln(1 + x * z) * NC * pow(x, -1) * z * pow(opx, -1) - ln(z) * ln(1 + x * z) * NC * pow(x, -1) * z + 2 * ln(z) * ln(1 + x * z) * NC * pow(z, -1) * pow(opx, -1) - ln(z) * ln(1 + x * z) * NC * pow(opx, -1) + ln(z) * ln(1 + x * z) * NC + 2 * ln(z) * ln(1 + x * z) * NC * z * pow(opx, -1) + ln(z) * ln(1 + x * z) * NC * x * pow(z, -1) * pow(opx, -1) - ln(z) * ln(1 + x * z) * NC * x * pow(opx, -1) + ln(z) * ln(1 + x * z) * NC * x * z * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(z) * ln(1 + x * z) * NC * pow(x, 2) * z + ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(z + x) * pow(NC, -1) - 1.0 / 2.0 * ln(z) * ln(z + x) * pow(NC, -1) * z - 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1)
                result += +2 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) - ln(z) * ln(z + x) * pow(NC, -1) * x + ln(z) * ln(z + x) * pow(NC, -1) * x * z + ln(z) * ln(z + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - ln(z) * ln(z + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * ln(z + x) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * ln(z + x) * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(z + x) * NC * z - ln(z) * ln(z + x) * NC * x * pow(z, -1) - ln(z) * ln(z + x) * NC * x * z + ln(z) * ln(z + x) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(z + x) * NC * pow(x, 2) + ln(z) * ln(z + x) * NC * pow(x, 2) * z - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) + 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) + 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) + 3.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) + 3.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z
                result += -3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 15.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) + pow(ln(z), 2) * pow(NC, -1) * z * pow(opx, -1) + 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * z - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 25 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) - pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * z
                result += -1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 55.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 25 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * z - 10 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -2) * pow(z, -1) - 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -2) * z * pow(opx, -1) + 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -2) * z - 3.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, -1) * pow(z, -1) - 3.0 / 4.0 * pow(ln(z), 2) * NC * pow(x, -1) * z * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, -1) * z - pow(ln(z), 2) * NC * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(z, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC - pow(ln(z), 2) * NC * z * pow(opx, -1) - 1.0 / 4.0 * pow(ln(z), 2) * NC * z - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) * pow(opx, -1)
                result += +pow(ln(z), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * z * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * x * z - 2 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * z + ln(z) * ln(omx) * pow(NC, -1) - 2 * ln(z) * ln(omx) * pow(NC, -1) * x + 2 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - ln(z) * ln(omx) * NC + 2 * ln(z) * ln(omx) * NC * x - 2 * ln(z) * ln(omx) * NC * pow(x, 2) + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1)
                result += -8 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 15.0 / 8.0 * ln(omx) * pow(NC, -1) * pow(z, -1) - 7.0 / 4.0 * ln(omx) * pow(NC, -1) + 3.0 / 8.0 * ln(omx) * pow(NC, -1) * z - 5 * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 4 * ln(omx) * pow(NC, -1) * x - 1.0 / 4.0 * ln(omx) * pow(NC, -1) * x * z + 9.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 7.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) * z - 15.0 / 8.0 * ln(omx) * NC * pow(z, -1) + 7.0 / 4.0 * ln(omx) * NC - 3.0 / 8.0 * ln(omx) * NC * z + 5 * ln(omx) * NC * x * pow(z, -1) - 4 * ln(omx) * NC * x + 1.0 / 4.0 * ln(omx) * NC * x * z - 9.0 / 2.0 * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 7.0 / 2.0 * ln(omx) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * NC * pow(x, 2) * z
                result += -1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) - 1.0 / 4.0 * pow(ln(omx), 2) * pow(NC, -1) * z + pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) - pow(ln(omx), 2) * pow(NC, -1) * x + 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * z - pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(z, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC + 1.0 / 4.0 * pow(ln(omx), 2) * NC * z - pow(ln(omx), 2) * NC * x * pow(z, -1) + pow(ln(omx), 2) * NC * x - 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * z + pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1) - pow(ln(omx), 2) * NC * pow(x, 2) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * z - ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) + ln(omx) * ln(omz) * pow(NC, -1) - 1.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) * z + 2 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(omx) * ln(omz) * pow(NC, -1) * x + ln(omx) * ln(omz) * pow(NC, -1) * x * z - 2 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2)
                result += -ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * z + ln(omx) * ln(omz) * NC * pow(z, -1) - ln(omx) * ln(omz) * NC + 1.0 / 2.0 * ln(omx) * ln(omz) * NC * z - 2 * ln(omx) * ln(omz) * NC * x * pow(z, -1) + 2 * ln(omx) * ln(omz) * NC * x - ln(omx) * ln(omz) * NC * x * z + 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(omx) * ln(omz) * NC * pow(x, 2) + ln(omx) * ln(omz) * NC * pow(x, 2) * z + 15.0 / 8.0 * ln(omz) * pow(NC, -1) * pow(z, -1) + 4 * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 4 * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 + 12 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 8 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 - 7.0 / 4.0 * ln(omz) * pow(NC, -1) - 4 * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 4 * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 + 3.0 / 8.0 * ln(omz) * pow(NC, -1) * z - 5 * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) + 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 - 40 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 32 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 + 4 * ln(omz) * pow(NC, -1) * x + 8 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) - 8 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 - 1.0 / 4.0 * ln(omz) * pow(NC, -1) * x * z + 9.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 * pow(opz, -1) - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * rln2 + 44 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1)
                result += -40 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 - 7.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) - 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 4 * ln(omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * rln2 - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * z - 16 * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 * pow(opz, -1) + 16 * ln(omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * rln2 - 15.0 / 8.0 * ln(omz) * NC * pow(z, -1) + 7.0 / 4.0 * ln(omz) * NC - 3.0 / 8.0 * ln(omz) * NC * z + 5 * ln(omz) * NC * x * pow(z, -1) - 4 * ln(omz) * NC * x + 1.0 / 4.0 * ln(omz) * NC * x * z - 9.0 / 2.0 * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 7.0 / 2.0 * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * NC * pow(x, 2) * z
                result += -4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 12 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 40 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1
                result += -44 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 40 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 6 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 20 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1)
                result += -2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 22 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 1.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * z + pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1)
                result += -pow(ln(omz), 2) * pow(NC, -1) * x + 4 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * z - pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * z - 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * pow(z, -1) - 1.0 / 2.0 * pow(ln(omz), 2) * NC + 1.0 / 4.0 * pow(ln(omz), 2) * NC * z - pow(ln(omz), 2) * NC * x * pow(z, -1) + pow(ln(omz), 2) * NC * x - 1.0 / 2.0 * pow(ln(omz), 2) * NC * x * z + pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) - pow(ln(omz), 2) * NC * pow(x, 2) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * z + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1
                result += +6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1
                result += +22 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(x, 2) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1)
                result += +2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 20 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1)
                result += +2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(x, 2) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1)
                result += -4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 + 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 22 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1)
                result += -Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * pow(z, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * z + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * z - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * pow(x, 2) * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * pow(x, 2) * z + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1
                result += +20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 - 22 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) + 20 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * z + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1)
                result += +Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * pow(z, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * z - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * pow(z, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * z + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * pow(x, 2) * pow(z, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * pow(x, 2) * z + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 12 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) - 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 40 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 44 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += -40 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 12 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) - 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 - 40 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 44 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += -40 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 4 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + 1.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) - 1.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z + 3 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 3 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) - 3.0 / 2.0 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z + 3 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1)
                result += -3 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(opx, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * z + Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) + 1.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -2) * z * pow(opx, -1) - 1.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -2) * z + 3.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - Li2(-x * pow(z, -1)) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * Li2(-x * pow(z, -1)) * NC * pow(x, -1) * z * pow(opx, -1) - Li2(-x * pow(z, -1)) * NC * pow(x, -1) * z + 2 * Li2(-x * pow(z, -1)) * NC * pow(z, -1) * pow(opx, -1) - Li2(-x * pow(z, -1)) * NC * pow(z, -1) - Li2(-x * pow(z, -1)) * NC * pow(opx, -1) + Li2(-x * pow(z, -1)) * NC
                result += +2 * Li2(-x * pow(z, -1)) * NC * z * pow(opx, -1) - Li2(-x * pow(z, -1)) * NC * z + Li2(-x * pow(z, -1)) * NC * x * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * NC * x * pow(z, -1) - Li2(-x * pow(z, -1)) * NC * x * pow(opx, -1) + Li2(-x * pow(z, -1)) * NC * x * z * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * NC * x * z - 2 * Li2(-x * pow(z, -1)) * NC * pow(x, 2) - 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) + Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) - Li2(-x) * pow(NC, -1) * pow(x, -2) + Li2(-x) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) - Li2(-x) * pow(NC, -1) * pow(x, -2) * z - 6 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) + 6 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) + 3 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(x, -1) + 3 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z - 6 * Li2(-x) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 6 * Li2(-x) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(opx, -1) + Li2(-x) * pow(NC, -1) + 4 * Li2(-x) * pow(NC, -1) * z * pow(opx, -1) - Li2(-x) * pow(NC, -1) * z - 2 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1)
                result += -4 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 2 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) + 2 * Li2(-x) * pow(NC, -1) * x + 2 * Li2(-x) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * Li2(-x) * pow(NC, -1) * x * z - 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) * z - Li2(-x) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) + Li2(-x) * NC * pow(x, -2) * pow(z, -1) - Li2(-x) * NC * pow(x, -2) * z * pow(opx, -1) + Li2(-x) * NC * pow(x, -2) * z - 3 * Li2(-x) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x) * NC * pow(x, -1) * pow(z, -1) - 3 * Li2(-x) * NC * pow(x, -1) * z * pow(opx, -1) + 2 * Li2(-x) * NC * pow(x, -1) * z - 4 * Li2(-x) * NC * pow(z, -1) * pow(opx, -1) + Li2(-x) * NC * pow(z, -1) + 2 * Li2(-x) * NC * pow(opx, -1) - 2 * Li2(-x) * NC - 4 * Li2(-x) * NC * z * pow(opx, -1) + Li2(-x) * NC * z - 2 * Li2(-x) * NC * x * pow(z, -1) * pow(opx, -1) - 2 * Li2(-x) * NC * x * pow(z, -1) + 2 * Li2(-x) * NC * x * pow(opx, -1) - 2 * Li2(-x) * NC * x * z * pow(opx, -1) - 2 * Li2(-x) * NC * x * z - 2 * Li2(-x) * NC * pow(x, 2) * pow(z, -1) + 2 * Li2(-x) * NC * pow(x, 2) - 2 * Li2(-x) * NC * pow(x, 2) * z + Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - 1.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + 1.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -2)
                result += -1.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + 1.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z + 3 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 3 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, -1) - 3.0 / 2.0 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z + 3 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 3 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(z, -1) * pow(opz, -1) - Li2(-x * z) * pow(NC, -1) * pow(z, -1) - Li2(-x * z) * pow(NC, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * z * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * pow(opz, -1) - 2 * Li2(-x * z) * pow(NC, -1) * x - Li2(-x * z) * pow(NC, -1) * x * z * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(opz, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * Li2(-x * z) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * Li2(-x * z) * NC * pow(x, -2) * pow(z, -1) + 1.0 / 2.0 * Li2(-x * z) * NC * pow(x, -2) * z * pow(opx, -1)
                result += -1.0 / 2.0 * Li2(-x * z) * NC * pow(x, -2) * z + 3.0 / 2.0 * Li2(-x * z) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - Li2(-x * z) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 2.0 * Li2(-x * z) * NC * pow(x, -1) * z * pow(opx, -1) - Li2(-x * z) * NC * pow(x, -1) * z + 2 * Li2(-x * z) * NC * pow(z, -1) * pow(opx, -1) - Li2(-x * z) * NC * pow(opx, -1) + Li2(-x * z) * NC + 2 * Li2(-x * z) * NC * z * pow(opx, -1) + Li2(-x * z) * NC * x * pow(z, -1) * pow(opx, -1) - Li2(-x * z) * NC * x * pow(opx, -1) + Li2(-x * z) * NC * x * z * pow(opx, -1) + 2 * Li2(-x * z) * NC * pow(x, 2) * pow(z, -1) + 2 * Li2(-x * z) * NC * pow(x, 2) * z + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 + 6 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) - 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(opz, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1
                result += -20 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(opz, -1) + 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(opz, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 * pow(opz, -1) - 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * sqrtxz1 + 22 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(opz, -1) - 20 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) - 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) * pow(opz, -1) + 2 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz1, -1) - 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) * pow(opz, -1)
                result += +8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz1, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(omz, -1) - 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) - Li2(x) * pow(NC, -1) * pow(x, -2) * pow(opx, -1) + Li2(x) * pow(NC, -1) * pow(x, -2) - Li2(x) * pow(NC, -1) * pow(x, -2) * z * pow(opx, -1) + Li2(x) * pow(NC, -1) * pow(x, -2) * z + 6 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(omz, -1) - 6 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) - 3 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, -1) - 3 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, -1) * z + 6 * Li2(x) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) * pow(opx, -1) - 6 * Li2(x) * pow(NC, -1) * pow(z, -1) * pow(opx, -1) - 1.0 / 4.0 * Li2(x) * pow(NC, -1) * pow(z, -1) - 2 * Li2(x) * pow(NC, -1) * pow(omz, -1) - 2 * Li2(x) * pow(NC, -1) * pow(opx, -1) + 1.0 / 2.0 * Li2(x) * pow(NC, -1) - 4 * Li2(x) * pow(NC, -1) * z * pow(opx, -1) + 3.0 / 2.0 * Li2(x) * pow(NC, -1) * z + 2 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 2 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * pow(opx, -1) - 7.0 / 2.0 * Li2(x) * pow(NC, -1) * x * pow(z, -1) - 4 * Li2(x) * pow(NC, -1) * x * pow(omz, -1)
                result += -Li2(x) * pow(NC, -1) * x - 2 * Li2(x) * pow(NC, -1) * x * z * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 3 * Li2(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * Li2(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(x) * pow(NC, -1) * pow(x, 2) - Li2(x) * pow(NC, -1) * pow(x, 2) * z + Li2(x) * NC * pow(x, -2) * pow(z, -1) * pow(opx, -1) - Li2(x) * NC * pow(x, -2) * pow(z, -1) + Li2(x) * NC * pow(x, -2) * z * pow(opx, -1) - Li2(x) * NC * pow(x, -2) * z + 3 * Li2(x) * NC * pow(x, -1) * pow(z, -1) * pow(opx, -1) - 2 * Li2(x) * NC * pow(x, -1) * pow(z, -1) + 3 * Li2(x) * NC * pow(x, -1) * z * pow(opx, -1) - 2 * Li2(x) * NC * pow(x, -1) * z + 4 * Li2(x) * NC * pow(z, -1) * pow(opx, -1) - 7.0 / 4.0 * Li2(x) * NC * pow(z, -1) - 2 * Li2(x) * NC * pow(opx, -1) + 3.0 / 2.0 * Li2(x) * NC + 4 * Li2(x) * NC * z * pow(opx, -1) - 3.0 / 2.0 * Li2(x) * NC * z + 2 * Li2(x) * NC * x * pow(z, -1) * pow(opx, -1) - 1.0 / 2.0 * Li2(x) * NC * x * pow(z, -1) - 2 * Li2(x) * NC * x * pow(opx, -1) + Li2(x) * NC * x + 2 * Li2(x) * NC * x * z * pow(opx, -1) + Li2(x) * NC * pow(x, 2) * pow(z, -1) - Li2(x) * NC * pow(x, 2) + Li2(x) * NC * pow(x, 2) * z - Li2(z) * pow(NC, -1) + 2 * Li2(z) * pow(NC, -1) * x - 2 * Li2(z) * pow(NC, -1) * pow(x, 2) + Li2(z) * NC - 2 * Li2(z) * NC * x + 2 * Li2(z) * NC * pow(x, 2)
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += -11.0 / 8.0 * LMUA * pow(NC, -1) * pow(z, -1) + 5.0 / 4.0 * LMUA * pow(NC, -1) + 1.0 / 8.0 * LMUA * pow(NC, -1) * z + 15.0 / 4.0 * LMUA * pow(NC, -1) * x * pow(z, -1) - 7.0 / 2.0 * LMUA * pow(NC, -1) * x + 1.0 / 4.0 * LMUA * pow(NC, -1) * x * z - 15.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7.0 / 2.0 * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) * z + 11.0 / 8.0 * LMUA * NC * pow(z, -1) - 5.0 / 4.0 * LMUA * NC - 1.0 / 8.0 * LMUA * NC * z - 15.0 / 4.0 * LMUA * NC * x * pow(z, -1) + 7.0 / 2.0 * LMUA * NC * x - 1.0 / 4.0 * LMUA * NC * x * z + 15.0 / 4.0 * LMUA * NC * pow(x, 2) * pow(z, -1) - 7.0 / 2.0 * LMUA * NC * pow(x, 2) + 1.0 / 4.0 * LMUA * NC * pow(x, 2) * z - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) - 1.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * z + ln(x) * LMUA * pow(NC, -1) * x * pow(z, -1) - ln(x) * LMUA * pow(NC, -1) * x + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x * z - ln(x) * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(x) * LMUA * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * LMUA * NC + 1.0 / 4.0 * ln(x) * LMUA * NC * z - ln(x) * LMUA * NC * x * pow(z, -1) + ln(x) * LMUA * NC * x - 1.0 / 2.0 * ln(x) * LMUA * NC * x * z + ln(x) * LMUA * NC * pow(x, 2) * pow(z, -1) - ln(x) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUA * NC * pow(x, 2) * z - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) - 1.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) * z + ln(z) * LMUA * pow(NC, -1) * x * pow(z, -1) + ln(z) * LMUA * pow(NC, -1) * x + 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x * z - ln(z) * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * LMUA * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * LMUA * NC + 1.0 / 4.0 * ln(z) * LMUA * NC * z - ln(z) * LMUA * NC * x * pow(z, -1) - ln(z) * LMUA * NC * x - 1.0 / 2.0 * ln(z) * LMUA * NC * x * z + ln(z) * LMUA * NC * pow(x, 2) * pow(z, -1) + ln(z) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(z) * LMUA * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) + 1.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * z - ln(omx) * LMUA * pow(NC, -1) * x * pow(z, -1) + ln(omx) * LMUA * pow(NC, -1) * x - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x * z + ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(omx) * LMUA * NC * pow(z, -1) + 1.0 / 2.0 * ln(omx) * LMUA * NC - 1.0 / 4.0 * ln(omx) * LMUA * NC * z + ln(omx) * LMUA * NC * x * pow(z, -1) - ln(omx) * LMUA * NC * x + 1.0 / 2.0 * ln(omx) * LMUA * NC * x * z - ln(omx) * LMUA * NC * pow(x, 2) * pow(z, -1) + ln(omx) * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUA * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) + 1.0 / 4.0 * ln(omz) * LMUA * pow(NC, -1) * z - ln(omz) * LMUA * pow(NC, -1) * x * pow(z, -1) + ln(omz) * LMUA * pow(NC, -1) * x - 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x * z + ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(omz) * LMUA * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * LMUA * NC - 1.0 / 4.0 * ln(omz) * LMUA * NC * z + ln(omz) * LMUA * NC * x * pow(z, -1) - ln(omz) * LMUA * NC * x + 1.0 / 2.0 * ln(omz) * LMUA * NC * x * z - ln(omz) * LMUA * NC * pow(x, 2) * pow(z, -1) + ln(omz) * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(omz) * LMUA * NC * pow(x, 2) * z
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 2.0 * LMUF * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * LMUF * pow(NC, -1) - 1.0 / 2.0 * LMUF * pow(NC, -1) * z + 5.0 / 4.0 * LMUF * pow(NC, -1) * x * pow(z, -1) - 1.0 / 2.0 * LMUF * pow(NC, -1) * x - 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * LMUF * NC * pow(z, -1) - 1.0 / 2.0 * LMUF * NC + 1.0 / 2.0 * LMUF * NC * z - 5.0 / 4.0 * LMUF * NC * x * pow(z, -1) + 1.0 / 2.0 * LMUF * NC * x + 3.0 / 4.0 * LMUF * NC * pow(x, 2) * pow(z, -1) - 3.0 / 4.0 * LMUF * NC * pow(x, 2) * z - 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * pow(z, -1) - 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * z + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * pow(z, -1) - 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * z - ln(x) * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * pow(x, 2) * z + 1.0 / 4.0 * ln(x) * LMUF * NC * pow(z, -1) + 1.0 / 4.0 * ln(x) * LMUF * NC * z - 1.0 / 2.0 * ln(x) * LMUF * NC * x * pow(z, -1) + 1.0 / 2.0 * ln(x) * LMUF * NC * x * z + ln(x) * LMUF * NC * pow(x, 2) * pow(z, -1) - ln(x) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUF * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) + 1.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) * z - ln(z) * LMUF * pow(NC, -1) * x * pow(z, -1) + ln(z) * LMUF * pow(NC, -1) * x - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x * z + ln(z) * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(z) * LMUF * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * LMUF * NC - 1.0 / 4.0 * ln(z) * LMUF * NC * z + ln(z) * LMUF * NC * x * pow(z, -1) - ln(z) * LMUF * NC * x + 1.0 / 2.0 * ln(z) * LMUF * NC * x * z - ln(z) * LMUF * NC * pow(x, 2) * pow(z, -1) + ln(z) * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * LMUF * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) + 1.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * z - ln(omx) * LMUF * pow(NC, -1) * x * pow(z, -1) + ln(omx) * LMUF * pow(NC, -1) * x - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x * z + ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(omx) * LMUF * NC * pow(z, -1) + 1.0 / 2.0 * ln(omx) * LMUF * NC - 1.0 / 4.0 * ln(omx) * LMUF * NC * z + ln(omx) * LMUF * NC * x * pow(z, -1) - ln(omx) * LMUF * NC * x + 1.0 / 2.0 * ln(omx) * LMUF * NC * x * z - ln(omx) * LMUF * NC * pow(x, 2) * pow(z, -1) + ln(omx) * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUF * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) + 1.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) * z - ln(omz) * LMUF * pow(NC, -1) * x * pow(z, -1) + ln(omz) * LMUF * pow(NC, -1) * x - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x * z + ln(omz) * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(omz) * LMUF * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * LMUF * NC - 1.0 / 4.0 * ln(omz) * LMUF * NC * z + ln(omz) * LMUF * NC * x * pow(z, -1) - ln(omz) * LMUF * NC * x + 1.0 / 2.0 * ln(omz) * LMUF * NC * x * z - ln(omz) * LMUF * NC * pow(x, 2) * pow(z, -1) + ln(omz) * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * ln(omz) * LMUF * NC * pow(x, 2) * z
        elif orders == "011":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) - 1.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * z + LMUA * LMUF * pow(NC, -1) * x * pow(z, -1) - LMUA * LMUF * pow(NC, -1) * x + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x * z - LMUA * LMUF * pow(NC, -1) * pow(x, 2) * pow(z, -1) + LMUA * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * LMUA * LMUF * NC * pow(z, -1) - 1.0 / 2.0 * LMUA * LMUF * NC + 1.0 / 4.0 * LMUA * LMUF * NC * z - LMUA * LMUF * NC * x * pow(z, -1) + LMUA * LMUF * NC * x - 1.0 / 2.0 * LMUA * LMUF * NC * x * z + LMUA * LMUF * NC * pow(x, 2) * pow(z, -1) - LMUA * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * LMUA * LMUF * NC * pow(x, 2) * z

        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")


def ct_nnlo_g2q_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 16.0 * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) + 1.0 / 16.0 * pow(NC, -1) * pow(x, -1) - 2 * pow(NC, -1) * pow(z, -1) * pow(omz, -1) + 9.0 / 16.0 * pow(NC, -1) * pow(z, -1) + 3.0 / 4.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 1.0 / 16.0 * pow(NC, -1) * pow(poly2, -1) + 1.0 / 2.0 * pow(NC, -1) * pow(omz, -1) - 1.0 / 4.0 * pow(NC, -1) * pow(omxmz, -1) - 21.0 / 16.0 * pow(NC, -1) + 3.0 / 4.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) - 5.0 / 12.0 * pow(NC, -1) * pow(pi, 2) + 7.0 / 16.0 * pow(NC, -1) * z - 1.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) + 4 * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 3 * pow(NC, -1) * x * pow(z, -1) - 13.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) - 4 * pow(NC, -1) * x * pow(omz, -1) + 3.0 / 4.0 * pow(NC, -1) * x * pow(omxmz, -1) - 7.0 / 16.0 * pow(NC, -1) * x - 3.0 / 2.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) + 5.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) + pow(NC, -1) * x * z - 1.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) - 2 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 11.0 / 4.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) + pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 3 * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - pow(NC, -1) * pow(x, 2) * pow(omxmz, -1) - 7.0 / 16.0 * pow(NC, -1) * pow(x, 2) + pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 3.0 / 2.0 * pow(NC, -1) * pow(x, 2) * z - 1.0 / 6.0 * pow(NC, -1) * pow(x, 2) * z * pow(pi, 2) + 1.0 / 16.0 * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) + 1.0 / 2.0 * pow(NC, -1) * pow(x, 3) * pow(omxmz, -1) - 1.0 / 16.0 * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) + 13.0 / 9.0 * NC * pow(x, -1) * pow(z, -1) + 1.0 / 16.0 * NC * pow(x, -1) * pow(poly2, -1) - 425.0 / 144.0 * NC * pow(x, -1) + 2 * NC * pow(z, -1) * pow(omz, -1)
                result += -199.0 / 48.0 * NC * pow(z, -1) - 1.0 / 3.0 * NC * pow(z, -1) * pow(pi, 2) * pow(omz, -1) + 1.0 / 6.0 * NC * pow(z, -1) * pow(pi, 2) - 1.0 / 16.0 * NC * pow(poly2, -1) - 2 * NC * pow(omz, -1) + 1.0 / 4.0 * NC * pow(omxmz, -1) + 71.0 / 48.0 * NC + 1.0 / 6.0 * NC * pow(pi, 2) * pow(omz, -1) + 1.0 / 4.0 * NC * pow(pi, 2) + 153.0 / 16.0 * NC * z + 1.0 / 12.0 * NC * z * pow(pi, 2) - 4 * NC * x * pow(z, -1) * pow(omz, -1) + 28.0 / 3.0 * NC * x * pow(z, -1) + 2.0 / 3.0 * NC * x * pow(z, -1) * pow(pi, 2) * pow(omz, -1) + 2.0 / 3.0 * NC * x * pow(z, -1) * pow(pi, 2) + 4 * NC * x * pow(omz, -1) - 3.0 / 4.0 * NC * x * pow(omxmz, -1) - 155.0 / 48.0 * NC * x - 1.0 / 3.0 * NC * x * pow(pi, 2) * pow(omz, -1) - 3 * NC * x * pow(pi, 2) - 11 * NC * x * z + 1.0 / 3.0 * NC * x * z * pow(pi, 2) + 4 * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 161.0 / 18.0 * NC * pow(x, 2) * pow(z, -1) - 2.0 / 3.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) * pow(omz, -1) - 4 * NC * pow(x, 2) * pow(omz, -1) + NC * pow(x, 2) * pow(omxmz, -1) + 1127.0 / 144.0 * NC * pow(x, 2) + 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) * pow(omz, -1) + 5.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) + 3.0 / 2.0 * NC * pow(x, 2) * z + 1.0 / 6.0 * NC * pow(x, 2) * z * pow(pi, 2) - 1.0 / 16.0 * NC * pow(x, 3) * pow(poly2, -1) - 1.0 / 2.0 * NC * pow(x, 3) * pow(omxmz, -1) + 1.0 / 16.0 * NC * pow(x, 4) * pow(poly2, -1)
                result += -3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) + 5.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) - 1.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, -1) + 8 * ln(x) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) - 53.0 / 8.0 * ln(x) * pow(NC, -1) * pow(z, -1) + 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(poly2, -2) - 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(poly2, -1) - 13.0 / 2.0 * ln(x) * pow(NC, -1) * pow(omz, -1) + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(omxmz, -1) - 53.0 / 16.0 * ln(x) * pow(NC, -1)
                result += +3.0 / 8.0 * ln(x) * pow(NC, -1) * z - 16 * ln(x) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 69.0 / 4.0 * ln(x) * pow(NC, -1) * x * pow(z, -1) + 3.0 / 32.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -2) - 15.0 / 16.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -1) + 16 * ln(x) * pow(NC, -1) * x * pow(omz, -1) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(xmz, -1) - 1.0 / 4.0 * ln(x) * pow(NC, -1) * x * pow(omxmz, -2) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(omxmz, -1) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * x + 1.0 / 8.0 * ln(x) * pow(NC, -1) * x * z + 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(z, 3) * pow(xmz, -2) + 8 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 13.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) + 15.0 / 16.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) - 5 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * pow(NC, -1) * pow(x, 2) * pow(xmz, -1) + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -2) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -1) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * z + 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) + 9.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) + 5.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(xmz, -1) - ln(x) * pow(NC, -1) * pow(x, 3) * pow(omxmz, -2) - 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) - 11.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(xmz, -2) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(omxmz, -2) - 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) + 3.0 / 32.0 * ln(x) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) + 3.0 / 32.0 * ln(x) * NC * pow(x, -1) * pow(poly2, -2)
                result += +3.0 / 32.0 * ln(x) * NC * pow(x, -1) * pow(poly2, -1) - 3.0 / 16.0 * ln(x) * NC * pow(x, -1) - 8 * ln(x) * NC * pow(z, -1) * pow(omz, -1) + 61.0 / 8.0 * ln(x) * NC * pow(z, -1) - 3.0 / 32.0 * ln(x) * NC * pow(poly2, -2) - 5.0 / 32.0 * ln(x) * NC * pow(poly2, -1) + 13.0 / 2.0 * ln(x) * NC * pow(omz, -1) - 3.0 / 4.0 * ln(x) * NC * pow(omxmz, -1) + 1.0 / 16.0 * ln(x) * NC + 37.0 / 8.0 * ln(x) * NC * z + 16 * ln(x) * NC * x * pow(z, -1) * pow(omz, -1) - 69.0 / 4.0 * ln(x) * NC * x * pow(z, -1) - 3.0 / 32.0 * ln(x) * NC * x * pow(poly2, -2) + 23.0 / 16.0 * ln(x) * NC * x * pow(poly2, -1) - 16 * ln(x) * NC * x * pow(omz, -1) + 1.0 / 4.0 * ln(x) * NC * x * pow(omxmz, -2) + 2 * ln(x) * NC * x * pow(omxmz, -1) + 19.0 / 4.0 * ln(x) * NC * x + 39.0 / 8.0 * ln(x) * NC * x * z - 1.0 / 2.0 * ln(x) * NC * x * pow(z, 3) * pow(xmz, -2) - 16 * ln(x) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 30 * ln(x) * NC * pow(x, 2) * pow(z, -1) + 3.0 / 32.0 * ln(x) * NC * pow(x, 2) * pow(poly2, -2) - 23.0 / 16.0 * ln(x) * NC * pow(x, 2) * pow(poly2, -1) + 16 * ln(x) * NC * pow(x, 2) * pow(omz, -1) - 3.0 / 4.0 * ln(x) * NC * pow(x, 2) * pow(omxmz, -2) - 3.0 / 2.0 * ln(x) * NC * pow(x, 2) * pow(omxmz, -1) - 129.0 / 4.0 * ln(x) * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * NC * pow(x, 2) * z - 3.0 / 32.0 * ln(x) * NC * pow(x, 3) * pow(poly2, -2) - 1.0 / 32.0 * ln(x) * NC * pow(x, 3) * pow(poly2, -1) - 3.0 / 2.0 * ln(x) * NC * pow(x, 3) * pow(xmz, -1) + ln(x) * NC * pow(x, 3) * pow(omxmz, -2) + ln(x) * NC * pow(x, 3) * pow(omxmz, -1) + 3.0 / 32.0 * ln(x) * NC * pow(x, 4) * pow(poly2, -2) + 3.0 / 32.0 * ln(x) * NC * pow(x, 4) * pow(poly2, -1) + 1.0 / 2.0 * ln(x) * NC * pow(x, 4) * pow(xmz, -2) - 1.0 / 2.0 * ln(x) * NC * pow(x, 4) * pow(omxmz, -2) + 3.0 / 32.0 * ln(x) * NC * pow(x, 5) * pow(poly2, -2) - 3.0 / 32.0 * ln(x) * NC * pow(x, 6) * pow(poly2, -2)
                result += -3.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) + ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) - ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) + 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) + 259.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) - 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 29.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) - ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 19.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 73.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += -5.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(z, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(sqrtxz2, -1) * pow(omz, -1) - 9.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(sqrtxz2, -1) + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * z * pow(sqrtxz2, -1) + 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1) - 211.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) + 51.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 2 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 2 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) - 129.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) + 129.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 23.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 193.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += +1.0 / 16.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * ln(x) * ln(1 - sqrtxz2 + x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) - ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) + ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) + 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) - 259.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) - 29.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1)
                result += +29.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 19.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 73.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 5.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(z, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(sqrtxz2, -1) * pow(omz, -1) + 9.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(sqrtxz2, -1) - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * z * pow(sqrtxz2, -1) - 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(z, -1) * pow(sqrtxz2, -1) + 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 5.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1)
                result += +211.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(sqrtxz2, -1) - 51.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 2 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 2 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 129.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 23.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 193.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 16.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * ln(x) * ln(1 + sqrtxz2 + x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(z, -1) + 2 * ln(x) * ln(1 + x) * pow(NC, -1) - ln(x) * ln(1 + x) * pow(NC, -1) * z - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x * pow(z, -1) + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(x, 2) * z - ln(x) * ln(1 + x) * NC + ln(x) * ln(1 + x) * NC * z - 2 * ln(x) * ln(1 + x) * NC * x
                result += +2 * ln(x) * ln(1 + x) * NC * x * z + 2 * ln(x) * ln(1 + x) * NC * pow(x, 2) * z - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) - 7.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) + 13.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) + pow(ln(x), 2) * pow(NC, -1) * z + 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 11.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 5 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) + 2 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * z + 5.0 / 2.0 * pow(ln(x), 2) * NC * pow(z, -1) * pow(omz, -1) - 2 * pow(ln(x), 2) * NC * pow(z, -1) - 1.0 / 4.0 * pow(ln(x), 2) * NC * pow(omz, -1) - 5.0 / 4.0 * pow(ln(x), 2) * NC - pow(ln(x), 2) * NC * z - 5 * pow(ln(x), 2) * NC * x * pow(z, -1) * pow(omz, -1) - 2 * pow(ln(x), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(omz, -1) + 33.0 / 2.0 * pow(ln(x), 2) * NC * x + 5 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 2 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 1.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(omz, -1) - 7 * pow(ln(x), 2) * NC * pow(x, 2) - 2 * pow(ln(x), 2) * NC * pow(x, 2) * z + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) + 17.0 / 4.0 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) - 9.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 9.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1)
                result += -8 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) * x + ln(x) * ln(z) * pow(NC, -1) * x * z + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 6 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) - 3 * ln(x) * ln(z) * NC * pow(z, -1) * pow(omz, -1) + 5.0 / 4.0 * ln(x) * ln(z) * NC * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(z) * NC * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(z) * NC + 6 * ln(x) * ln(z) * NC * x * pow(z, -1) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * ln(z) * NC * x * pow(z, -1) + ln(x) * ln(z) * NC * x * pow(omz, -1) - 11 * ln(x) * ln(z) * NC * x - ln(x) * ln(z) * NC * x * z - 6 * ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) + ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + ln(x) * ln(z) * NC * pow(x, 2) * pow(omz, -1) + 9 * ln(x) * ln(z) * NC * pow(x, 2) + 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) + 19.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 13.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) - ln(x) * ln(omx) * pow(NC, -1) * z - 16 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 19 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 13 * ln(x) * ln(omx) * pow(NC, -1) * x + 2 * ln(x) * ln(omx) * pow(NC, -1) * x * z + 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 12 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(x) * ln(omx) * NC * pow(z, -1) * pow(omz, -1) - 4 * ln(x) * ln(omx) * NC * pow(z, -1) - 7.0 / 2.0 * ln(x) * ln(omx) * NC * pow(omz, -1) + 11.0 / 2.0 * ln(x) * ln(omx) * NC + ln(x) * ln(omx) * NC * z - 4 * ln(x) * ln(omx) * NC * x * pow(z, -1) * pow(omz, -1)
                result += +8 * ln(x) * ln(omx) * NC * x * pow(z, -1) + 7 * ln(x) * ln(omx) * NC * x * pow(omz, -1) - 11 * ln(x) * ln(omx) * NC * x - 2 * ln(x) * ln(omx) * NC * x * z + 4 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 8 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) - 7 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) + 10 * ln(x) * ln(omx) * NC * pow(x, 2) + 2 * ln(x) * ln(omx) * NC * pow(x, 2) * z + 7 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) + 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 5 * ln(x) * ln(omz) * pow(NC, -1) - 1.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * z - 14 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 11 * ln(x) * ln(omz) * pow(NC, -1) * x + 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 11 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) - ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * z - 2 * ln(x) * ln(omz) * NC * pow(z, -1) - 3 * ln(x) * ln(omz) * NC * pow(omz, -1) + 4 * ln(x) * ln(omz) * NC + 1.0 / 2.0 * ln(x) * ln(omz) * NC * z + 10 * ln(x) * ln(omz) * NC * x * pow(z, -1) + 6 * ln(x) * ln(omz) * NC * x * pow(omz, -1) - 21 * ln(x) * ln(omz) * NC * x - 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 13 * ln(x) * ln(omz) * NC * pow(x, 2) + ln(x) * ln(omz) * NC * pow(x, 2) * z - 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) + 5.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) - 1.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, -1) - 4 * ln(z) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) + 23.0 / 8.0 * ln(z) * pow(NC, -1) * pow(z, -1) - 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(poly2, -2) + 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(poly2, -1)
                result += +7.0 / 2.0 * ln(z) * pow(NC, -1) * pow(omz, -1) + 27.0 / 16.0 * ln(z) * pow(NC, -1) - 3.0 / 4.0 * ln(z) * pow(NC, -1) * z + 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) - 15.0 / 2.0 * ln(z) * pow(NC, -1) * x * pow(z, -1) + 3.0 / 32.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -2) - 15.0 / 16.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -1) - 9 * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 1.0 / 2.0 * ln(z) * pow(NC, -1) * x * pow(xmz, -1) - 11.0 / 8.0 * ln(z) * pow(NC, -1) * x + 17.0 / 8.0 * ln(z) * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(z) * pow(NC, -1) * x * pow(z, 3) * pow(xmz, -2) - 4 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 3 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) - 15.0 / 16.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) + 3 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(z) * pow(NC, -1) * pow(x, 2) * pow(xmz, -1) + 11.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 2) - ln(z) * pow(NC, -1) * pow(x, 2) * z + 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) + 9.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) - 5.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(xmz, -1) + 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) + 11.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(xmz, -2) - 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) - 3.0 / 32.0 * ln(z) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) + 2.0 / 3.0 * ln(z) * NC * pow(x, -1) * pow(z, -1) + 3.0 / 32.0 * ln(z) * NC * pow(x, -1) * pow(poly2, -2) + 3.0 / 32.0 * ln(z) * NC * pow(x, -1) * pow(poly2, -1) + 2.0 / 3.0 * ln(z) * NC * pow(x, -1) * pow(omz, -1) - 73.0 / 48.0 * ln(z) * NC * pow(x, -1) + 4 * ln(z) * NC * pow(z, -1) * pow(omz, -1)
                result += -19.0 / 8.0 * ln(z) * NC * pow(z, -1) + 3.0 / 32.0 * ln(z) * NC * pow(poly2, -2) + 5.0 / 32.0 * ln(z) * NC * pow(poly2, -1) - 4 * ln(z) * NC * pow(omz, -1) - 63.0 / 16.0 * ln(z) * NC + 23.0 / 4.0 * ln(z) * NC * z - 8 * ln(z) * NC * x * pow(z, -1) * pow(omz, -1) + 23.0 / 2.0 * ln(z) * NC * x * pow(z, -1) - 3.0 / 32.0 * ln(z) * NC * x * pow(poly2, -2) + 23.0 / 16.0 * ln(z) * NC * x * pow(poly2, -1) + 13 * ln(z) * NC * x * pow(omz, -1) - 91.0 / 8.0 * ln(z) * NC * x - 57.0 / 8.0 * ln(z) * NC * x * z + 1.0 / 2.0 * ln(z) * NC * x * pow(z, 3) * pow(xmz, -2) + 8 * ln(z) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 79.0 / 6.0 * ln(z) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 32.0 * ln(z) * NC * pow(x, 2) * pow(poly2, -2) + 23.0 / 16.0 * ln(z) * NC * pow(x, 2) * pow(poly2, -1) - 38.0 / 3.0 * ln(z) * NC * pow(x, 2) * pow(omz, -1) + 77.0 / 6.0 * ln(z) * NC * pow(x, 2) + ln(z) * NC * pow(x, 2) * z - 3.0 / 32.0 * ln(z) * NC * pow(x, 3) * pow(poly2, -2) - 1.0 / 32.0 * ln(z) * NC * pow(x, 3) * pow(poly2, -1) + 3.0 / 2.0 * ln(z) * NC * pow(x, 3) * pow(xmz, -1) - 3.0 / 32.0 * ln(z) * NC * pow(x, 4) * pow(poly2, -2) - 3.0 / 32.0 * ln(z) * NC * pow(x, 4) * pow(poly2, -1) - 1.0 / 2.0 * ln(z) * NC * pow(x, 4) * pow(xmz, -2) + 3.0 / 32.0 * ln(z) * NC * pow(x, 5) * pow(poly2, -2) + 3.0 / 32.0 * ln(z) * NC * pow(x, 6) * pow(poly2, -2)
                result += -5.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) + 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) - 1.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * z + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * z - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(z, -1) * pow(omz, -1) + 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(z, -1) - 1.0 / 4.0 * pow(ln(z), 2) * NC * pow(omz, -1)
                result += -1.0 / 2.0 * pow(ln(z), 2) * NC + 1.0 / 4.0 * pow(ln(z), 2) * NC * z - pow(ln(z), 2) * NC * x * pow(z, -1) * pow(omz, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(omz, -1) + pow(ln(z), 2) * NC * x - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * z + pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(omz, -1) - pow(ln(z), 2) * NC * pow(x, 2) + 1.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * z - 7.0 / 2.0 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) - 4 * ln(z) * ln(omx) * pow(NC, -1) * pow(omz, -1) + 2 * ln(z) * ln(omx) * pow(NC, -1) + 7 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 4 * ln(z) * ln(omx) * pow(NC, -1) * x - 5 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 5 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) + 3.0 / 2.0 * ln(z) * ln(omx) * NC * pow(z, -1) + 3.0 / 2.0 * ln(z) * ln(omx) * NC * pow(omz, -1) - 5.0 / 2.0 * ln(z) * ln(omx) * NC - 3 * ln(z) * ln(omx) * NC * x * pow(z, -1) - 3 * ln(z) * ln(omx) * NC * x * pow(omz, -1) + 5 * ln(z) * ln(omx) * NC * x + 3 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 3 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) - 5 * ln(z) * ln(omx) * NC * pow(x, 2) - 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 7.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) + 6 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 7 * ln(z) * ln(omz) * pow(NC, -1) * x - 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += +7 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(z, -1) + 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(omz, -1) - 11.0 / 2.0 * ln(z) * ln(omz) * NC - 5 * ln(z) * ln(omz) * NC * x * pow(z, -1) - 5 * ln(z) * ln(omz) * NC * x * pow(omz, -1) + 11 * ln(z) * ln(omz) * NC * x + 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 11 * ln(z) * ln(omz) * NC * pow(x, 2) - 1.0 / 4.0 * ln(omx) * pow(NC, -1) * pow(z, -1) - ln(omx) * pow(NC, -1) * pow(omz, -1) + 7.0 / 4.0 * ln(omx) * pow(NC, -1) - 3.0 / 8.0 * ln(omx) * pow(NC, -1) * z - 3.0 / 2.0 * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 3.0 / 2.0 * ln(omx) * pow(NC, -1) * x + 1.0 / 4.0 * ln(omx) * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 11.0 / 4.0 * ln(omx) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) * z + 2.0 / 3.0 * ln(omx) * NC * pow(x, -1) * pow(z, -1) - 4.0 / 3.0 * ln(omx) * NC * pow(x, -1) + 1.0 / 4.0 * ln(omx) * NC * pow(z, -1) + 1.0 / 2.0 * ln(omx) * NC * pow(omz, -1) - 5.0 / 4.0 * ln(omx) * NC + 3.0 / 8.0 * ln(omx) * NC * z + 11.0 / 2.0 * ln(omx) * NC * x * pow(z, -1) - 27.0 / 2.0 * ln(omx) * NC * x - 1.0 / 4.0 * ln(omx) * NC * x * z - 20.0 / 3.0 * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 193.0 / 12.0 * ln(omx) * NC * pow(x, 2) - 1.0 / 2.0 * ln(omx) * NC * pow(x, 2) * z
                result += -3 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) - 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(omz, -1) + 9.0 / 4.0 * pow(ln(omx), 2) * pow(NC, -1) + 1.0 / 4.0 * pow(ln(omx), 2) * pow(NC, -1) * z + 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) + 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(omz, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * z - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * z + 3.0 / 4.0 * pow(ln(omx), 2) * NC * pow(z, -1) + 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(omz, -1) - 7.0 / 4.0 * pow(ln(omx), 2) * NC - 1.0 / 4.0 * pow(ln(omx), 2) * NC * z - 3.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(omz, -1) + 7.0 / 2.0 * pow(ln(omx), 2) * NC * x + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * z + 3.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1)
                result += +1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(omz, -1) - 7.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * z - 9.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) - 4 * ln(omx) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) + 1.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) * z + 9 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x - ln(omx) * ln(omz) * pow(NC, -1) * x * z - 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) + ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * z + 2 * ln(omx) * ln(omz) * NC * pow(z, -1) + ln(omx) * ln(omz) * NC * pow(omz, -1) - 9.0 / 2.0 * ln(omx) * ln(omz) * NC - 1.0 / 2.0 * ln(omx) * ln(omz) * NC * z - 4 * ln(omx) * ln(omz) * NC * x * pow(z, -1) - 2 * ln(omx) * ln(omz) * NC * x * pow(omz, -1) + 9 * ln(omx) * ln(omz) * NC * x + ln(omx) * ln(omz) * NC * x * z + 4 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 9 * ln(omx) * ln(omz) * NC * pow(x, 2) - ln(omx) * ln(omz) * NC * pow(x, 2) * z + 1.0 / 4.0 * ln(omz) * pow(NC, -1) * pow(z, -1) - ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 4.0 * ln(omz) * pow(NC, -1) * pow(omxmz, -1) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) - 3.0 / 8.0 * ln(omz) * pow(NC, -1) * z - 3.0 / 2.0 * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 1.0 / 4.0 * ln(omz) * pow(NC, -1) * x * pow(omxmz, -2) + 3.0 / 2.0 * ln(omz) * pow(NC, -1) * x * pow(omxmz, -1) + 3 * ln(omz) * pow(NC, -1) * x + 1.0 / 4.0 * ln(omz) * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += -ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3.0 / 4.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -2) - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omxmz, -1) - 13.0 / 4.0 * ln(omz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * z + ln(omz) * pow(NC, -1) * pow(x, 3) * pow(omxmz, -2) - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 4) * pow(omxmz, -2) + 2.0 / 3.0 * ln(omz) * NC * pow(x, -1) * pow(z, -1) - 4.0 / 3.0 * ln(omz) * NC * pow(x, -1) + 3.0 / 4.0 * ln(omz) * NC * pow(z, -1) + ln(omz) * NC * pow(omz, -1) + 3.0 / 4.0 * ln(omz) * NC * pow(omxmz, -1) - 7.0 / 2.0 * ln(omz) * NC + 3.0 / 8.0 * ln(omz) * NC * z + 11.0 / 2.0 * ln(omz) * NC * x * pow(z, -1) - 1.0 / 4.0 * ln(omz) * NC * x * pow(omxmz, -2) - 2 * ln(omz) * NC * x * pow(omxmz, -1) - 14 * ln(omz) * NC * x - 1.0 / 4.0 * ln(omz) * NC * x * z - 20.0 / 3.0 * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 3.0 / 4.0 * ln(omz) * NC * pow(x, 2) * pow(omxmz, -2) + 3.0 / 2.0 * ln(omz) * NC * pow(x, 2) * pow(omxmz, -1) + 199.0 / 12.0 * ln(omz) * NC * pow(x, 2) - 1.0 / 2.0 * ln(omz) * NC * pow(x, 2) * z - ln(omz) * NC * pow(x, 3) * pow(omxmz, -2) - ln(omz) * NC * pow(x, 3) * pow(omxmz, -1) + 1.0 / 2.0 * ln(omz) * NC * pow(x, 4) * pow(omxmz, -2)
                result += -5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(omz, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) + 1.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * z + 5 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(omz, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * x - 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * z - 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * z + 5.0 / 4.0 * pow(ln(omz), 2) * NC * pow(z, -1) + pow(ln(omz), 2) * NC * pow(omz, -1) - 11.0 / 4.0 * pow(ln(omz), 2) * NC - 1.0 / 4.0 * pow(ln(omz), 2) * NC * z - 5.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) - 2 * pow(ln(omz), 2) * NC * x * pow(omz, -1) + 11.0 / 2.0 * pow(ln(omz), 2) * NC * x + 1.0 / 2.0 * pow(ln(omz), 2) * NC * x * z + 5.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) + 2 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(omz, -1)
                result += -11.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) - 1.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * z - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) + 259.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1)
                result += -3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 29.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 19.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 73.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += -5.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(z, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) * pow(omz, -1) - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * z * pow(sqrtxz2, -1) + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1) - 211.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) - 129.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1)
                result += +129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 23.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 193.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1)
                result += +Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) - 259.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) - 29.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) + 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 19.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += +Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 73.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 5.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(z, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) * pow(omz, -1) + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(sqrtxz2, -1) - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * z * pow(sqrtxz2, -1) - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, -1) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += -5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1) + 211.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(sqrtxz2, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 129.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 23.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 193.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += +3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) - 259.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) + 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) - 11.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1)
                result += -29.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) + 29.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 19.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 73.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) + 5.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(z, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) * pow(omz, -1) + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * z * pow(sqrtxz2, -1) - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, -1) * pow(sqrtxz2, -1)
                result += +3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1) + 211.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * z * pow(sqrtxz2, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 129.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) - 129.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 23.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 193.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 16.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2)
                result += +3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1) - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -2) - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(poly2, -1) - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * pow(omz, -1) + 259.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) - 11.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) + 11.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) + 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) + 29.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) - 29.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1)
                result += -Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) + 19.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) + 73.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) - 3.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) + 3.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 3.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) - 5.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, -1) * pow(sqrtxz2, -1) + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(z, -1) * pow(sqrtxz2, -1) - 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) * pow(omz, -1) - 9.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(sqrtxz2, -1) + 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * z * pow(sqrtxz2, -1) + 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, -1) * pow(sqrtxz2, -1) - 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -2) + 5.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(poly2, -1)
                result += +3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) * pow(omz, -1) - 211.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(sqrtxz2, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * z * pow(sqrtxz2, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * x * pow(z, 2) * pow(sqrtxz2, -1) + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) * pow(omz, -1) - 129.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * pow(sqrtxz2, -1) + 129.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 2) * z * pow(sqrtxz2, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(z, -1) * pow(sqrtxz2, -1) - 23.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) * pow(omz, -1) - 193.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 3) * pow(sqrtxz2, -1) + 3.0 / 32.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -2) + 1.0 / 16.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) - 3.0 / 64.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * NC * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * pow(omz, -1) - 3.0 / 2.0 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(1 - x * pow(z, -1)) * pow(NC, -1)
                result += -4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * pow(omz, -1) + 3 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) + Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(omz, -1) + Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(omz, -1) - Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(x, 2) - Li2(1 - x * pow(z, -1)) * NC * pow(z, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(1 - x * pow(z, -1)) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(1 - x * pow(z, -1)) * NC * pow(omz, -1) + 3.0 / 2.0 * Li2(1 - x * pow(z, -1)) * NC + 2 * Li2(1 - x * pow(z, -1)) * NC * x * pow(z, -1) * pow(omz, -1) - Li2(1 - x * pow(z, -1)) * NC * x * pow(z, -1) - Li2(1 - x * pow(z, -1)) * NC * x * pow(omz, -1) - 3 * Li2(1 - x * pow(z, -1)) * NC * x - 2 * Li2(1 - x * pow(z, -1)) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) + Li2(1 - x * pow(z, -1)) * NC * pow(x, 2) * pow(z, -1) + Li2(1 - x * pow(z, -1)) * NC * pow(x, 2) * pow(omz, -1) + 3 * Li2(1 - x * pow(z, -1)) * NC * pow(x, 2) - 2 * Li2(-x) * pow(NC, -1) * pow(z, -1) + 2 * Li2(-x) * pow(NC, -1) - Li2(-x) * pow(NC, -1) * z - 4 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) + 4 * Li2(-x) * pow(NC, -1) * x - 2 * Li2(-x) * pow(NC, -1) * x * z - 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) - 2 * Li2(-x) * pow(NC, -1) * pow(x, 2) * z - Li2(-x) * NC + Li2(-x) * NC * z - 2 * Li2(-x) * NC * x + 2 * Li2(-x) * NC * x * z + 2 * Li2(-x) * NC * pow(x, 2) * z + 1.0 / 2.0 * Li2(x) * pow(NC, -1) * pow(z, -1) + 2 * Li2(x) * pow(NC, -1) * pow(omz, -1)
                result += -3.0 / 2.0 * Li2(x) * pow(NC, -1) - 1.0 / 2.0 * Li2(x) * pow(NC, -1) * z - Li2(x) * pow(NC, -1) * x * pow(z, -1) - 4 * Li2(x) * pow(NC, -1) * x * pow(omz, -1) + 2 * Li2(x) * pow(NC, -1) * x + 2 * Li2(x) * pow(NC, -1) * x * z + Li2(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(x) * pow(NC, -1) * pow(x, 2) - Li2(x) * pow(NC, -1) * pow(x, 2) * z + 2 * Li2(x) * NC * pow(z, -1) * pow(omz, -1) - 5.0 / 2.0 * Li2(x) * NC * pow(z, -1) - 2 * Li2(x) * NC * pow(omz, -1) + 5.0 / 2.0 * Li2(x) * NC + 1.0 / 2.0 * Li2(x) * NC * z - 4 * Li2(x) * NC * x * pow(z, -1) * pow(omz, -1) - Li2(x) * NC * x * pow(z, -1) + 4 * Li2(x) * NC * x * pow(omz, -1) + 8 * Li2(x) * NC * x - 2 * Li2(x) * NC * x * z + 4 * Li2(x) * NC * pow(x, 2) * pow(z, -1) * pow(omz, -1) - 3 * Li2(x) * NC * pow(x, 2) * pow(z, -1) - 4 * Li2(x) * NC * pow(x, 2) * pow(omz, -1) - Li2(x) * NC * pow(x, 2) + Li2(x) * NC * pow(x, 2) * z - Li2(z) * pow(NC, -1) * pow(omz, -1) + 2 * Li2(z) * pow(NC, -1) + 2 * Li2(z) * pow(NC, -1) * x * pow(omz, -1) - 4 * Li2(z) * pow(NC, -1) * x - Li2(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 4 * Li2(z) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(z) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(z) * NC * pow(omz, -1) - 2 * Li2(z) * NC - Li2(z) * NC * x * pow(z, -1) - Li2(z) * NC * x * pow(omz, -1) + 4 * Li2(z) * NC * x + Li2(z) * NC * pow(x, 2) * pow(z, -1) + Li2(z) * NC * pow(x, 2) * pow(omz, -1) - 4 * Li2(z) * NC * pow(x, 2)
            if z < round(1 - x, ndecimals) and z < x:
                result += 3.0 / 2.0 * pow(NC, -1) * pow(z, -1) - 11.0 / 12.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 3.0 / 2.0 * pow(NC, -1) * pow(omz, -1) - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) + 7.0 / 12.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) + 5.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(z, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 1.0 / 12.0 * NC * pow(z, -1) * pow(pi, 2) - 2 * NC + 1.0 / 12.0 * NC * pow(pi, 2) * pow(omz, -1) - 1.0 / 6.0 * NC * pow(pi, 2) - 1.0 / 6.0 * NC * x * pow(z, -1) * pow(pi, 2) - 2 * NC * x - 1.0 / 6.0 * NC * x * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * NC * x * pow(pi, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 2 * NC * pow(x, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(omz, -1) + 3 * ln(x) * pow(NC, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * NC * pow(omz, -1) - 9.0 / 2.0 * ln(x) * NC - 6 * ln(x) * NC * x + 6 * ln(x) * NC * pow(x, 2) + 5 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) + 19.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) - 13.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) + 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x + 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(omz, -1) + 3 * pow(ln(x), 2) * NC + 3 * pow(ln(x), 2) * NC * x * pow(z, -1) + 3 * pow(ln(x), 2) * NC * x * pow(omz, -1) - 6 * pow(ln(x), 2) * NC * x - 3 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 3 * pow(ln(x), 2) * NC * pow(x, 2) * pow(omz, -1) + 6 * pow(ln(x), 2) * NC * pow(x, 2) - 11.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) - 13.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) + 11 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) + 13 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * x - 8 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(x) * ln(z) * NC * pow(z, -1) + 5.0 / 2.0 * ln(x) * ln(z) * NC * pow(omz, -1) - 5 * ln(x) * ln(z) * NC - 5 * ln(x) * ln(z) * NC * x * pow(z, -1) - 5 * ln(x) * ln(z) * NC * x * pow(omz, -1) + 10 * ln(x) * ln(z) * NC * x + 5 * ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + 5 * ln(x) * ln(z) * NC * pow(x, 2) * pow(omz, -1) - 10 * ln(x) * ln(z) * NC * pow(x, 2) - 17.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) + 11.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) + 17 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 16 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 11 * ln(x) * ln(omx) * pow(NC, -1) * x - 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2)
                result += +2 * ln(x) * ln(omx) * NC * pow(z, -1) + 2 * ln(x) * ln(omx) * NC * pow(omz, -1) - 4 * ln(x) * ln(omx) * NC - 4 * ln(x) * ln(omx) * NC * x * pow(z, -1) - 4 * ln(x) * ln(omx) * NC * x * pow(omz, -1) + 8 * ln(x) * ln(omx) * NC * x + 4 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) - 8 * ln(x) * ln(omx) * NC * pow(x, 2) - 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) - 7 * ln(x) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 5 * ln(x) * ln(omz) * pow(NC, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 14 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * x - 10 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 10 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(x) * ln(omz) * NC * pow(z, -1) + 5.0 / 2.0 * ln(x) * ln(omz) * NC * pow(omz, -1) - 5 * ln(x) * ln(omz) * NC - 5 * ln(x) * ln(omz) * NC * x * pow(z, -1) - 5 * ln(x) * ln(omz) * NC * x * pow(omz, -1) + 10 * ln(x) * ln(omz) * NC * x + 5 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 5 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 10 * ln(x) * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) + ln(x) * ln(xmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(xmz) * pow(NC, -1) - ln(x) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(xmz) * pow(NC, -1) * x + ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(xmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(xmz) * NC * pow(omz, -1)
                result += +ln(x) * ln(xmz) * NC + ln(x) * ln(xmz) * NC * x * pow(z, -1) + ln(x) * ln(xmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(xmz) * NC * x - ln(x) * ln(xmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(xmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(xmz) * NC * pow(x, 2) + ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(omxmz) * pow(NC, -1) - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(omxmz) * pow(NC, -1) * x + ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(omxmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(omxmz) * NC * pow(omz, -1) + ln(x) * ln(omxmz) * NC + ln(x) * ln(omxmz) * NC * x * pow(z, -1) + ln(x) * ln(omxmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * NC * x - ln(x) * ln(omxmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(omxmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * NC * pow(x, 2) + ln(z) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) + ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(z) * NC * pow(z, -1) - ln(z) * NC * pow(omz, -1) + 3 * ln(z) * NC + 4 * ln(z) * NC * x - 4 * ln(z) * NC * pow(x, 2) + 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) + 9.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) - 5.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) - 9.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x
                result += +5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - pow(ln(z), 2) * NC * pow(z, -1) - pow(ln(z), 2) * NC * pow(omz, -1) + 2 * pow(ln(z), 2) * NC + 2 * pow(ln(z), 2) * NC * x * pow(z, -1) + 2 * pow(ln(z), 2) * NC * x * pow(omz, -1) - 4 * pow(ln(z), 2) * NC * x - 2 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 2 * pow(ln(z), 2) * NC * pow(x, 2) * pow(omz, -1) + 4 * pow(ln(z), 2) * NC * pow(x, 2) + 4 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) + 5 * ln(z) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 3 * ln(z) * ln(omx) * pow(NC, -1) - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 10 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * x + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - ln(z) * ln(omx) * NC * pow(z, -1) - ln(z) * ln(omx) * NC * pow(omz, -1) + 2 * ln(z) * ln(omx) * NC + 2 * ln(z) * ln(omx) * NC * x * pow(z, -1) + 2 * ln(z) * ln(omx) * NC * x * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * x - 2 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) + 4 * ln(z) * ln(omx) * NC * pow(x, 2) + 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) + 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) - 6 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 6 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += -4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 2 * ln(z) * ln(omz) * NC * pow(z, -1) - 2 * ln(z) * ln(omz) * NC * pow(omz, -1) + 4 * ln(z) * ln(omz) * NC + 4 * ln(z) * ln(omz) * NC * x * pow(z, -1) + 4 * ln(z) * ln(omz) * NC * x * pow(omz, -1) - 8 * ln(z) * ln(omz) * NC * x - 4 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 4 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * ln(omz) * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) - ln(z) * ln(xmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(z) * ln(xmz) * pow(NC, -1) + ln(z) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) + 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * pow(omz, -1) - ln(z) * ln(xmz) * pow(NC, -1) * x - ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * ln(xmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(xmz) * NC * pow(omz, -1) - ln(z) * ln(xmz) * NC - ln(z) * ln(xmz) * NC * x * pow(z, -1) - ln(z) * ln(xmz) * NC * x * pow(omz, -1) + 2 * ln(z) * ln(xmz) * NC * x + ln(z) * ln(xmz) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(xmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(z) * ln(xmz) * NC * pow(x, 2) + ln(omx) * pow(NC, -1) * pow(z, -1) + ln(omx) * pow(NC, -1) * pow(omz, -1) - 2 * ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(z, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(omz, -1) + 3.0 / 2.0 * ln(omx) * NC + 2 * ln(omx) * NC * x - 2 * ln(omx) * NC * pow(x, 2) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(omz, -1) - 2 * pow(ln(omx), 2) * pow(NC, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1)
                result += -6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(z, -1) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(omz, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(omz, -1) - pow(ln(omx), 2) * NC * x - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(omz, -1) + pow(ln(omx), 2) * NC * pow(x, 2) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) + 9.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 7.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) - 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 9 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 7 * ln(omx) * ln(omz) * pow(NC, -1) * x + 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * ln(omx) * ln(omz) * NC * pow(z, -1) - 3.0 / 2.0 * ln(omx) * ln(omz) * NC * pow(omz, -1) + 3 * ln(omx) * ln(omz) * NC + 3 * ln(omx) * ln(omz) * NC * x * pow(z, -1) + 3 * ln(omx) * ln(omz) * NC * x * pow(omz, -1) - 6 * ln(omx) * ln(omz) * NC * x - 3 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 3 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 6 * ln(omx) * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(omz) * pow(NC, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omz) * NC * pow(z, -1) - ln(omz) * NC * pow(omz, -1) + 3 * ln(omz) * NC + 4 * ln(omz) * NC * x - 4 * ln(omz) * NC * pow(x, 2) + 11.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) + 7.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) - 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) - 7.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(omz, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * x + 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * pow(ln(omz), 2) * NC * pow(z, -1) - 3.0 / 4.0 * pow(ln(omz), 2) * NC * pow(omz, -1) + 3.0 / 2.0 * pow(ln(omz), 2) * NC + 3.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) + 3.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(omz, -1) - 3 * pow(ln(omz), 2) * NC * x - 3.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(omz, -1) + 3 * pow(ln(omz), 2) * NC * pow(x, 2) - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * pow(NC, -1) + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(omz, -1) - ln(omz) * ln(omxmz) * pow(NC, -1) * x - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * NC * pow(omz, -1) - ln(omz) * ln(omxmz) * NC - ln(omz) * ln(omxmz) * NC * x * pow(z, -1)
                result += -ln(omz) * ln(omxmz) * NC * x * pow(omz, -1) + 2 * ln(omz) * ln(omxmz) * NC * x + ln(omz) * ln(omxmz) * NC * pow(x, 2) * pow(z, -1) + ln(omz) * ln(omxmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * NC * pow(x, 2) + 1.0 / 2.0 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(omz, -1) - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x * pow(z, -1) - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x * pow(omz, -1) + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) * pow(z, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) - 1.0 / 2.0 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * pow(NC, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1)
                result += +Li2(omx * pow(omz, -1)) * pow(NC, -1) * x + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * NC * pow(omz, -1) - Li2(omx * pow(omz, -1)) * NC - Li2(omx * pow(omz, -1)) * NC * x * pow(z, -1) - Li2(omx * pow(omz, -1)) * NC * x * pow(omz, -1) + 2 * Li2(omx * pow(omz, -1)) * NC * x + Li2(omx * pow(omz, -1)) * NC * pow(x, 2) * pow(z, -1) + Li2(omx * pow(omz, -1)) * NC * pow(x, 2) * pow(omz, -1) - 2 * Li2(omx * pow(omz, -1)) * NC * pow(x, 2) - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(z * pow(omx, -1)) * pow(NC, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(omz, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * x - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * NC * pow(omz, -1) + Li2(z * pow(omx, -1)) * NC + Li2(z * pow(omx, -1)) * NC * x * pow(z, -1) + Li2(z * pow(omx, -1)) * NC * x * pow(omz, -1) - 2 * Li2(z * pow(omx, -1)) * NC * x - Li2(z * pow(omx, -1)) * NC * pow(x, 2) * pow(z, -1) - Li2(z * pow(omx, -1)) * NC * pow(x, 2) * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * NC * pow(x, 2) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1)
                result += -1.0 / 2.0 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) - Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(omz, -1) - Li2(z) * pow(NC, -1) * x * pow(z, -1) + Li2(z) * pow(NC, -1) * x * pow(omz, -1)
            if z > round(1 - x, ndecimals) and z < x:
                result += 3.0 / 2.0 * pow(NC, -1) * pow(z, -1) - 11.0 / 12.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 3.0 / 2.0 * pow(NC, -1) * pow(omz, -1) - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) + 7.0 / 12.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) + 5.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(z, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 1.0 / 12.0 * NC * pow(z, -1) * pow(pi, 2) - 2 * NC + 1.0 / 12.0 * NC * pow(pi, 2) * pow(omz, -1) - 1.0 / 6.0 * NC * pow(pi, 2) - 1.0 / 6.0 * NC * x * pow(z, -1) * pow(pi, 2) - 2 * NC * x - 1.0 / 6.0 * NC * x * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * NC * x * pow(pi, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 2 * NC * pow(x, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(omz, -1) + 3 * ln(x) * pow(NC, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * NC * pow(omz, -1) - 9.0 / 2.0 * ln(x) * NC - 6 * ln(x) * NC * x + 6 * ln(x) * NC * pow(x, 2) + ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * pow(NC, -1) - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(-omxmz) * pow(NC, -1) * x + ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * NC * pow(omz, -1) + ln(x) * ln(-omxmz) * NC + ln(x) * ln(-omxmz) * NC * x * pow(z, -1) + ln(x) * ln(-omxmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * NC * x - ln(x) * ln(-omxmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(-omxmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * NC * pow(x, 2) + 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) + 9.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 7.0 / 4.0 * pow(ln(x), 2) * NC * pow(z, -1) - 7.0 / 4.0 * pow(ln(x), 2) * NC * pow(omz, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(z, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(omz, -1) - 7 * pow(ln(x), 2) * NC * x - 7.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 7.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(omz, -1) + 7 * pow(ln(x), 2) * NC * pow(x, 2) - 13.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) - 7 * ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) + 13 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) + 14 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 9 * ln(x) * ln(z) * pow(NC, -1) * x - 9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += +9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 3 * ln(x) * ln(z) * NC * pow(z, -1) + 3 * ln(x) * ln(z) * NC * pow(omz, -1) - 6 * ln(x) * ln(z) * NC - 6 * ln(x) * ln(z) * NC * x * pow(z, -1) - 6 * ln(x) * ln(z) * NC * x * pow(omz, -1) + 12 * ln(x) * ln(z) * NC * x + 6 * ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + 6 * ln(x) * ln(z) * NC * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * ln(z) * NC * pow(x, 2) - 15.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) - 15.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) + 5 * ln(x) * ln(omx) * pow(NC, -1) + 15 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 15 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 10 * ln(x) * ln(omx) * pow(NC, -1) * x - 10 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 10 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 10 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 3.0 / 2.0 * ln(x) * ln(omx) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * ln(omx) * NC * pow(omz, -1) - 3 * ln(x) * ln(omx) * NC - 3 * ln(x) * ln(omx) * NC * x * pow(z, -1) - 3 * ln(x) * ln(omx) * NC * x * pow(omz, -1) + 6 * ln(x) * ln(omx) * NC * x + 3 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 3 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) - 6 * ln(x) * ln(omx) * NC * pow(x, 2) - 7 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) - 13.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) + 14 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 13 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 9 * ln(x) * ln(omz) * pow(NC, -1) * x - 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 3 * ln(x) * ln(omz) * NC * pow(z, -1)
                result += +3 * ln(x) * ln(omz) * NC * pow(omz, -1) - 6 * ln(x) * ln(omz) * NC - 6 * ln(x) * ln(omz) * NC * x * pow(z, -1) - 6 * ln(x) * ln(omz) * NC * x * pow(omz, -1) + 12 * ln(x) * ln(omz) * NC * x + 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) + ln(x) * ln(xmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(xmz) * pow(NC, -1) - ln(x) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(xmz) * pow(NC, -1) * x + ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(xmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(xmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(xmz) * NC * pow(omz, -1) + ln(x) * ln(xmz) * NC + ln(x) * ln(xmz) * NC * x * pow(z, -1) + ln(x) * ln(xmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(xmz) * NC * x - ln(x) * ln(xmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(xmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(xmz) * NC * pow(x, 2) + ln(z) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) + ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(z) * NC * pow(z, -1) - ln(z) * NC * pow(omz, -1) + 3 * ln(z) * NC + 4 * ln(z) * NC * x - 4 * ln(z) * NC * pow(x, 2) + 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) + 9.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) - 5.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) - 9.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x
                result += +5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - pow(ln(z), 2) * NC * pow(z, -1) - pow(ln(z), 2) * NC * pow(omz, -1) + 2 * pow(ln(z), 2) * NC + 2 * pow(ln(z), 2) * NC * x * pow(z, -1) + 2 * pow(ln(z), 2) * NC * x * pow(omz, -1) - 4 * pow(ln(z), 2) * NC * x - 2 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 2 * pow(ln(z), 2) * NC * pow(x, 2) * pow(omz, -1) + 4 * pow(ln(z), 2) * NC * pow(x, 2) + 4 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) + 5 * ln(z) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 3 * ln(z) * ln(omx) * pow(NC, -1) - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 10 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * x + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - ln(z) * ln(omx) * NC * pow(z, -1) - ln(z) * ln(omx) * NC * pow(omz, -1) + 2 * ln(z) * ln(omx) * NC + 2 * ln(z) * ln(omx) * NC * x * pow(z, -1) + 2 * ln(z) * ln(omx) * NC * x * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * x - 2 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) + 4 * ln(z) * ln(omx) * NC * pow(x, 2) + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) + 7.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 5.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 7 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 5 * ln(z) * ln(omz) * pow(NC, -1) * x + 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += -5 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(z, -1) - 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(omz, -1) + 5 * ln(z) * ln(omz) * NC + 5 * ln(z) * ln(omz) * NC * x * pow(z, -1) + 5 * ln(z) * ln(omz) * NC * x * pow(omz, -1) - 10 * ln(z) * ln(omz) * NC * x - 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 10 * ln(z) * ln(omz) * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) - ln(z) * ln(xmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(z) * ln(xmz) * pow(NC, -1) + ln(z) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) + 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * pow(omz, -1) - ln(z) * ln(xmz) * pow(NC, -1) * x - ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(z) * ln(xmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * ln(xmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(xmz) * NC * pow(omz, -1) - ln(z) * ln(xmz) * NC - ln(z) * ln(xmz) * NC * x * pow(z, -1) - ln(z) * ln(xmz) * NC * x * pow(omz, -1) + 2 * ln(z) * ln(xmz) * NC * x + ln(z) * ln(xmz) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(xmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(z) * ln(xmz) * NC * pow(x, 2) + ln(omx) * pow(NC, -1) * pow(z, -1) + ln(omx) * pow(NC, -1) * pow(omz, -1) - 2 * ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(z, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(omz, -1) + 3.0 / 2.0 * ln(omx) * NC + 2 * ln(omx) * NC * x - 2 * ln(omx) * NC * pow(x, 2) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(omz, -1) - 2 * pow(ln(omx), 2) * pow(NC, -1)
                result += -6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(z, -1) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(omz, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(omz, -1) - pow(ln(omx), 2) * NC * x - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(omz, -1) + pow(ln(omx), 2) * NC * pow(x, 2) + 5 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 3 * ln(omx) * ln(omz) * pow(NC, -1) - 10 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * x + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - ln(omx) * ln(omz) * NC * pow(z, -1) - ln(omx) * ln(omz) * NC * pow(omz, -1) + 2 * ln(omx) * ln(omz) * NC + 2 * ln(omx) * ln(omz) * NC * x * pow(z, -1) + 2 * ln(omx) * ln(omz) * NC * x * pow(omz, -1) - 4 * ln(omx) * ln(omz) * NC * x - 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(omz) * pow(NC, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omz) * NC * pow(z, -1) - ln(omz) * NC * pow(omz, -1) + 3 * ln(omz) * NC + 4 * ln(omz) * NC * x - 4 * ln(omz) * NC * pow(x, 2) - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * pow(NC, -1) + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(omz, -1) - ln(omz) * ln(-omxmz) * pow(NC, -1) * x - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * NC * pow(omz, -1) - ln(omz) * ln(-omxmz) * NC - ln(omz) * ln(-omxmz) * NC * x * pow(z, -1) - ln(omz) * ln(-omxmz) * NC * x * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * NC * x + ln(omz) * ln(-omxmz) * NC * pow(x, 2) * pow(z, -1) + ln(omz) * ln(-omxmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(omz) * ln(-omxmz) * NC * pow(x, 2) + 9.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(omz, -1) - 5.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) - 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(omz, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - pow(ln(omz), 2) * NC * pow(z, -1) - pow(ln(omz), 2) * NC * pow(omz, -1)
                result += +2 * pow(ln(omz), 2) * NC + 2 * pow(ln(omz), 2) * NC * x * pow(z, -1) + 2 * pow(ln(omz), 2) * NC * x * pow(omz, -1) - 4 * pow(ln(omz), 2) * NC * x - 2 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) - 2 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(omz, -1) + 4 * pow(ln(omz), 2) * NC * pow(x, 2) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) + Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(omz, -1)
                result += -1.0 / 2.0 * Li2(pow(z, -1) * omx) * pow(NC, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(omz, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * x + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * NC * pow(omz, -1) - Li2(pow(z, -1) * omx) * NC - Li2(pow(z, -1) * omx) * NC * x * pow(z, -1) - Li2(pow(z, -1) * omx) * NC * x * pow(omz, -1) + 2 * Li2(pow(z, -1) * omx) * NC * x + Li2(pow(z, -1) * omx) * NC * pow(x, 2) * pow(z, -1) + Li2(pow(z, -1) * omx) * NC * pow(x, 2) * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * NC * pow(x, 2) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * pow(NC, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * x + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(omx * pow(omz, -1)) * NC * pow(omz, -1) - Li2(omx * pow(omz, -1)) * NC - Li2(omx * pow(omz, -1)) * NC * x * pow(z, -1) - Li2(omx * pow(omz, -1)) * NC * x * pow(omz, -1) + 2 * Li2(omx * pow(omz, -1)) * NC * x + Li2(omx * pow(omz, -1)) * NC * pow(x, 2) * pow(z, -1) + Li2(omx * pow(omz, -1)) * NC * pow(x, 2) * pow(omz, -1)
                result += -2 * Li2(omx * pow(omz, -1)) * NC * pow(x, 2) - 1.0 / 2.0 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(omz, -1) + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x * pow(z, -1) + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x * pow(omz, -1) - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) * pow(z, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(omz, -1) - Li2(z) * pow(NC, -1) * x * pow(z, -1) + Li2(z) * pow(NC, -1) * x * pow(omz, -1)
            if z < round(1 - x, ndecimals) and z > x:
                result += 3.0 / 2.0 * pow(NC, -1) * pow(z, -1) - 11.0 / 12.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 3.0 / 2.0 * pow(NC, -1) * pow(omz, -1) - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) + 7.0 / 12.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) + 5.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(z, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 5.0 / 12.0 * NC * pow(z, -1) * pow(pi, 2) - 2 * NC + 5.0 / 12.0 * NC * pow(pi, 2) * pow(omz, -1) - 5.0 / 6.0 * NC * pow(pi, 2) - 5.0 / 6.0 * NC * x * pow(z, -1) * pow(pi, 2) - 2 * NC * x - 5.0 / 6.0 * NC * x * pow(pi, 2) * pow(omz, -1) + 5.0 / 3.0 * NC * x * pow(pi, 2) + 5.0 / 6.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 2 * NC * pow(x, 2) + 5.0 / 6.0 * NC * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 5.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(omz, -1) + 3 * ln(x) * pow(NC, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * NC * pow(omz, -1) - 9.0 / 2.0 * ln(x) * NC - 6 * ln(x) * NC * x + 6 * ln(x) * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) + ln(x) * ln(-xmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(-xmz) * pow(NC, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(-xmz) * pow(NC, -1) * x + ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(-xmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(-xmz) * NC * pow(omz, -1) + ln(x) * ln(-xmz) * NC + ln(x) * ln(-xmz) * NC * x * pow(z, -1) + ln(x) * ln(-xmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(-xmz) * NC * x - ln(x) * ln(-xmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(-xmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * NC * pow(x, 2) + 21.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) + 21.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * x + 7 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 7.0 / 4.0 * pow(ln(x), 2) * NC * pow(z, -1) - 7.0 / 4.0 * pow(ln(x), 2) * NC * pow(omz, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(z, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(omz, -1) - 7 * pow(ln(x), 2) * NC * x - 7.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 7.0 / 2.0 * pow(ln(x), 2) * NC * pow(x, 2) * pow(omz, -1) + 7 * pow(ln(x), 2) * NC * pow(x, 2) - 6 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) - 15.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) + 15 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 9 * ln(x) * ln(z) * pow(NC, -1) * x - 9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += +9 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 3 * ln(x) * ln(z) * NC * pow(z, -1) + 3 * ln(x) * ln(z) * NC * pow(omz, -1) - 6 * ln(x) * ln(z) * NC - 6 * ln(x) * ln(z) * NC * x * pow(z, -1) - 6 * ln(x) * ln(z) * NC * x * pow(omz, -1) + 12 * ln(x) * ln(z) * NC * x + 6 * ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + 6 * ln(x) * ln(z) * NC * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * ln(z) * NC * pow(x, 2) - 9 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) - 9 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) + 6 * ln(x) * ln(omx) * pow(NC, -1) + 18 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 18 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 12 * ln(x) * ln(omx) * pow(NC, -1) * x - 12 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 12 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 12 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) + 3.0 / 2.0 * ln(x) * ln(omx) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * ln(omx) * NC * pow(omz, -1) - 3 * ln(x) * ln(omx) * NC - 3 * ln(x) * ln(omx) * NC * x * pow(z, -1) - 3 * ln(x) * ln(omx) * NC * x * pow(omz, -1) + 6 * ln(x) * ln(omx) * NC * x + 3 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 3 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) - 6 * ln(x) * ln(omx) * NC * pow(x, 2) - 15.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) - 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) + 15 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 12 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 9 * ln(x) * ln(omz) * pow(NC, -1) * x - 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 9 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 3 * ln(x) * ln(omz) * NC * pow(z, -1)
                result += +3 * ln(x) * ln(omz) * NC * pow(omz, -1) - 6 * ln(x) * ln(omz) * NC - 6 * ln(x) * ln(omz) * NC * x * pow(z, -1) - 6 * ln(x) * ln(omz) * NC * x * pow(omz, -1) + 12 * ln(x) * ln(omz) * NC * x + 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 6 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 12 * ln(x) * ln(omz) * NC * pow(x, 2) + ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(omxmz) * pow(NC, -1) - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(omxmz) * pow(NC, -1) * x + ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(omxmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(omxmz) * NC * pow(omz, -1) + ln(x) * ln(omxmz) * NC + ln(x) * ln(omxmz) * NC * x * pow(z, -1) + ln(x) * ln(omxmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * NC * x - ln(x) * ln(omxmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(omxmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * NC * pow(x, 2) + ln(z) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) + ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(z) * NC * pow(z, -1) - ln(z) * NC * pow(omz, -1) + 3 * ln(z) * NC + 4 * ln(z) * NC * x - 4 * ln(z) * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(z) * ln(-xmz) * pow(NC, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1)
                result += +2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(omz, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * x - ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * ln(-xmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(-xmz) * NC * pow(omz, -1) - ln(z) * ln(-xmz) * NC - ln(z) * ln(-xmz) * NC * x * pow(z, -1) - ln(z) * ln(-xmz) * NC * x * pow(omz, -1) + 2 * ln(z) * ln(-xmz) * NC * x + ln(z) * ln(-xmz) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(-xmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * NC * pow(x, 2) + 7.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) + 11.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) - 7.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) - 11.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * x + 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 5.0 / 4.0 * pow(ln(z), 2) * NC * pow(z, -1) - 5.0 / 4.0 * pow(ln(z), 2) * NC * pow(omz, -1) + 5.0 / 2.0 * pow(ln(z), 2) * NC + 5.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) + 5.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(omz, -1) - 5 * pow(ln(z), 2) * NC * x - 5.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 5.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(omz, -1) + 5 * pow(ln(z), 2) * NC * pow(x, 2) + 9.0 / 2.0 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 7.0 / 2.0 * ln(z) * ln(omx) * pow(NC, -1) - 9 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 12 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(omz, -1)
                result += +7 * ln(z) * ln(omx) * pow(NC, -1) * x + 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(z) * ln(omx) * NC * pow(z, -1) - 1.0 / 2.0 * ln(z) * ln(omx) * NC * pow(omz, -1) + ln(z) * ln(omx) * NC + ln(z) * ln(omx) * NC * x * pow(z, -1) + ln(z) * ln(omx) * NC * x * pow(omz, -1) - 2 * ln(z) * ln(omx) * NC * x - ln(z) * ln(omx) * NC * pow(x, 2) * pow(z, -1) - ln(z) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(z) * ln(omx) * NC * pow(x, 2) + 5.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 3 * ln(z) * ln(omz) * pow(NC, -1) * x + 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(z, -1) - 5.0 / 2.0 * ln(z) * ln(omz) * NC * pow(omz, -1) + 5 * ln(z) * ln(omz) * NC + 5 * ln(z) * ln(omz) * NC * x * pow(z, -1) + 5 * ln(z) * ln(omz) * NC * x * pow(omz, -1) - 10 * ln(z) * ln(omz) * NC * x - 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 5 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 10 * ln(z) * ln(omz) * NC * pow(x, 2) + ln(omx) * pow(NC, -1) * pow(z, -1) + ln(omx) * pow(NC, -1) * pow(omz, -1) - 2 * ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(z, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(omz, -1) + 3.0 / 2.0 * ln(omx) * NC + 2 * ln(omx) * NC * x
                result += -2 * ln(omx) * NC * pow(x, 2) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(omz, -1) - 2 * pow(ln(omx), 2) * pow(NC, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * pow(ln(omx), 2) * NC * pow(z, -1) - 3.0 / 4.0 * pow(ln(omx), 2) * NC * pow(omz, -1) + 3.0 / 2.0 * pow(ln(omx), 2) * NC + 3.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) + 3.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(omz, -1) - 3 * pow(ln(omx), 2) * NC * x - 3.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(omz, -1) + 3 * pow(ln(omx), 2) * NC * pow(x, 2) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) + 9.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 7.0 / 2.0 * ln(omx) * ln(omz) * pow(NC, -1) - 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 9 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 7 * ln(omx) * ln(omz) * pow(NC, -1) * x + 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * ln(omz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(omx) * ln(omz) * NC * pow(omz, -1) + ln(omx) * ln(omz) * NC + ln(omx) * ln(omz) * NC * x * pow(z, -1) + ln(omx) * ln(omz) * NC * x * pow(omz, -1) - 2 * ln(omx) * ln(omz) * NC * x - ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - ln(omx) * ln(omz) * NC * pow(x, 2) * pow(omz, -1)
                result += +2 * ln(omx) * ln(omz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(omz) * pow(NC, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omz) * NC * pow(z, -1) - ln(omz) * NC * pow(omz, -1) + 3 * ln(omz) * NC + 4 * ln(omz) * NC * x - 4 * ln(omz) * NC * pow(x, 2) + 11.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) + 7.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) - 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) - 7.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(omz, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * x + 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - 5.0 / 4.0 * pow(ln(omz), 2) * NC * pow(z, -1) - 5.0 / 4.0 * pow(ln(omz), 2) * NC * pow(omz, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * NC + 5.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(omz, -1) - 5 * pow(ln(omz), 2) * NC * x - 5.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(omz, -1) + 5 * pow(ln(omz), 2) * NC * pow(x, 2) - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * pow(NC, -1) + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(omz, -1) - ln(omz) * ln(omxmz) * pow(NC, -1) * x - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += +ln(omz) * ln(omxmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * ln(omxmz) * NC * pow(omz, -1) - ln(omz) * ln(omxmz) * NC - ln(omz) * ln(omxmz) * NC * x * pow(z, -1) - ln(omz) * ln(omxmz) * NC * x * pow(omz, -1) + 2 * ln(omz) * ln(omxmz) * NC * x + ln(omz) * ln(omxmz) * NC * pow(x, 2) * pow(z, -1) + ln(omz) * ln(omxmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * NC * pow(x, 2) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * pow(NC, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * x - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * NC * pow(omz, -1) + Li2(pow(omx, -1) * omz) * NC + Li2(pow(omx, -1) * omz) * NC * x * pow(z, -1) + Li2(pow(omx, -1) * omz) * NC * x * pow(omz, -1) - 2 * Li2(pow(omx, -1) * omz) * NC * x - Li2(pow(omx, -1) * omz) * NC * pow(x, 2) * pow(z, -1) - Li2(pow(omx, -1) * omz) * NC * pow(x, 2) * pow(omz, -1) + 2 * Li2(pow(omx, -1) * omz) * NC * pow(x, 2) - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(z * pow(omx, -1)) * pow(NC, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(omz, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * x
                result += -Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(z * pow(omx, -1)) * NC * pow(omz, -1) + Li2(z * pow(omx, -1)) * NC + Li2(z * pow(omx, -1)) * NC * x * pow(z, -1) + Li2(z * pow(omx, -1)) * NC * x * pow(omz, -1) - 2 * Li2(z * pow(omx, -1)) * NC * x - Li2(z * pow(omx, -1)) * NC * pow(x, 2) * pow(z, -1) - Li2(z * pow(omx, -1)) * NC * pow(x, 2) * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * NC * pow(x, 2) + 1.0 / 2.0 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(omz, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(omz, -1) + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x * pow(z, -1) + Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x * pow(omz, -1) - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * x - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) * pow(z, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) * pow(omz, -1)
                result += +2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * NC * pow(x, 2) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) - Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(omz, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(omz, -1) - Li2(z) * pow(NC, -1) * x * pow(z, -1) + Li2(z) * pow(NC, -1) * x * pow(omz, -1)
            if z > round(1 - x, ndecimals) and z > x:
                result += 3.0 / 2.0 * pow(NC, -1) * pow(z, -1) - 11.0 / 12.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) + 3.0 / 2.0 * pow(NC, -1) * pow(omz, -1) - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * pow(omz, -1) + 7.0 / 12.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) + 5.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(z, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(pi, 2) - pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 1.0 / 12.0 * NC * pow(z, -1) * pow(pi, 2) - 2 * NC + 1.0 / 12.0 * NC * pow(pi, 2) * pow(omz, -1) - 1.0 / 6.0 * NC * pow(pi, 2) - 1.0 / 6.0 * NC * x * pow(z, -1) * pow(pi, 2) - 2 * NC * x - 1.0 / 6.0 * NC * x * pow(pi, 2) * pow(omz, -1) + 1.0 / 3.0 * NC * x * pow(pi, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(z, -1) * pow(pi, 2) + 2 * NC * pow(x, 2) + 1.0 / 6.0 * NC * pow(x, 2) * pow(pi, 2) * pow(omz, -1) - 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(omz, -1) + 3 * ln(x) * pow(NC, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 3 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * NC * pow(z, -1) + 3.0 / 2.0 * ln(x) * NC * pow(omz, -1) - 9.0 / 2.0 * ln(x) * NC - 6 * ln(x) * NC * x + 6 * ln(x) * NC * pow(x, 2) + ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * pow(NC, -1) - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(-omxmz) * pow(NC, -1) * x + ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(-omxmz) * NC * pow(omz, -1) + ln(x) * ln(-omxmz) * NC + ln(x) * ln(-omxmz) * NC * x * pow(z, -1) + ln(x) * ln(-omxmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * NC * x - ln(x) * ln(-omxmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(-omxmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * NC * pow(x, 2) + 1.0 / 2.0 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) + ln(x) * ln(-xmz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * ln(x) * ln(-xmz) * pow(NC, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(omz, -1) + ln(x) * ln(-xmz) * pow(NC, -1) * x + ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(x) * ln(-xmz) * NC * pow(z, -1) - 1.0 / 2.0 * ln(x) * ln(-xmz) * NC * pow(omz, -1) + ln(x) * ln(-xmz) * NC + ln(x) * ln(-xmz) * NC * x * pow(z, -1) + ln(x) * ln(-xmz) * NC * x * pow(omz, -1) - 2 * ln(x) * ln(-xmz) * NC * x - ln(x) * ln(-xmz) * NC * pow(x, 2) * pow(z, -1) - ln(x) * ln(-xmz) * NC * pow(x, 2) * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * NC * pow(x, 2) + 19.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) + 5 * pow(ln(x), 2) * pow(NC, -1) * pow(omz, -1) - 13.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * pow(omz, -1) + 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x + 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1)
                result += +13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 13.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(z, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * pow(omz, -1) + 3 * pow(ln(x), 2) * NC + 3 * pow(ln(x), 2) * NC * x * pow(z, -1) + 3 * pow(ln(x), 2) * NC * x * pow(omz, -1) - 6 * pow(ln(x), 2) * NC * x - 3 * pow(ln(x), 2) * NC * pow(x, 2) * pow(z, -1) - 3 * pow(ln(x), 2) * NC * pow(x, 2) * pow(omz, -1) + 6 * pow(ln(x), 2) * NC * pow(x, 2) - 7 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * pow(omz, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) + 14 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) + 16 * ln(x) * ln(z) * pow(NC, -1) * x * pow(omz, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * x - 10 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 10 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(x) * ln(z) * NC * pow(z, -1) + 5.0 / 2.0 * ln(x) * ln(z) * NC * pow(omz, -1) - 5 * ln(x) * ln(z) * NC - 5 * ln(x) * ln(z) * NC * x * pow(z, -1) - 5 * ln(x) * ln(z) * NC * x * pow(omz, -1) + 10 * ln(x) * ln(z) * NC * x + 5 * ln(x) * ln(z) * NC * pow(x, 2) * pow(z, -1) + 5 * ln(x) * ln(z) * NC * pow(x, 2) * pow(omz, -1) - 10 * ln(x) * ln(z) * NC * pow(x, 2) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) - 17.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * pow(omz, -1) + 11.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) + 16 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) + 17 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(omz, -1) - 11 * ln(x) * ln(omx) * pow(NC, -1) * x - 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 11 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2)
                result += +2 * ln(x) * ln(omx) * NC * pow(z, -1) + 2 * ln(x) * ln(omx) * NC * pow(omz, -1) - 4 * ln(x) * ln(omx) * NC - 4 * ln(x) * ln(omx) * NC * x * pow(z, -1) - 4 * ln(x) * ln(omx) * NC * x * pow(omz, -1) + 8 * ln(x) * ln(omx) * NC * x + 4 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(z, -1) + 4 * ln(x) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) - 8 * ln(x) * ln(omx) * NC * pow(x, 2) - 13.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) - 11.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(omz, -1) + 4 * ln(x) * ln(omz) * pow(NC, -1) + 13 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) + 11 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) - 8 * ln(x) * ln(omz) * pow(NC, -1) * x - 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 8 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(x) * ln(omz) * NC * pow(z, -1) + 5.0 / 2.0 * ln(x) * ln(omz) * NC * pow(omz, -1) - 5 * ln(x) * ln(omz) * NC - 5 * ln(x) * ln(omz) * NC * x * pow(z, -1) - 5 * ln(x) * ln(omz) * NC * x * pow(omz, -1) + 10 * ln(x) * ln(omz) * NC * x + 5 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(z, -1) + 5 * ln(x) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) - 10 * ln(x) * ln(omz) * NC * pow(x, 2) + ln(z) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) + ln(z) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(z) * NC * pow(z, -1) - ln(z) * NC * pow(omz, -1) + 3 * ln(z) * NC + 4 * ln(z) * NC * x - 4 * ln(z) * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(z) * ln(-xmz) * pow(NC, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1)
                result += +2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(omz, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * x - ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * ln(-xmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(z) * ln(-xmz) * NC * pow(omz, -1) - ln(z) * ln(-xmz) * NC - ln(z) * ln(-xmz) * NC * x * pow(z, -1) - ln(z) * ln(-xmz) * NC * x * pow(omz, -1) + 2 * ln(z) * ln(-xmz) * NC * x + ln(z) * ln(-xmz) * NC * pow(x, 2) * pow(z, -1) + ln(z) * ln(-xmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * NC * pow(x, 2) + 7.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) + 11.0 / 4.0 * pow(ln(z), 2) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) - 7.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) - 11.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(omz, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * x + 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * pow(ln(z), 2) * NC * pow(z, -1) - 3.0 / 4.0 * pow(ln(z), 2) * NC * pow(omz, -1) + 3.0 / 2.0 * pow(ln(z), 2) * NC + 3.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) + 3.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(omz, -1) - 3 * pow(ln(z), 2) * NC * x - 3.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(z, -1) - 3.0 / 2.0 * pow(ln(z), 2) * NC * pow(x, 2) * pow(omz, -1) + 3 * pow(ln(z), 2) * NC * pow(x, 2) + 9.0 / 2.0 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(omz, -1) - 7.0 / 2.0 * ln(z) * ln(omx) * pow(NC, -1) - 9 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) - 12 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(omz, -1)
                result += +7 * ln(z) * ln(omx) * pow(NC, -1) * x + 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 7 * ln(z) * ln(omx) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * ln(z) * ln(omx) * NC * pow(z, -1) - 3.0 / 2.0 * ln(z) * ln(omx) * NC * pow(omz, -1) + 3 * ln(z) * ln(omx) * NC + 3 * ln(z) * ln(omx) * NC * x * pow(z, -1) + 3 * ln(z) * ln(omx) * NC * x * pow(omz, -1) - 6 * ln(z) * ln(omx) * NC * x - 3 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(z, -1) - 3 * ln(z) * ln(omx) * NC * pow(x, 2) * pow(omz, -1) + 6 * ln(z) * ln(omx) * NC * pow(x, 2) + 7.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) + 5.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 2 * ln(z) * ln(omz) * pow(NC, -1) - 7 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) - 2 * ln(z) * ln(omz) * NC * pow(z, -1) - 2 * ln(z) * ln(omz) * NC * pow(omz, -1) + 4 * ln(z) * ln(omz) * NC + 4 * ln(z) * ln(omz) * NC * x * pow(z, -1) + 4 * ln(z) * ln(omz) * NC * x * pow(omz, -1) - 8 * ln(z) * ln(omz) * NC * x - 4 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 4 * ln(z) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 8 * ln(z) * ln(omz) * NC * pow(x, 2) + ln(omx) * pow(NC, -1) * pow(z, -1) + ln(omx) * pow(NC, -1) * pow(omz, -1) - 2 * ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 2 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(z, -1) - 1.0 / 2.0 * ln(omx) * NC * pow(omz, -1) + 3.0 / 2.0 * ln(omx) * NC + 2 * ln(omx) * NC * x
                result += -2 * ln(omx) * NC * pow(x, 2) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * pow(omz, -1) - 2 * pow(ln(omx), 2) * pow(NC, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) - 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 4 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(z, -1) - 1.0 / 4.0 * pow(ln(omx), 2) * NC * pow(omz, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(omz, -1) - pow(ln(omx), 2) * NC * x - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(z, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * pow(x, 2) * pow(omz, -1) + pow(ln(omx), 2) * NC * pow(x, 2) + 5 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * pow(omz, -1) - 3 * ln(omx) * ln(omz) * pow(NC, -1) - 10 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(omz, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * x + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * pow(x, 2) - ln(omx) * ln(omz) * NC * pow(z, -1) - ln(omx) * ln(omz) * NC * pow(omz, -1) + 2 * ln(omx) * ln(omz) * NC + 2 * ln(omx) * ln(omz) * NC * x * pow(z, -1) + 2 * ln(omx) * ln(omz) * NC * x * pow(omz, -1) - 4 * ln(omx) * ln(omz) * NC * x - 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(z, -1) - 2 * ln(omx) * ln(omz) * NC * pow(x, 2) * pow(omz, -1) + 4 * ln(omx) * ln(omz) * NC * pow(x, 2)
                result += +1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(omz) * pow(NC, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + ln(omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - ln(omz) * NC * pow(z, -1) - ln(omz) * NC * pow(omz, -1) + 3 * ln(omz) * NC + 4 * ln(omz) * NC * x - 4 * ln(omz) * NC * pow(x, 2) - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * pow(NC, -1) + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(omz, -1) - ln(omz) * ln(-omxmz) * pow(NC, -1) * x - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * NC * pow(z, -1) + 1.0 / 2.0 * ln(omz) * ln(-omxmz) * NC * pow(omz, -1) - ln(omz) * ln(-omxmz) * NC - ln(omz) * ln(-omxmz) * NC * x * pow(z, -1) - ln(omz) * ln(-omxmz) * NC * x * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * NC * x + ln(omz) * ln(-omxmz) * NC * pow(x, 2) * pow(z, -1) + ln(omz) * ln(-omxmz) * NC * pow(x, 2) * pow(omz, -1) - 2 * ln(omz) * ln(-omxmz) * NC * pow(x, 2) + 9.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(omz, -1) - 5.0 / 4.0 * pow(ln(omz), 2) * pow(NC, -1) - 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(omz, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(omz, -1)
                result += -5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) - pow(ln(omz), 2) * NC * pow(z, -1) - pow(ln(omz), 2) * NC * pow(omz, -1) + 2 * pow(ln(omz), 2) * NC + 2 * pow(ln(omz), 2) * NC * x * pow(z, -1) + 2 * pow(ln(omz), 2) * NC * x * pow(omz, -1) - 4 * pow(ln(omz), 2) * NC * x - 2 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(z, -1) - 2 * pow(ln(omz), 2) * NC * pow(x, 2) * pow(omz, -1) + 4 * pow(ln(omz), 2) * NC * pow(x, 2) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) + Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(omz, -1) - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x * pow(z, -1) - Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x * pow(omz, -1) + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * x + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) * pow(z, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * NC * pow(x, 2) + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(z, -1) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(omz, -1)
                result += -1.0 / 2.0 * Li2(pow(z, -1) * omx) * pow(NC, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(omz, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * x + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * NC * pow(z, -1) + 1.0 / 2.0 * Li2(pow(z, -1) * omx) * NC * pow(omz, -1) - Li2(pow(z, -1) * omx) * NC - Li2(pow(z, -1) * omx) * NC * x * pow(z, -1) - Li2(pow(z, -1) * omx) * NC * x * pow(omz, -1) + 2 * Li2(pow(z, -1) * omx) * NC * x + Li2(pow(z, -1) * omx) * NC * pow(x, 2) * pow(z, -1) + Li2(pow(z, -1) * omx) * NC * pow(x, 2) * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * NC * pow(x, 2) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(omz, -1) + 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * pow(NC, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(omz, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * x - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * NC * pow(z, -1) - 1.0 / 2.0 * Li2(pow(omx, -1) * omz) * NC * pow(omz, -1) + Li2(pow(omx, -1) * omz) * NC + Li2(pow(omx, -1) * omz) * NC * x * pow(z, -1) + Li2(pow(omx, -1) * omz) * NC * x * pow(omz, -1) - 2 * Li2(pow(omx, -1) * omz) * NC * x - Li2(pow(omx, -1) * omz) * NC * pow(x, 2) * pow(z, -1) - Li2(pow(omx, -1) * omz) * NC * pow(x, 2) * pow(omz, -1)
                result += +2 * Li2(pow(omx, -1) * omz) * NC * pow(x, 2) + 1.0 / 2.0 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(omz, -1) - 1.0 / 2.0 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(omz, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(z, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(z, -1) - 1.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(omz, -1) - Li2(z) * pow(NC, -1) * x * pow(z, -1) + Li2(z) * pow(NC, -1) * x * pow(omz, -1)
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 4.0 * LMUA * pow(NC, -1) - 1.0 / 8.0 * LMUA * pow(NC, -1) * z - 1.0 / 4.0 * LMUA * pow(NC, -1) * x * z + 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) * z + 1.0 / 4.0 * LMUA * NC + 1.0 / 8.0 * LMUA * NC * z + 1.0 / 4.0 * LMUA * NC * x * z - 1.0 / 4.0 * LMUA * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) - 5.0 / 4.0 * ln(omz) * LMUA * pow(NC, -1) - 1.0 / 4.0 * ln(omz) * LMUA * pow(NC, -1) * z - ln(omz) * LMUA * pow(NC, -1) * x * pow(z, -1) + 5.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x * z + ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) * pow(z, -1) - 5.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(omz) * LMUA * NC * pow(z, -1) + 5.0 / 4.0 * ln(omz) * LMUA * NC + 1.0 / 4.0 * ln(omz) * LMUA * NC * z + ln(omz) * LMUA * NC * x * pow(z, -1) - 5.0 / 2.0 * ln(omz) * LMUA * NC * x - 1.0 / 2.0 * ln(omz) * LMUA * NC * x * z - ln(omz) * LMUA * NC * pow(x, 2) * pow(z, -1) + 5.0 / 2.0 * ln(omz) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * LMUA * NC * pow(x, 2) * z - 1.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) - 1.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * z + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) * z + 1.0 / 4.0 * ln(omx) * LMUA * NC + 1.0 / 4.0 * ln(omx) * LMUA * NC * z - 1.0 / 2.0 * ln(omx) * LMUA * NC * x - 1.0 / 2.0 * ln(omx) * LMUA * NC * x * z + 1.0 / 2.0 * ln(omx) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUA * NC * pow(x, 2) * z + 1.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) + 1.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * z - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x * z + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * pow(x, 2) * z - 1.0 / 4.0 * ln(x) * LMUA * NC - 1.0 / 4.0 * ln(x) * LMUA * NC * z + 1.0 / 2.0 * ln(x) * LMUA * NC * x + 1.0 / 2.0 * ln(x) * LMUA * NC * x * z - 1.0 / 2.0 * ln(x) * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUA * NC * pow(x, 2) * z - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * pow(omz, -1) + 3.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) + 1.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) * z + ln(z) * LMUA * pow(NC, -1) * x * pow(omz, -1) - 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x * z - ln(z) * LMUA * pow(NC, -1) * pow(x, 2) * pow(omz, -1) + 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * LMUA * NC * pow(omz, -1) - 3.0 / 4.0 * ln(z) * LMUA * NC - 1.0 / 4.0 * ln(z) * LMUA * NC * z - ln(z) * LMUA * NC * x * pow(omz, -1) + 3.0 / 2.0 * ln(z) * LMUA * NC * x + 1.0 / 2.0 * ln(z) * LMUA * NC * x * z + ln(z) * LMUA * NC * pow(x, 2) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(z) * LMUA * NC * pow(x, 2) * z
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += +1.0 / 2.0 * LMUF * pow(NC, -1) * z - 1.0 / 2.0 * LMUF * pow(NC, -1) * x + 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) * z - 2.0 / 3.0 * LMUF * NC * pow(x, -1) * pow(z, -1) + 4.0 / 3.0 * LMUF * NC * pow(x, -1) - 17.0 / 12.0 * LMUF * NC * pow(z, -1) + 17.0 / 6.0 * LMUF * NC - 1.0 / 2.0 * LMUF * NC * z - 13.0 / 6.0 * LMUF * NC * x * pow(z, -1) + 29.0 / 6.0 * LMUF * NC * x + 10.0 / 3.0 * LMUF * NC * pow(x, 2) * pow(z, -1) - 89.0 / 12.0 * LMUF * NC * pow(x, 2) + 3.0 / 4.0 * LMUF * NC * pow(x, 2) * z + 1.0 / 6.0 * LMUF * NF * pow(z, -1) - 1.0 / 3.0 * LMUF * NF - 1.0 / 3.0 * LMUF * NF * x * pow(z, -1) + 2.0 / 3.0 * LMUF * NF * x + 1.0 / 3.0 * LMUF * NF * pow(x, 2) * pow(z, -1) - 2.0 / 3.0 * LMUF * NF * pow(x, 2) - 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) + 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * z - 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * z + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * pow(x, 2) * z - ln(x) * LMUF * NC * pow(z, -1) + 9.0 / 4.0 * ln(x) * LMUF * NC - 1.0 / 4.0 * ln(x) * LMUF * NC * z - 4 * ln(x) * LMUF * NC * x * pow(z, -1) + 17.0 / 2.0 * ln(x) * LMUF * NC * x - 1.0 / 2.0 * ln(x) * LMUF * NC * x * z - 1.0 / 2.0 * ln(x) * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUF * NC * pow(x, 2) * z + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(omz, -1) - 1.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) - 1.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) * z - ln(z) * LMUF * pow(NC, -1) * x * pow(omz, -1) + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x * z + ln(z) * LMUF * pow(NC, -1) * pow(x, 2) * pow(omz, -1) - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(x, 2) * z - 1.0 / 2.0 * ln(z) * LMUF * NC * pow(omz, -1) + 1.0 / 4.0 * ln(z) * LMUF * NC + 1.0 / 4.0 * ln(z) * LMUF * NC * z + ln(z) * LMUF * NC * x * pow(omz, -1) - 1.0 / 2.0 * ln(z) * LMUF * NC * x - 1.0 / 2.0 * ln(z) * LMUF * NC * x * z - ln(z) * LMUF * NC * pow(x, 2) * pow(omz, -1) + 1.0 / 2.0 * ln(z) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(z) * LMUF * NC * pow(x, 2) * z - 1.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) - 1.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * z + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) * z - ln(omx) * LMUF * NC * pow(z, -1) + 9.0 / 4.0 * ln(omx) * LMUF * NC + 1.0 / 4.0 * ln(omx) * LMUF * NC * z + 2 * ln(omx) * LMUF * NC * x * pow(z, -1) - 9.0 / 2.0 * ln(omx) * LMUF * NC * x - 1.0 / 2.0 * ln(omx) * LMUF * NC * x * z - 2 * ln(omx) * LMUF * NC * pow(x, 2) * pow(z, -1) + 9.0 / 2.0 * ln(omx) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUF * NC * pow(x, 2) * z - 1.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) - 1.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) * z + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x * z - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * pow(x, 2) * z + 1.0 / 4.0 * ln(omz) * LMUF * NC + 1.0 / 4.0 * ln(omz) * LMUF * NC * z - 1.0 / 2.0 * ln(omz) * LMUF * NC * x - 1.0 / 2.0 * ln(omz) * LMUF * NC * x * z + 1.0 / 2.0 * ln(omz) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(omz) * LMUF * NC * pow(x, 2) * z
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += +11.0 / 12.0 * LMUR * NC * pow(z, -1) - 11.0 / 6.0 * LMUR * NC - 11.0 / 6.0 * LMUR * NC * x * pow(z, -1) + 11.0 / 3.0 * LMUR * NC * x + 11.0 / 6.0 * LMUR * NC * pow(x, 2) * pow(z, -1) - 11.0 / 3.0 * LMUR * NC * pow(x, 2) - 1.0 / 6.0 * LMUR * NF * pow(z, -1) + 1.0 / 3.0 * LMUR * NF + 1.0 / 3.0 * LMUR * NF * x * pow(z, -1) - 2.0 / 3.0 * LMUR * NF * x - 1.0 / 3.0 * LMUR * NF * pow(x, 2) * pow(z, -1) + 2.0 / 3.0 * LMUR * NF * pow(x, 2)
        elif orders == "011":
            if z != x and z != round(1 - x, ndecimals):
                result += +1.0 / 4.0 * LMUA * LMUF * pow(NC, -1) + 1.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * z - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x * z + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * pow(x, 2) * z - 1.0 / 4.0 * LMUA * LMUF * NC - 1.0 / 4.0 * LMUA * LMUF * NC * z + 1.0 / 2.0 * LMUA * LMUF * NC * x + 1.0 / 2.0 * LMUA * LMUF * NC * x * z - 1.0 / 2.0 * LMUA * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * LMUA * LMUF * NC * pow(x, 2) * z
        return result
    elif rsl == "rs":
        result = 0
        if orders == "000":
            result_r0 = 3.0 / 8.0 * pow(NC, -1) + 1.0 / 8.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 8.0 * pow(NC, -1) * x - 1.0 / 4.0 * pow(NC, -1) * x * pow(pi, 2) - 3.0 / 8.0 * pow(NC, -1) * pow(x, 2) + 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 13.0 / 9.0 * NC * pow(x, -1) - 59.0 / 24.0 * NC - 1.0 / 8.0 * NC * pow(pi, 2) + 119.0 / 24.0 * NC * x + 11.0 / 12.0 * NC * x * pow(pi, 2) - 347.0 / 72.0 * NC * pow(x, 2) - 2.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 4.0 * ln(x) * pow(NC, -1) + 3 * ln(x) * pow(NC, -1) * x - 5.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) + 7.0 / 4.0 * ln(x) * NC - 3 * ln(x) * NC * x + 15 * ln(x) * NC * pow(x, 2) - ln(x) * ln(1 + x) * NC - 2 * ln(x) * ln(1 + x) * NC * x - 2 * ln(x) * ln(1 + x) * NC * pow(x, 2) - 1.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) + 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x - pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * pow(ln(x), 2) * NC - 7.0 / 2.0 * pow(ln(x), 2) * NC * x + pow(ln(x), 2) * NC * pow(x, 2) + ln(x) * ln(omx) * pow(NC, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * x + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omx) * NC + 4 * ln(x) * ln(omx) * NC * x - 4 * ln(x) * ln(omx) * NC * pow(x, 2) + 7.0 / 8.0 * ln(omx) * pow(NC, -1) - 3 * ln(omx) * pow(NC, -1) * x + 5.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) + 2.0 / 3.0 * ln(omx) * NC * pow(x, -1) - 3.0 / 8.0 * ln(omx) * NC + 7 * ln(omx) * NC * x - 23.0 / 3.0 * ln(omx) * NC * pow(x, 2) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) + pow(ln(omx), 2) * pow(NC, -1) * x - pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) + pow(ln(omx), 2) * NC - 2 * pow(ln(omx), 2) * NC * x + 2 * pow(ln(omx), 2) * NC * pow(x, 2) - Li2(-x) * NC - 2 * Li2(-x) * NC * x - 2 * Li2(-x) * NC * pow(x, 2) + 1.0 / 4.0 * Li2(x) * pow(NC, -1) - 1.0 / 2.0 * Li2(x) * pow(NC, -1) * x - 5.0 / 4.0 * Li2(x) * NC - 7.0 / 2.0 * Li2(x) * NC * x
            result_r1 = 7.0 / 8.0 * pow(NC, -1) - 3 * pow(NC, -1) * x + 5.0 / 2.0 * pow(NC, -1) * pow(x, 2) + 2.0 / 3.0 * NC * pow(x, -1) - 3.0 / 8.0 * NC + 7 * NC * x - 23.0 / 3.0 * NC * pow(x, 2) + 3.0 / 4.0 * ln(x) * pow(NC, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * x + 2 * ln(x) * pow(NC, -1) * pow(x, 2) + 1.0 / 4.0 * ln(x) * NC + 11.0 / 2.0 * ln(x) * NC * x - 2 * ln(x) * NC * pow(x, 2) - ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * x - 2 * ln(omx) * pow(NC, -1) * pow(x, 2) + 2 * ln(omx) * NC - 4 * ln(omx) * NC * x + 4 * ln(omx) * NC * pow(x, 2)
            result_r2 = -3.0 / 4.0 * pow(NC, -1) + 3.0 / 2.0 * pow(NC, -1) * x - 3.0 / 2.0 * pow(NC, -1) * pow(x, 2) + 3.0 / 4.0 * NC - 3.0 / 2.0 * NC * x + 3.0 / 2.0 * NC * pow(x, 2)
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z) + result_r2 * ln(1 - z) * ln(1 - z) / (1 - z)
        elif orders == "001":
            result_r0 = +3.0 / 8.0 * LMUA * pow(NC, -1) + 1.0 / 4.0 * LMUA * pow(NC, -1) * x - 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) - 3.0 / 8.0 * LMUA * NC - 1.0 / 4.0 * LMUA * NC * x + 1.0 / 4.0 * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) + ln(x) * LMUA * pow(NC, -1) * x - ln(x) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUA * NC - ln(x) * LMUA * NC * x + ln(x) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) - ln(omx) * LMUA * pow(NC, -1) * x + ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUA * NC + ln(omx) * LMUA * NC * x - ln(omx) * LMUA * NC * pow(x, 2)
            result_r1 = +LMUA * pow(NC, -1) - 2 * LMUA * pow(NC, -1) * x + 2 * LMUA * pow(NC, -1) * pow(x, 2) - LMUA * NC + 2 * LMUA * NC * x - 2 * LMUA * NC * pow(x, 2)
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "010":
            result_r0 = -1.0 / 2.0 * LMUF * pow(NC, -1) + 5.0 / 4.0 * LMUF * pow(NC, -1) * x - 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) - 2.0 / 3.0 * LMUF * NC * pow(x, -1) - 11.0 / 12.0 * LMUF * NC - 41.0 / 12.0 * LMUF * NC * x + 49.0 / 12.0 * LMUF * NC * pow(x, 2) + 1.0 / 6.0 * LMUF * NF - 1.0 / 3.0 * LMUF * NF * x + 1.0 / 3.0 * LMUF * NF * pow(x, 2) - 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x - ln(x) * LMUF * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * ln(x) * LMUF * NC - 9.0 / 2.0 * ln(x) * LMUF * NC * x + ln(x) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) - ln(omx) * LMUF * pow(NC, -1) * x + ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * ln(omx) * LMUF * NC + 3 * ln(omx) * LMUF * NC * x - 3 * ln(omx) * LMUF * NC * pow(x, 2)
            result_r1 = +1.0 / 2.0 * LMUF * pow(NC, -1) - LMUF * pow(NC, -1) * x + LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * LMUF * NC + LMUF * NC * x - LMUF * NC * pow(x, 2)
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "100":
            result_r0 = +11.0 / 12.0 * LMUR * NC - 11.0 / 6.0 * LMUR * NC * x + 11.0 / 6.0 * LMUR * NC * pow(x, 2) - 1.0 / 6.0 * LMUR * NF + 1.0 / 3.0 * LMUR * NF * x - 1.0 / 3.0 * LMUR * NF * pow(x, 2)
            result += result_r0 * 1 / (1 - z)
        elif orders == "011":
            result_r0 = -1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) + LMUA * LMUF * pow(NC, -1) * x - LMUA * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * LMUA * LMUF * NC - LMUA * LMUF * NC * x + LMUA * LMUF * NC * pow(x, 2)
            result += result_r0 * 1 / (1 - z)
        return result
    elif rsl == "rl":
        result = 0
        if orders == "000":
            result += 17.0 / 8.0 * pow(NC, -1) - 4 * pow(NC, -1) * zeta3 - 1.0 / 8.0 * pow(NC, -1) * pow(pi, 2) - 81.0 / 16.0 * pow(NC, -1) * x + 8 * pow(NC, -1) * x * zeta3 + 5.0 / 12.0 * pow(NC, -1) * x * pow(pi, 2) + 57.0 / 16.0 * pow(NC, -1) * pow(x, 2) - 8 * pow(NC, -1) * pow(x, 2) * zeta3 - 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 52.0 / 27.0 * NC * pow(x, -1) - 43.0 / 18.0 * NC + 9.0 / 4.0 * NC * zeta3 - 1.0 / 3.0 * NC * pow(rln2, 3) + 7.0 / 24.0 * NC * pow(pi, 2) + 1.0 / 6.0 * NC * pow(pi, 2) * rln2 + 1049.0 / 144.0 * NC * x - 13.0 / 2.0 * NC * x * zeta3 - 2.0 / 3.0 * NC * x * pow(rln2, 3) - 1.0 / 4.0 * NC * x * pow(pi, 2) + 1.0 / 3.0 * NC * x * pow(pi, 2) * rln2 - 3433.0 / 432.0 * NC * pow(x, 2) + 9.0 / 2.0 * NC * pow(x, 2) * zeta3 - 2.0 / 3.0 * NC * pow(x, 2) * pow(rln2, 3) + 29.0 / 12.0 * NC * pow(x, 2) * pow(pi, 2) + 1.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) * rln2
            result += +1.0 / 2.0 * ln(1 + x) * NC * pow(rln2, 2) + 1.0 / 12.0 * ln(1 + x) * NC * pow(pi, 2) + ln(1 + x) * NC * x * pow(rln2, 2) + 1.0 / 6.0 * ln(1 + x) * NC * x * pow(pi, 2) + ln(1 + x) * NC * pow(x, 2) * pow(rln2, 2) + 1.0 / 6.0 * ln(1 + x) * NC * pow(x, 2) * pow(pi, 2) - 1.0 / 6.0 * pow(ln(1 + x), 3) * NC - 1.0 / 3.0 * pow(ln(1 + x), 3) * NC * x - 1.0 / 3.0 * pow(ln(1 + x), 3) * NC * pow(x, 2) - 3.0 / 4.0 * ln(x) * pow(NC, -1) - 1.0 / 4.0 * ln(x) * pow(NC, -1) * pow(pi, 2) - 37.0 / 16.0 * ln(x) * pow(NC, -1) * x + 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(pi, 2) + 7.0 / 8.0 * ln(x) * pow(NC, -1) * pow(x, 2) - 2.0 / 3.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 29.0 / 6.0 * ln(x) * NC + 1.0 / 12.0 * ln(x) * NC * pow(pi, 2) + 143.0 / 48.0 * ln(x) * NC * x - 3.0 / 2.0 * ln(x) * NC * x * pow(pi, 2) + 583.0 / 72.0 * ln(x) * NC * pow(x, 2) + ln(x) * NC * pow(x, 2) * pow(pi, 2)
            result += +ln(x) * ln(1 + x) * NC * x + ln(x) * ln(1 + x) * NC * pow(x, 2) + 7.0 / 32.0 * pow(ln(x), 2) * pow(NC, -1) - 15.0 / 8.0 * pow(ln(x), 2) * pow(NC, -1) * x + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 59.0 / 32.0 * pow(ln(x), 2) * NC + 19.0 / 8.0 * pow(ln(x), 2) * NC * x - 137.0 / 12.0 * pow(ln(x), 2) * NC * pow(x, 2) + pow(ln(x), 2) * ln(1 + x) * NC + 2 * pow(ln(x), 2) * ln(1 + x) * NC * x + 2 * pow(ln(x), 2) * ln(1 + x) * NC * pow(x, 2)
            result += +1.0 / 48.0 * pow(ln(x), 3) * pow(NC, -1) - 1.0 / 24.0 * pow(ln(x), 3) * pow(NC, -1) * x + 1.0 / 4.0 * pow(ln(x), 3) * pow(NC, -1) * pow(x, 2) + 19.0 / 48.0 * pow(ln(x), 3) * NC + 29.0 / 24.0 * pow(ln(x), 3) * NC * x - 1.0 / 4.0 * pow(ln(x), 3) * NC * pow(x, 2) - 3.0 / 8.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) + 3.0 / 4.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) * x - 3.0 / 4.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) * pow(x, 2) + 11.0 / 8.0 * pow(ln(x), 2) * ln(omx) * NC - 11.0 / 4.0 * pow(ln(x), 2) * ln(omx) * NC * x + 11.0 / 4.0 * pow(ln(x), 2) * ln(omx) * NC * pow(x, 2) - 7.0 / 8.0 * ln(x) * ln(omx) * pow(NC, -1) + 7.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * x - 3 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2.0 / 3.0 * ln(x) * ln(omx) * NC * pow(x, -1) + 3.0 / 8.0 * ln(x) * ln(omx) * NC - 15.0 / 2.0 * ln(x) * ln(omx) * NC * x + 49.0 / 6.0 * ln(x) * ln(omx) * NC * pow(x, 2) - ln(x) * ln(omx) * ln(1 + x) * NC - 2 * ln(x) * ln(omx) * ln(1 + x) * NC * x - 2 * ln(x) * ln(omx) * ln(1 + x) * NC * pow(x, 2) + ln(x) * pow(ln(omx), 2) * pow(NC, -1) - 2 * ln(x) * pow(ln(omx), 2) * pow(NC, -1) * x + 7.0 / 4.0 * ln(x) * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * ln(x) * pow(ln(omx), 2) * NC - 7.0 / 4.0 * ln(x) * pow(ln(omx), 2) * NC * pow(x, 2) + ln(x) * Li2(-x) * NC + 2 * ln(x) * Li2(-x) * NC * x + 2 * ln(x) * Li2(-x) * NC * pow(x, 2) - 1.0 / 2.0 * ln(x) * Li2(x) * pow(NC, -1) + ln(x) * Li2(x) * pow(NC, -1) * x - 1.0 / 2.0 * ln(x) * Li2(x) * pow(NC, -1) * pow(x, 2) + 5.0 / 2.0 * ln(x) * Li2(x) * NC + ln(x) * Li2(x) * NC * x
            result += +5.0 / 2.0 * ln(x) * Li2(x) * NC * pow(x, 2) + 3.0 / 8.0 * ln(omx) * pow(NC, -1) + 1.0 / 12.0 * ln(omx) * pow(NC, -1) * pow(pi, 2) + 7.0 / 4.0 * ln(omx) * pow(NC, -1) * x - 1.0 / 6.0 * ln(omx) * pow(NC, -1) * x * pow(pi, 2) - 7.0 / 8.0 * ln(omx) * pow(NC, -1) * pow(x, 2) + 1.0 / 4.0 * ln(omx) * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 13.0 / 9.0 * ln(omx) * NC * pow(x, -1) - 59.0 / 24.0 * ln(omx) * NC + 1.0 / 2.0 * ln(omx) * NC * pow(rln2, 2) - 1.0 / 6.0 * ln(omx) * NC * pow(pi, 2) + 16.0 / 3.0 * ln(omx) * NC * x + ln(omx) * NC * x * pow(rln2, 2) + ln(omx) * NC * x * pow(pi, 2) - 383.0 / 72.0 * ln(omx) * NC * pow(x, 2) + ln(omx) * NC * pow(x, 2) * pow(rln2, 2) - 3.0 / 4.0 * ln(omx) * NC * pow(x, 2) * pow(pi, 2)
            result += -ln(omx) * ln(1 + x) * NC * rln2 - 2 * ln(omx) * ln(1 + x) * NC * x * rln2 - 2 * ln(omx) * ln(1 + x) * NC * pow(x, 2) * rln2 + 1.0 / 2.0 * ln(omx) * pow(ln(1 + x), 2) * NC + ln(omx) * pow(ln(1 + x), 2) * NC * x + ln(omx) * pow(ln(1 + x), 2) * NC * pow(x, 2) + 7.0 / 16.0 * pow(ln(omx), 2) * pow(NC, -1) - 7.0 / 4.0 * pow(ln(omx), 2) * pow(NC, -1) * x + 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) + 1.0 / 3.0 * pow(ln(omx), 2) * NC * pow(x, -1) - 3.0 / 16.0 * pow(ln(omx), 2) * NC + 13.0 / 4.0 * pow(ln(omx), 2) * NC * x - 43.0 / 12.0 * pow(ln(omx), 2) * NC * pow(x, 2) - 5.0 / 24.0 * pow(ln(omx), 3) * pow(NC, -1) + 5.0 / 12.0 * pow(ln(omx), 3) * pow(NC, -1) * x - 5.0 / 12.0 * pow(ln(omx), 3) * pow(NC, -1) * pow(x, 2) + 7.0 / 24.0 * pow(ln(omx), 3) * NC - 7.0 / 12.0 * pow(ln(omx), 3) * NC * x + 7.0 / 12.0 * pow(ln(omx), 3) * NC * pow(x, 2) - ln(omx) * Li2(-x) * NC - 2 * ln(omx) * Li2(-x) * NC * x - 2 * ln(omx) * Li2(-x) * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * Li2(x) * pow(NC, -1) - ln(omx) * Li2(x) * pow(NC, -1) * x + 1.0 / 2.0 * ln(omx) * Li2(x) * pow(NC, -1) * pow(x, 2) - ln(omx) * Li2(x) * NC - 4 * ln(omx) * Li2(x) * NC * x + 1.0 / 2.0 * ln(omx) * Li2(x) * NC * pow(x, 2) - 1.0 / 4.0 * ln(opx) * NC * pow(pi, 2) - 1.0 / 2.0 * ln(opx) * NC * x * pow(pi, 2) - 1.0 / 2.0 * ln(opx) * NC * pow(x, 2) * pow(pi, 2) + Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * NC + 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * NC * x + 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * NC * pow(x, 2) + Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * NC
            result += +2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * NC * x + 2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * NC * pow(x, 2) + 3.0 / 2.0 * Li3(1 - x) * pow(NC, -1) - 3 * Li3(1 - x) * pow(NC, -1) * x + 5.0 / 2.0 * Li3(1 - x) * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * Li3(1 - x) * NC - 7 * Li3(1 - x) * NC * x - 1.0 / 2.0 * Li3(1 - x) * NC * pow(x, 2) + Li3(1 / (1 + x) - 1 / (1 + x) * x) * NC + 2 * Li3(1 / (1 + x) - 1 / (1 + x) * x) * NC * x + 2 * Li3(1 / (1 + x) - 1 / (1 + x) * x) * NC * pow(x, 2) + 5.0 / 4.0 * Li3(x) * pow(NC, -1) - 5.0 / 2.0 * Li3(x) * pow(NC, -1) * x + 5.0 / 2.0 * Li3(x) * pow(NC, -1) * pow(x, 2) - 9.0 / 4.0 * Li3(x) * NC + 5.0 / 2.0 * Li3(x) * NC * x - 9.0 / 2.0 * Li3(x) * NC * pow(x, 2) + Li2(-x) * NC * x + Li2(-x) * NC * pow(x, 2) - 1.0 / 8.0 * Li2(x) * pow(NC, -1) - 2.0 / 3.0 * Li2(x) * NC * pow(x, -1) - 11.0 / 8.0 * Li2(x) * NC - 4 * Li2(x) * NC * x - 22.0 / 3.0 * Li2(x) * NC * pow(x, 2)
            result_r0 = 3.0 / 8.0 * pow(NC, -1) + 1.0 / 8.0 * pow(NC, -1) * pow(pi, 2) + 11.0 / 8.0 * pow(NC, -1) * x - 1.0 / 4.0 * pow(NC, -1) * x * pow(pi, 2) - 3.0 / 8.0 * pow(NC, -1) * pow(x, 2) + 1.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 13.0 / 9.0 * NC * pow(x, -1) - 59.0 / 24.0 * NC - 1.0 / 8.0 * NC * pow(pi, 2) + 119.0 / 24.0 * NC * x + 11.0 / 12.0 * NC * x * pow(pi, 2) - 347.0 / 72.0 * NC * pow(x, 2) - 2.0 / 3.0 * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 4.0 * ln(x) * pow(NC, -1) + 3 * ln(x) * pow(NC, -1) * x - 5.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) + 7.0 / 4.0 * ln(x) * NC - 3 * ln(x) * NC * x + 15 * ln(x) * NC * pow(x, 2) - ln(x) * ln(1 + x) * NC - 2 * ln(x) * ln(1 + x) * NC * x - 2 * ln(x) * ln(1 + x) * NC * pow(x, 2) - 1.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) + 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x - pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * pow(ln(x), 2) * NC - 7.0 / 2.0 * pow(ln(x), 2) * NC * x + pow(ln(x), 2) * NC * pow(x, 2) + ln(x) * ln(omx) * pow(NC, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * x + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, 2) - 2 * ln(x) * ln(omx) * NC + 4 * ln(x) * ln(omx) * NC * x - 4 * ln(x) * ln(omx) * NC * pow(x, 2) + 7.0 / 8.0 * ln(omx) * pow(NC, -1) - 3 * ln(omx) * pow(NC, -1) * x + 5.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(x, 2) + 2.0 / 3.0 * ln(omx) * NC * pow(x, -1) - 3.0 / 8.0 * ln(omx) * NC + 7 * ln(omx) * NC * x - 23.0 / 3.0 * ln(omx) * NC * pow(x, 2) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) + pow(ln(omx), 2) * pow(NC, -1) * x - pow(ln(omx), 2) * pow(NC, -1) * pow(x, 2) + pow(ln(omx), 2) * NC - 2 * pow(ln(omx), 2) * NC * x + 2 * pow(ln(omx), 2) * NC * pow(x, 2) - Li2(-x) * NC - 2 * Li2(-x) * NC * x - 2 * Li2(-x) * NC * pow(x, 2) + 1.0 / 4.0 * Li2(x) * pow(NC, -1) - 1.0 / 2.0 * Li2(x) * pow(NC, -1) * x - 5.0 / 4.0 * Li2(x) * NC - 7.0 / 2.0 * Li2(x) * NC * x
            result_r1 = 7.0 / 8.0 * pow(NC, -1) - 3 * pow(NC, -1) * x + 5.0 / 2.0 * pow(NC, -1) * pow(x, 2) + 2.0 / 3.0 * NC * pow(x, -1) - 3.0 / 8.0 * NC + 7 * NC * x - 23.0 / 3.0 * NC * pow(x, 2) + 3.0 / 4.0 * ln(x) * pow(NC, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * x + 2 * ln(x) * pow(NC, -1) * pow(x, 2) + 1.0 / 4.0 * ln(x) * NC + 11.0 / 2.0 * ln(x) * NC * x - 2 * ln(x) * NC * pow(x, 2) - ln(omx) * pow(NC, -1) + 2 * ln(omx) * pow(NC, -1) * x - 2 * ln(omx) * pow(NC, -1) * pow(x, 2) + 2 * ln(omx) * NC - 4 * ln(omx) * NC * x + 4 * ln(omx) * NC * pow(x, 2)
            result_r2 = -3.0 / 4.0 * pow(NC, -1) + 3.0 / 2.0 * pow(NC, -1) * x - 3.0 / 2.0 * pow(NC, -1) * pow(x, 2) + 3.0 / 4.0 * NC - 3.0 / 2.0 * NC * x + 3.0 / 2.0 * NC * pow(x, 2)
            result += result_r0 * ln(1 - z) + result_r1 * (1 / 2) * ln(1 - z) * ln(1 - z) + result_r2 * (1 / 3) * ln(1 - z) * ln(1 - z) * ln(1 - z)
        elif orders == "001":
            result += -1.0 / 12.0 * LMUA * pow(NC, -1) * pow(pi, 2) + 3.0 / 4.0 * LMUA * pow(NC, -1) * x + 1.0 / 6.0 * LMUA * pow(NC, -1) * x * pow(pi, 2) - 3.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 6.0 * LMUA * pow(NC, -1) * pow(x, 2) * pow(pi, 2) + 1.0 / 12.0 * LMUA * NC * pow(pi, 2) - 3.0 / 4.0 * LMUA * NC * x - 1.0 / 6.0 * LMUA * NC * x * pow(pi, 2) + 3.0 / 4.0 * LMUA * NC * pow(x, 2) + 1.0 / 6.0 * LMUA * NC * pow(x, 2) * pow(pi, 2) - 3.0 / 8.0 * ln(x) * LMUA * pow(NC, -1) + 3.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * x - 3.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * pow(x, 2) + 3.0 / 8.0 * ln(x) * LMUA * NC - 3.0 / 4.0 * ln(x) * LMUA * NC * x + 3.0 / 4.0 * ln(x) * LMUA * NC * pow(x, 2) + 3.0 / 8.0 * ln(omx) * LMUA * pow(NC, -1) - 3.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * x + 3.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) - 3.0 / 8.0 * ln(omx) * LMUA * NC + 3.0 / 4.0 * ln(omx) * LMUA * NC * x - 3.0 / 4.0 * ln(omx) * LMUA * NC * pow(x, 2)
            result_r0 = +3.0 / 8.0 * LMUA * pow(NC, -1) + 1.0 / 4.0 * LMUA * pow(NC, -1) * x - 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(x, 2) - 3.0 / 8.0 * LMUA * NC - 1.0 / 4.0 * LMUA * NC * x + 1.0 / 4.0 * LMUA * NC * pow(x, 2) - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) + ln(x) * LMUA * pow(NC, -1) * x - ln(x) * LMUA * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * ln(x) * LMUA * NC - ln(x) * LMUA * NC * x + ln(x) * LMUA * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) - ln(omx) * LMUA * pow(NC, -1) * x + ln(omx) * LMUA * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUA * NC + ln(omx) * LMUA * NC * x - ln(omx) * LMUA * NC * pow(x, 2)
            result_r1 = +LMUA * pow(NC, -1) - 2 * LMUA * pow(NC, -1) * x + 2 * LMUA * pow(NC, -1) * pow(x, 2) - LMUA * NC + 2 * LMUA * NC * x - 2 * LMUA * NC * pow(x, 2)
            result += result_r0 * ln(1 - z) + result_r1 * (1 / 2) * ln(1 - z) * ln(1 - z)
        elif orders == "010":
            result += +Li2(-x) * LMUF * NC + 2 * Li2(-x) * LMUF * NC * x + 2 * Li2(-x) * LMUF * NC * pow(x, 2) - 1.0 / 4.0 * Li2(x) * LMUF * pow(NC, -1) + 1.0 / 2.0 * Li2(x) * LMUF * pow(NC, -1) * x + 5.0 / 4.0 * Li2(x) * LMUF * NC + 7.0 / 2.0 * Li2(x) * LMUF * NC * x + 1.0 / 2.0 * pow(ln(omx), 2) * LMUF * pow(NC, -1) - pow(ln(omx), 2) * LMUF * pow(NC, -1) * x + pow(ln(omx), 2) * LMUF * pow(NC, -1) * pow(x, 2) - pow(ln(omx), 2) * LMUF * NC + 2 * pow(ln(omx), 2) * LMUF * NC * x - 2 * pow(ln(omx), 2) * LMUF * NC * pow(x, 2) - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) + 9.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * x - 7.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) - 2.0 / 3.0 * ln(omx) * LMUF * NC * pow(x, -1) - 11.0 / 12.0 * ln(omx) * LMUF * NC - 53.0 / 12.0 * ln(omx) * LMUF * NC * x + 61.0 / 12.0 * ln(omx) * LMUF * NC * pow(x, 2) + 1.0 / 6.0 * ln(omx) * LMUF * NF - 1.0 / 3.0 * ln(omx) * LMUF * NF * x + 1.0 / 3.0 * ln(omx) * LMUF * NF * pow(x, 2) - ln(x) * ln(omx) * LMUF * pow(NC, -1) + 2 * ln(x) * ln(omx) * LMUF * pow(NC, -1) * x - 2 * ln(x) * ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) + 2 * ln(x) * ln(omx) * LMUF * NC - 4 * ln(x) * ln(omx) * LMUF * NC * x + 4 * ln(x) * ln(omx) * LMUF * NC * pow(x, 2) + 3.0 / 8.0 * ln(x) * LMUF * pow(NC, -1) - 9.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * x + 7.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * pow(x, 2) - 11.0 / 24.0 * ln(x) * LMUF * NC + 5.0 / 12.0 * ln(x) * LMUF * NC * x - 149.0 / 12.0 * ln(x) * LMUF * NC * pow(x, 2) - 1.0 / 6.0 * ln(x) * LMUF * NF + 1.0 / 3.0 * ln(x) * LMUF * NF * x - 1.0 / 3.0 * ln(x) * LMUF * NF * pow(x, 2) - 3.0 / 8.0 * LMUF * pow(NC, -1) - 1.0 / 24.0 * LMUF * pow(NC, -1) * pow(pi, 2) - 5.0 / 8.0 * LMUF * pow(NC, -1) * x + 1.0 / 12.0 * LMUF * pow(NC, -1) * x * pow(pi, 2) - 3.0 / 8.0 * LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 6.0 * LMUF * pow(NC, -1) * pow(x, 2) * pow(pi, 2) - 13.0 / 9.0 * LMUF * NC * pow(x, -1) + 59.0 / 24.0 * LMUF * NC + 1.0 / 24.0 * LMUF * NC * pow(pi, 2) - 181.0 / 24.0 * LMUF * NC * x - 3.0 / 4.0 * LMUF * NC * x * pow(pi, 2) + 533.0 / 72.0 * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * LMUF * NC * pow(x, 2) * pow(pi, 2) + 1.0 / 3.0 * LMUF * NF * x - 1.0 / 3.0 * LMUF * NF * pow(x, 2) + ln(x) * ln(1 + x) * LMUF * NC + 2 * ln(x) * ln(1 + x) * LMUF * NC * x + 2 * ln(x) * ln(1 + x) * LMUF * NC * pow(x, 2) + 1.0 / 4.0 * pow(ln(x), 2) * LMUF * pow(NC, -1) - 1.0 / 2.0 * pow(ln(x), 2) * LMUF * pow(NC, -1) * x + pow(ln(x), 2) * LMUF * pow(NC, -1) * pow(x, 2) + 3.0 / 4.0 * pow(ln(x), 2) * LMUF * NC + 7.0 / 2.0 * pow(ln(x), 2) * LMUF * NC * x - pow(ln(x), 2) * LMUF * NC * pow(x, 2)
            result_r0 = -1.0 / 2.0 * LMUF * pow(NC, -1) + 5.0 / 4.0 * LMUF * pow(NC, -1) * x - 3.0 / 4.0 * LMUF * pow(NC, -1) * pow(x, 2) - 2.0 / 3.0 * LMUF * NC * pow(x, -1) - 11.0 / 12.0 * LMUF * NC - 41.0 / 12.0 * LMUF * NC * x + 49.0 / 12.0 * LMUF * NC * pow(x, 2) + 1.0 / 6.0 * LMUF * NF - 1.0 / 3.0 * LMUF * NF * x + 1.0 / 3.0 * LMUF * NF * pow(x, 2) - 1.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x - ln(x) * LMUF * pow(NC, -1) * pow(x, 2) - 3.0 / 4.0 * ln(x) * LMUF * NC - 9.0 / 2.0 * ln(x) * LMUF * NC * x + ln(x) * LMUF * NC * pow(x, 2) + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) - ln(omx) * LMUF * pow(NC, -1) * x + ln(omx) * LMUF * pow(NC, -1) * pow(x, 2) - 3.0 / 2.0 * ln(omx) * LMUF * NC + 3 * ln(omx) * LMUF * NC * x - 3 * ln(omx) * LMUF * NC * pow(x, 2)
            result_r1 = +1.0 / 2.0 * LMUF * pow(NC, -1) - LMUF * pow(NC, -1) * x + LMUF * pow(NC, -1) * pow(x, 2) - 1.0 / 2.0 * LMUF * NC + LMUF * NC * x - LMUF * NC * pow(x, 2)
            result += result_r0 * ln(1 - z) + result_r1 * (1 / 2) * ln(1 - z) * ln(1 - z)
        elif orders == "100":
            result += +11.0 / 6.0 * LMUR * NC * x - 11.0 / 6.0 * LMUR * NC * pow(x, 2) - 1.0 / 3.0 * LMUR * NF * x + 1.0 / 3.0 * LMUR * NF * pow(x, 2) + 11.0 / 12.0 * ln(omx) * LMUR * NC - 11.0 / 6.0 * ln(omx) * LMUR * NC * x + 11.0 / 6.0 * ln(omx) * LMUR * NC * pow(x, 2) - 1.0 / 6.0 * ln(omx) * LMUR * NF + 1.0 / 3.0 * ln(omx) * LMUR * NF * x - 1.0 / 3.0 * ln(omx) * LMUR * NF * pow(x, 2) - 11.0 / 12.0 * ln(x) * LMUR * NC + 11.0 / 6.0 * ln(x) * LMUR * NC * x - 11.0 / 6.0 * ln(x) * LMUR * NC * pow(x, 2) + 1.0 / 6.0 * ln(x) * LMUR * NF - 1.0 / 3.0 * ln(x) * LMUR * NF * x + 1.0 / 3.0 * ln(x) * LMUR * NF * pow(x, 2)
            result_r0 = +11.0 / 12.0 * LMUR * NC - 11.0 / 6.0 * LMUR * NC * x + 11.0 / 6.0 * LMUR * NC * pow(x, 2) - 1.0 / 6.0 * LMUR * NF + 1.0 / 3.0 * LMUR * NF * x - 1.0 / 3.0 * LMUR * NF * pow(x, 2)
            result += result_r0 * ln(1 - z)
        elif orders == "011":
            result += -3.0 / 8.0 * LMUA * LMUF * pow(NC, -1) + 3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * x - 3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * pow(x, 2) + 3.0 / 8.0 * LMUA * LMUF * NC - 3.0 / 4.0 * LMUA * LMUF * NC * x + 3.0 / 4.0 * LMUA * LMUF * NC * pow(x, 2)
            result_r0 = -1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) + LMUA * LMUF * pow(NC, -1) * x - LMUA * LMUF * pow(NC, -1) * pow(x, 2) + 1.0 / 2.0 * LMUA * LMUF * NC - LMUA * LMUF * NC * x + LMUA * LMUF * NC * pow(x, 2)
            result += result_r0 * ln(1 - z)
        elif orders == "020":
            result += +1.0 / 16.0 * pow(LMUF, 2) * pow(NC, -1) - 1.0 / 4.0 * pow(LMUF, 2) * pow(NC, -1) * x + 1.0 / 3.0 * pow(LMUF, 2) * NC * pow(x, -1) + 53.0 / 48.0 * pow(LMUF, 2) * NC + 5.0 / 12.0 * pow(LMUF, 2) * NC * x - 3.0 / 4.0 * pow(LMUF, 2) * NC * pow(x, 2) - 1.0 / 6.0 * pow(LMUF, 2) * NF + 1.0 / 3.0 * pow(LMUF, 2) * NF * x - 1.0 / 3.0 * pow(LMUF, 2) * NF * pow(x, 2) + 1.0 / 8.0 * ln(x) * pow(LMUF, 2) * pow(NC, -1) - 1.0 / 4.0 * ln(x) * pow(LMUF, 2) * pow(NC, -1) * x + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * pow(NC, -1) * pow(x, 2) + 3.0 / 8.0 * ln(x) * pow(LMUF, 2) * NC + 9.0 / 4.0 * ln(x) * pow(LMUF, 2) * NC * x - 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * NC * pow(x, 2) - 1.0 / 4.0 * ln(omx) * pow(LMUF, 2) * pow(NC, -1) + 1.0 / 2.0 * ln(omx) * pow(LMUF, 2) * pow(NC, -1) * x - 1.0 / 2.0 * ln(omx) * pow(LMUF, 2) * pow(NC, -1) * pow(x, 2) + 3.0 / 4.0 * ln(omx) * pow(LMUF, 2) * NC - 3.0 / 2.0 * ln(omx) * pow(LMUF, 2) * NC * x + 3.0 / 2.0 * ln(omx) * pow(LMUF, 2) * NC * pow(x, 2)
        elif orders == "110":
            result += -11.0 / 12.0 * LMUF * LMUR * NC + 11.0 / 6.0 * LMUF * LMUR * NC * x - 11.0 / 6.0 * LMUF * LMUR * NC * pow(x, 2) + 1.0 / 6.0 * LMUF * LMUR * NF - 1.0 / 3.0 * LMUF * LMUR * NF * x + 1.0 / 3.0 * LMUF * LMUR * NF * pow(x, 2)
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2q_eqp(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -5.0 / 8.0 * pow(x, -1) * pow(z, -1) * CF + 5.0 / 8.0 * pow(x, -1) * CF - 5.0 / 8.0 * pow(z, -2) * CF - 15.0 / 4.0 * pow(z, -1) * CF + 15.0 / 4.0 * CF + 5.0 / 8.0 * z * CF + 5.0 / 8.0 * x * pow(z, -2) * CF + 15.0 / 4.0 * x * pow(z, -1) * CF - 15.0 / 4.0 * x * CF - 5.0 / 8.0 * x * z * CF + 5.0 / 8.0 * pow(x, 2) * pow(z, -1) * CF - 5.0 / 8.0 * pow(x, 2) * CF + 5.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -2) * sqrtxz3 * CF + 9.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF + 9.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 5.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, -2) * sqrtxz3 * CF + 13.0 / 2.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 5.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 9.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF + 9.0 / 4.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF + 5.0 / 8.0 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, 2) * sqrtxz3 * CF - 5.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 9.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF - 9.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 5.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - 13.0 / 2.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 5.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 9.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 4.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 8.0 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, 2) * sqrtxz3 * CF - 5.0 / 16.0 * InvTanInt(-sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 9.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF
                result += -9.0 / 8.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 5.0 / 16.0 * InvTanInt(-sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - 13.0 / 4.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 5.0 / 16.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 9.0 / 8.0 * InvTanInt(-sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 8.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 16.0 * InvTanInt(-sqrtxz3) * pow(x, 2) * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(z * sqrtxz3) * pow(x, -2) * sqrtxz3 * CF - 9.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF - 9.0 / 4.0 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(z * sqrtxz3) * pow(z, -2) * sqrtxz3 * CF - 13.0 / 2.0 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 9.0 / 4.0 * InvTanInt(z * sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF - 9.0 / 4.0 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF - 5.0 / 8.0 * InvTanInt(z * sqrtxz3) * pow(x, 2) * sqrtxz3 * CF + 5.0 / 16.0 * InvTanInt(sqrtxz3) * pow(x, -2) * sqrtxz3 * CF + 9.0 / 8.0 * InvTanInt(sqrtxz3) * pow(x, -1) * pow(z, -1) * sqrtxz3 * CF + 9.0 / 8.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 5.0 / 16.0 * InvTanInt(sqrtxz3) * pow(z, -2) * sqrtxz3 * CF + 13.0 / 4.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF + 5.0 / 16.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 9.0 / 8.0 * InvTanInt(sqrtxz3) * x * pow(z, -1) * sqrtxz3 * CF + 9.0 / 8.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 5.0 / 16.0 * InvTanInt(sqrtxz3) * pow(x, 2) * sqrtxz3 * CF + 5.0 / 16.0 * ln(x) * pow(x, -1) * pow(z, -1) * CF - 5.0 / 16.0 * ln(x) * pow(x, -1) * CF - 5.0 / 16.0 * ln(x) * pow(z, -2) * CF - 17.0 / 8.0 * ln(x) * pow(z, -1) * CF + 17.0 / 8.0 * ln(x) * CF + 5.0 / 16.0 * ln(x) * z * CF
                result += -5.0 / 16.0 * ln(x) * x * pow(z, -2) * CF - 17.0 / 8.0 * ln(x) * x * pow(z, -1) * CF + 17.0 / 8.0 * ln(x) * x * CF + 5.0 / 16.0 * ln(x) * x * z * CF + 5.0 / 16.0 * ln(x) * pow(x, 2) * pow(z, -1) * CF - 5.0 / 16.0 * ln(x) * pow(x, 2) * CF - 2 * ln(x) * ln(z) * pow(z, -1) * CF - 2 * ln(x) * ln(z) * CF - 2 * ln(x) * ln(z) * x * pow(z, -1) * CF - 2 * ln(x) * ln(z) * x * CF - 5.0 / 16.0 * ln(z) * pow(x, -1) * pow(z, -1) * CF - 5.0 / 16.0 * ln(z) * pow(x, -1) * CF + 5.0 / 16.0 * ln(z) * pow(z, -2) * CF - 17.0 / 8.0 * ln(z) * pow(z, -1) * CF - 17.0 / 8.0 * ln(z) * CF + 5.0 / 16.0 * ln(z) * z * CF - 5.0 / 16.0 * ln(z) * x * pow(z, -2) * CF + 17.0 / 8.0 * ln(z) * x * pow(z, -1) * CF + 17.0 / 8.0 * ln(z) * x * CF - 5.0 / 16.0 * ln(z) * x * z * CF + 5.0 / 16.0 * ln(z) * pow(x, 2) * pow(z, -1) * CF + 5.0 / 16.0 * ln(z) * pow(x, 2) * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2qp_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -5.0 / 36.0 * pow(z, -1) * CF - 1.0 / 3.0 * CF - 1.0 / 6.0 * pow(pi, 2) * CF - 23.0 / 12.0 * z * CF + 43.0 / 18.0 * pow(z, 2) * CF + 19.0 / 36.0 * x * pow(z, -1) * CF + 8.0 / 3.0 * x * CF - 1.0 / 6.0 * x * pow(pi, 2) * CF + 13.0 / 12.0 * x * z * CF - 1.0 / 3.0 * x * z * pow(pi, 2) * CF - 77.0 / 18.0 * x * pow(z, 2) * CF - 4.0 / 3.0 * ln(x) * pow(z, -1) * CF * pow(omx, -1) + 2.0 / 3.0 * ln(x) * pow(z, -1) * CF - 5.0 / 2.0 * ln(x) * CF * pow(omx, -1) + ln(x) * CF + 5.0 / 2.0 * ln(x) * z * CF * pow(omx, -1) - 3 * ln(x) * z * CF + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF * pow(omx, -1) + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF + 2.0 / 3.0 * ln(x) * x * pow(z, -1) * CF + 3 * ln(x) * x * CF - ln(x) * x * z * CF - 8.0 / 3.0 * ln(x) * x * pow(z, 2) * CF - 3 * ln(x) * ln(z) * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * CF - 3 * ln(x) * ln(z) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * x * CF + 4 * ln(x) * ln(z) * x * z * CF - 1.0 / 3.0 * ln(z) * pow(z, -1) * CF - 3.0 / 2.0 * ln(z) * CF - 1.0 / 2.0 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF - 1.0 / 3.0 * ln(z) * x * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * x * CF + 7.0 / 2.0 * ln(z) * x * z * CF + 4.0 / 3.0 * ln(z) * x * pow(z, 2) * CF - pow(ln(z), 2) * CF - pow(ln(z), 2) * x * CF - 2 * pow(ln(z), 2) * x * z * CF - ln(z) * ln(omx) * CF - ln(z) * ln(omx) * x * CF - 2 * ln(z) * ln(omx) * x * z * CF - 1.0 / 3.0 * ln(omx) * pow(z, -1) * CF - 1.0 / 2.0 * ln(omx) * CF + 3.0 / 2.0 * ln(omx) * z * CF - 2.0 / 3.0 * ln(omx) * pow(z, 2) * CF - 1.0 / 3.0 * ln(omx) * x * pow(z, -1) * CF - 3.0 / 2.0 * ln(omx) * x * CF + 1.0 / 2.0 * ln(omx) * x * z * CF + 4.0 / 3.0 * ln(omx) * x * pow(z, 2) * CF
                result += -1.0 / 3.0 * ln(omz) * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * CF + 3.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF - 1.0 / 3.0 * ln(omz) * x * pow(z, -1) * CF - 3.0 / 2.0 * ln(omz) * x * CF + 1.0 / 2.0 * ln(omz) * x * z * CF + 4.0 / 3.0 * ln(omz) * x * pow(z, 2) * CF + Li2(z) * CF + Li2(z) * x * CF + 2 * Li2(z) * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +1.0 / 3.0 * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * LMUA * CF - 3.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF + 1.0 / 3.0 * LMUA * x * pow(z, -1) * CF + 3.0 / 2.0 * LMUA * x * CF - 1.0 / 2.0 * LMUA * x * z * CF - 4.0 / 3.0 * LMUA * x * pow(z, 2) * CF + ln(z) * LMUA * CF + ln(z) * LMUA * x * CF + 2 * ln(z) * LMUA * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        if orders == "000":
            result_0r = -7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF - Li2(z) * CF - Li2(z) * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + ln(z) * CF + ln(z) * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "001":
            result_0r = -2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF
            result += result_0r * 1 / (1 - x)
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        if orders == "000":
            result_0r = -7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF - Li2(z) * CF - Li2(z) * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + ln(z) * CF + ln(z) * z * CF
            result += -107.0 / 108.0 * pow(z, -1) * CF - 11.0 / 9.0 * CF + 2 * zeta3 * CF - 1.0 / 6.0 * pow(pi, 2) * CF - 4.0 / 9.0 * z * CF + 2 * z * zeta3 * CF - 1.0 / 4.0 * z * pow(pi, 2) * CF + 287.0 / 108.0 * pow(z, 2) * CF - 7.0 / 18.0 * ln(z) * pow(z, -1) * CF - 5 * ln(z) * CF + 1.0 / 6.0 * ln(z) * pow(pi, 2) * CF - 9.0 / 2.0 * ln(z) * z * CF + 1.0 / 6.0 * ln(z) * z * pow(pi, 2) * CF - 31.0 / 18.0 * ln(z) * pow(z, 2) * CF + 1.0 / 3.0 * pow(ln(z), 2) * pow(z, -1) * CF - 1.0 / 8.0 * pow(ln(z), 2) * CF - 5.0 / 8.0 * pow(ln(z), 2) * z * CF + 5.0 / 12.0 * pow(ln(z), 3) * CF + 5.0 / 12.0 * pow(ln(z), 3) * z * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * z * CF - 7.0 / 18.0 * ln(omz) * pow(z, -1) * CF - 10.0 / 3.0 * ln(omz) * CF + 1.0 / 6.0 * ln(omz) * pow(pi, 2) * CF + 7.0 / 3.0 * ln(omz) * z * CF + 1.0 / 6.0 * ln(omz) * z * pow(pi, 2) * CF + 25.0 / 18.0 * ln(omz) * pow(z, 2) * CF + 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(ln(omz), 2) * CF - 1.0 / 4.0 * pow(ln(omz), 2) * z * CF - 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, 2) * CF - ln(omz) * Li2(z) * CF - ln(omz) * Li2(z) * z * CF - Li3(1 - z) * CF - Li3(1 - z) * z * CF - 2 * Li3(z) * CF - 2 * Li3(z) * z * CF - 2.0 / 3.0 * Li2(z) * pow(z, -1) * CF + 1.0 / 2.0 * Li2(z) * CF + 2 * Li2(z) * z * CF + 2.0 / 3.0 * Li2(z) * pow(z, 2) * CF
            result += result_0r * ln(1 - x) + result_1r * (1 / 2) * ln(1 - x) * ln(1 - x)
        elif orders == "001":
            result_0r = -2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF
            result += +7.0 / 18.0 * LMUA * pow(z, -1) * CF + 10.0 / 3.0 * LMUA * CF - 1.0 / 6.0 * LMUA * pow(pi, 2) * CF - 7.0 / 3.0 * LMUA * z * CF - 1.0 / 6.0 * LMUA * z * pow(pi, 2) * CF - 25.0 / 18.0 * LMUA * pow(z, 2) * CF - 2.0 / 3.0 * ln(z) * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * ln(z) * LMUA * CF + 2 * ln(z) * LMUA * z * CF + 2.0 / 3.0 * ln(z) * LMUA * pow(z, 2) * CF - pow(ln(z), 2) * LMUA * CF - pow(ln(z), 2) * LMUA * z * CF - 2.0 / 3.0 * ln(omz) * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * LMUA * CF + 1.0 / 2.0 * ln(omz) * LMUA * z * CF + 2.0 / 3.0 * ln(omz) * LMUA * pow(z, 2) * CF + Li2(z) * LMUA * CF + Li2(z) * LMUA * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "002":
            result += +1.0 / 3.0 * pow(LMUA, 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(LMUA, 2) * CF - 1.0 / 4.0 * pow(LMUA, 2) * z * CF - 1.0 / 3.0 * pow(LMUA, 2) * pow(z, 2) * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * z * CF
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2qp_eqp(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 13.0 / 9.0 * pow(x, -1) * pow(z, -1) * CF - 26.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * pow(z, -1) * CF + 1.0 / 6.0 * pow(z, -1) * pow(pi, 2) * CF - 7.0 / 3.0 * CF - 1.0 / 3.0 * pow(pi, 2) * CF + 10 * z * CF + 17.0 / 6.0 * x * pow(z, -1) * CF + 1.0 / 6.0 * x * pow(z, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * x * CF - 1.0 / 3.0 * x * pow(pi, 2) * CF - 10 * x * z * CF - 22.0 / 9.0 * pow(x, 2) * pow(z, -1) * CF + 44.0 / 9.0 * pow(x, 2) * CF + 1.0 / 4.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * pow(x, -1) * CF + ln(x) * pow(z, -1) * CF - 1.0 / 4.0 * ln(x) * pow(poly2, -1) * CF - 19.0 / 4.0 * ln(x) * CF + 5 * ln(x) * z * CF + 3 * ln(x) * x * pow(z, -1) * CF - 35.0 / 4.0 * ln(x) * x * CF + 5 * ln(x) * x * z * CF + 2 * ln(x) * pow(x, 2) * pow(z, -1) * CF - 17.0 / 4.0 * ln(x) * pow(x, 2) * CF - 1.0 / 4.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 7.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 10 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 10 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF
                result += -7.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 10 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 10 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - pow(ln(x), 2) * pow(z, -1) * CF + 2 * pow(ln(x), 2) * CF - pow(ln(x), 2) * x * pow(z, -1) * CF + 2 * pow(ln(x), 2) * x * CF + ln(x) * ln(z) * pow(z, -1) * CF - ln(x) * ln(z) * CF + ln(x) * ln(z) * x * pow(z, -1) * CF - ln(x) * ln(z) * x * CF + ln(x) * ln(omz) * pow(z, -1) * CF
                result += -2 * ln(x) * ln(omz) * CF + ln(x) * ln(omz) * x * pow(z, -1) * CF - 2 * ln(x) * ln(omz) * x * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * pow(z, -1) * CF + 1.0 / 4.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * CF * pow(omz, -1) - 19.0 / 12.0 * ln(z) * pow(x, -1) * CF + 1.0 / 2.0 * ln(z) * pow(z, -1) * CF + 1.0 / 4.0 * ln(z) * pow(poly2, -1) * CF - ln(z) * CF * pow(omz, -1) - 5.0 / 4.0 * ln(z) * CF + 5 * ln(z) * z * CF - 1.0 / 2.0 * ln(z) * x * pow(z, -1) * CF + ln(z) * x * CF * pow(omz, -1) + 5.0 / 4.0 * ln(z) * x * CF - 5 * ln(z) * x * z * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * pow(z, -1) * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * CF * pow(omz, -1) + 19.0 / 12.0 * ln(z) * pow(x, 2) * CF - 1.0 / 4.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * pow(z, -1) * CF - ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * pow(z, -1) * CF + ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 2.0 / 3.0 * ln(omz) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omz) * pow(z, -1) * CF - ln(omz) * CF - 1.0 / 2.0 * ln(omz) * x * pow(z, -1) * CF + ln(omz) * x * CF - 2.0 / 3.0 * ln(omz) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omz) * pow(x, 2) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF
                result += -1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF
                result += -10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 10 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF
                result += +1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 10 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 10 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 7.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - Li2(x) * pow(z, -1) * CF + 2 * Li2(x) * CF - Li2(x) * x * pow(z, -1) * CF + 2 * Li2(x) * x * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -2.0 / 3.0 * LMUF * pow(x, -1) * pow(z, -1) * CF + 4.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * pow(z, -1) * CF + LMUF * CF + 1.0 / 2.0 * LMUF * x * pow(z, -1) * CF - LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * pow(z, -1) * CF - 4.0 / 3.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * pow(z, -1) * CF + 2 * ln(x) * LMUF * CF - ln(x) * LMUF * x * pow(z, -1) * CF + 2 * ln(x) * LMUF * x * CF
        return result
    elif rsl == "rs":
        result = 0
        if orders == "000":
            result_r0 = 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF - Li2(x) * CF - Li2(x) * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + ln(x) * CF + ln(x) * x * CF
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "010":
            result_r0 = -2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF
            result += result_r0 * 1 / (1 - z)
        return result
    elif rsl == "rl":
        result = 0
        if orders == "000":
            result_r0 = 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF - Li2(x) * CF - Li2(x) * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + ln(x) * CF + ln(x) * x * CF
            result += 52.0 / 27.0 * pow(x, -1) * CF - 41.0 / 36.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 36.0 * x * CF + 1.0 / 2.0 * x * pow(pi, 2) * CF - 34.0 / 27.0 * pow(x, 2) * CF + 1.0 / 3.0 * pow(x, 2) * pow(pi, 2) * CF + 23.0 / 6.0 * ln(x) * CF - 1.0 / 3.0 * ln(x) * pow(pi, 2) * CF - 5.0 / 6.0 * ln(x) * x * CF - 1.0 / 3.0 * ln(x) * x * pow(pi, 2) * CF + 38.0 / 9.0 * ln(x) * pow(x, 2) * CF - 13.0 / 8.0 * pow(ln(x), 2) * CF - 13.0 / 8.0 * pow(ln(x), 2) * x * CF - 5.0 / 3.0 * pow(ln(x), 2) * pow(x, 2) * CF + 5.0 / 12.0 * pow(ln(x), 3) * CF + 5.0 / 12.0 * pow(ln(x), 3) * x * CF - 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, -1) * CF - 1.0 / 2.0 * ln(x) * ln(omx) * CF + 1.0 / 2.0 * ln(x) * ln(omx) * x * CF + 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, 2) * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * x * CF + ln(x) * Li2(x) * CF + ln(x) * Li2(x) * x * CF + 13.0 / 9.0 * ln(omx) * pow(x, -1) * CF - 11.0 / 6.0 * ln(omx) * CF + 1.0 / 6.0 * ln(omx) * pow(pi, 2) * CF + 17.0 / 6.0 * ln(omx) * x * CF + 1.0 / 6.0 * ln(omx) * x * pow(pi, 2) * CF - 22.0 / 9.0 * ln(omx) * pow(x, 2) * CF + 1.0 / 3.0 * pow(ln(omx), 2) * pow(x, -1) * CF + 1.0 / 4.0 * pow(ln(omx), 2) * CF - 1.0 / 4.0 * pow(ln(omx), 2) * x * CF - 1.0 / 3.0 * pow(ln(omx), 2) * pow(x, 2) * CF - ln(omx) * Li2(x) * CF - ln(omx) * Li2(x) * x * CF - Li3(1 - x) * CF - Li3(1 - x) * x * CF - 2.0 / 3.0 * Li2(x) * pow(x, -1) * CF - 3.0 / 2.0 * Li2(x) * CF - 5.0 / 2.0 * Li2(x) * x * CF - 4.0 / 3.0 * Li2(x) * pow(x, 2) * CF
            result += result_r0 * ln(1 - z) + result_r1 * (1 / 2) * ln(1 - z) * ln(1 - z)
        elif orders == "010":
            result_r0 = -2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF
            result += -13.0 / 9.0 * LMUF * pow(x, -1) * CF + 11.0 / 6.0 * LMUF * CF - 1.0 / 6.0 * LMUF * pow(pi, 2) * CF - 17.0 / 6.0 * LMUF * x * CF - 1.0 / 6.0 * LMUF * x * pow(pi, 2) * CF + 22.0 / 9.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * CF - 3 * ln(x) * LMUF * x * CF - 2 * ln(x) * LMUF * pow(x, 2) * CF + pow(ln(x), 2) * LMUF * CF + pow(ln(x), 2) * LMUF * x * CF - 2.0 / 3.0 * ln(omx) * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * ln(omx) * LMUF * CF + 1.0 / 2.0 * ln(omx) * LMUF * x * CF + 2.0 / 3.0 * ln(omx) * LMUF * pow(x, 2) * CF + Li2(x) * LMUF * CF + Li2(x) * LMUF * x * CF
            result += result_r0 * ln(1 - z)
        elif orders == "020":
            result += +1.0 / 3.0 * pow(LMUF, 2) * pow(x, -1) * CF + 1.0 / 4.0 * pow(LMUF, 2) * CF - 1.0 / 4.0 * pow(LMUF, 2) * x * CF - 1.0 / 3.0 * pow(LMUF, 2) * pow(x, 2) * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * x * CF
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2qp_es(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF + 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF + 1.0 / 3.0 * pow(x, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF + 4.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 6 * CF + 6 * pow(rln2, 2) * CF * pow(omx, -1) + 6 * sqrtxz1 * rln2 * CF * pow(omx, -1) - 5.0 / 6.0 * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 3.0 * pow(pi, 2) * CF - 5 * z * CF + 4 * z * pow(rln2, 2) * CF * pow(omx, -1) - 8 * z * pow(rln2, 2) * CF + 5.0 / 3.0 * z * pow(pi, 2) * CF * pow(omx, -1) + 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * z * pow(pi, 2) * CF + 16 * pow(z, 2) * pow(rln2, 2) * CF * pow(omx, -1) - 2 * pow(z, 2) * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - x * CF - 4 * x * pow(rln2, 2) * CF - 4 * x * sqrtxz1 * rln2 * CF + 1.0 / 3.0 * x * pow(pi, 2) * CF + x * z * CF - 2.0 / 3.0 * x * z * pow(pi, 2) * CF - 16 * x * pow(z, 2) * pow(rln2, 2) * CF + 4.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF - 23 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF + 23 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF
                result += -3.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF + 23.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF - 23.0 / 2.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF - 8 * ln(1 + sqrtxz1 - z) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * rln2 * CF - 6 * ln(1 + sqrtxz1 - z) * sqrtxz1 * CF * pow(omx, -1) + 12 * ln(1 + sqrtxz1 - z) * z * rln2 * CF - 24 * ln(1 + sqrtxz1 - z) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 6 * ln(1 + sqrtxz1 - z) * x * rln2 * CF + 4 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF - 4 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF + 24 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF + 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF * pow(omx, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1)
                result += -4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 4 * ln(1 + sqrtxz1 + z) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 + z) * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * z * rln2 * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 + z) * z * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 + z) * x * rln2 * CF + 4 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF + 4 * ln(x) * pow(x, -2) * CF * pow(opx, -1) - 4 * ln(x) * pow(x, -2) * CF - 8 * ln(x) * pow(x, -2) * z * CF * pow(opx, -1) + 8 * ln(x) * pow(x, -2) * z * CF + 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF - 1.0 / 4.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF + 17.0 / 4.0 * ln(x) * pow(x, -1) * CF - 8 * ln(x) * pow(x, -1) * z * CF + 16 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 1.0 / 4.0 * ln(x) * pow(poly2, -1) * CF - 2 * ln(x) * CF * pow(omx, -1) - 4 * ln(x) * CF * pow(opx, -1) - 1.0 / 4.0 * ln(x) * CF + 5 * ln(x) * rln2 * CF * pow(omx, -1) + 2 * ln(x) * rln2 * CF + 3 * ln(x) * sqrtxz1 * CF * pow(omx, -1) + 3 * ln(x) * z * CF * pow(omx, -1) + 8 * ln(x) * z * CF * pow(opx, -1) - 1.0 / 2.0 * ln(x) * z * CF - 2 * ln(x) * z * rln2 * CF * pow(omx, -1) - 8 * ln(x) * z * rln2 * CF + 16 * ln(x) * pow(z, 2) * rln2 * CF * pow(omx, -1) + ln(x) * x * CF * pow(xmz, -1) + 11.0 / 4.0 * ln(x) * x * CF - 4 * ln(x) * x * rln2 * CF - 2 * ln(x) * x * sqrtxz1 * CF
                result += -5.0 / 2.0 * ln(x) * x * z * CF + 4 * ln(x) * x * z * rln2 * CF - 16 * ln(x) * x * pow(z, 2) * rln2 * CF - 2 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 7.0 / 4.0 * ln(x) * pow(x, 2) * CF + 1.0 / 4.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF + 2 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) - 1.0 / 4.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 7.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 6 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 6 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +7.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 6 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 6 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 3 * ln(x) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF
                result += -ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * x * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x) * CF + 8 * ln(x) * ln(1 + x) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x) * z * CF - 8 * ln(x) * ln(1 + x) * pow(z, 2) * CF * pow(opx, -1) - 6 * ln(x) * ln(1 + x) * x * CF + 12 * ln(x) * ln(1 + x) * x * z * CF - 8 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF - ln(x) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(x, -2) * CF + 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF - ln(x) * ln(1 + x * z) * pow(x, -1) * CF + 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * CF * pow(omx, -1) - ln(x) * ln(1 + x * z) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1)
                result += -2 * ln(x) * ln(1 + x * z) * x * CF - 8 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF - 2 * ln(x) * ln(z + x) * CF * pow(omx, -1) + ln(x) * ln(z + x) * CF - 4 * ln(x) * ln(z + x) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z + x) * z * CF - 4 * ln(x) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) + ln(x) * ln(z + x) * x * CF + 2 * ln(x) * ln(z + x) * x * z * CF + 4 * ln(x) * ln(z + x) * x * pow(z, 2) * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF + 3 * pow(ln(x), 2) * pow(x, -2) * z * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(x, -2) * z * CF - 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -1) * CF + 3 * pow(ln(x), 2) * pow(x, -1) * z * CF - 6 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * pow(ln(x), 2) * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(x), 2) * CF * pow(opx, -1) + 2 * pow(ln(x), 2) * CF + 4 * pow(ln(x), 2) * z * CF * pow(omx, -1) - 5 * pow(ln(x), 2) * z * CF * pow(opx, -1) - 4 * pow(ln(x), 2) * z * CF - 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * x * CF - 6 * pow(ln(x), 2) * x * z * CF + 4 * pow(ln(x), 2) * x * pow(z, 2) * CF + ln(x) * ln(z) * pow(x, -2) * CF * pow(opx, -1) - ln(x) * ln(z) * pow(x, -2) * CF - 2 * ln(x) * ln(z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(x, -2) * z * CF + 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF + ln(x) * ln(z) * pow(x, -1) * CF - 2 * ln(x) * ln(z) * pow(x, -1) * z * CF + 4 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * CF * pow(omx, -1)
                result += +ln(x) * ln(z) * CF * pow(opx, -1) + ln(x) * ln(z) * CF - 4 * ln(x) * ln(z) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(z) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * z * CF + 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * ln(z) * x * CF + 2 * ln(x) * ln(z) * x * z * CF - 4 * ln(x) * ln(z) * x * pow(z, 2) * CF - 2 * ln(x) * ln(omx) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, -2) * CF + 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF - 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF - 2 * ln(x) * ln(omx) * pow(x, -1) * CF + 4 * ln(x) * ln(omx) * pow(x, -1) * z * CF - 8 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 3 * ln(x) * ln(omx) * CF * pow(omx, -1) + 2 * ln(x) * ln(omx) * CF * pow(opx, -1) - 6 * ln(x) * ln(omx) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(omx) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(omx) * x * CF + 4 * ln(x) * ln(omx) * x * z * CF - 8 * ln(x) * ln(omx) * x * pow(z, 2) * CF + 2 * ln(x) * ln(opx) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(x, -2) * CF - 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF + 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF + 2 * ln(x) * ln(opx) * pow(x, -1) * CF - 4 * ln(x) * ln(opx) * pow(x, -1) * z * CF + 8 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * CF - 4 * ln(x) * ln(opx) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * z * CF + 8 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1)
                result += +2 * ln(x) * ln(opx) * x * CF - 4 * ln(x) * ln(opx) * x * z * CF + 8 * ln(x) * ln(opx) * x * pow(z, 2) * CF - 1.0 / 4.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(z) * pow(x, -1) * CF - 1.0 / 4.0 * ln(z) * pow(poly2, -1) * CF - 3 * ln(z) * CF * pow(omx, -1) + 17.0 / 4.0 * ln(z) * CF + 7 * ln(z) * rln2 * CF * pow(omx, -1) - 2 * ln(z) * rln2 * CF + 3 * ln(z) * sqrtxz1 * CF * pow(omx, -1) - 3 * ln(z) * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(z) * z * CF + 10 * ln(z) * z * rln2 * CF * pow(omx, -1) - 8 * ln(z) * z * rln2 * CF + 16 * ln(z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - ln(z) * x * CF * pow(xmz, -1) - 1.0 / 4.0 * ln(z) * x * CF - 4 * ln(z) * x * rln2 * CF - 2 * ln(z) * x * sqrtxz1 * CF + 5.0 / 2.0 * ln(z) * x * z * CF - 4 * ln(z) * x * z * rln2 * CF - 16 * ln(z) * x * pow(z, 2) * rln2 * CF + 2 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) + 7.0 / 4.0 * ln(z) * pow(x, 2) * CF + 1.0 / 4.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF - 2 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 4.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF - 3 * ln(z) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1)
                result += -ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * x * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - ln(z) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF - ln(z) * ln(1 + x * z) * pow(x, -1) * CF + 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * CF * pow(omx, -1) - ln(z) * ln(1 + x * z) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1)
                result += -2 * ln(z) * ln(1 + x * z) * x * CF - 8 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF + 2 * ln(z) * ln(z + x) * CF * pow(omx, -1) - ln(z) * ln(z + x) * CF + 4 * ln(z) * ln(z + x) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(z + x) * z * CF + 4 * ln(z) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) - ln(z) * ln(z + x) * x * CF - 2 * ln(z) * ln(z + x) * x * z * CF - 4 * ln(z) * ln(z + x) * x * pow(z, 2) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF - pow(ln(z), 2) * pow(x, -2) * z * CF * pow(opx, -1) + pow(ln(z), 2) * pow(x, -2) * z * CF + 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -1) * CF - pow(ln(z), 2) * pow(x, -1) * z * CF + 2 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - pow(ln(z), 2) * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * CF * pow(opx, -1) - pow(ln(z), 2) * CF + 2 * pow(ln(z), 2) * z * CF * pow(omx, -1) - pow(ln(z), 2) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * z * CF - 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * x * CF - 4 * pow(ln(z), 2) * x * z * CF + 4 * pow(ln(z), 2) * x * pow(z, 2) * CF + ln(z) * ln(omz) * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * x * CF + 4 * ln(z) * ln(omz) * x * z * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF
                result += +9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF - 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF
                result += -6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF - Li2(1 - x * pow(z, -1)) * CF * pow(omx, -1) + 2 * Li2(1 - x * pow(z, -1)) * z * CF * pow(omx, -1) + 2 * Li2(1 - x * pow(z, -1)) * x * CF - 4 * Li2(1 - x * pow(z, -1)) * x * z * CF - Li2(-x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, -2) * CF + 2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1)
                result += -2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF - Li2(-x * pow(z, -1)) * pow(x, -1) * CF + 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * CF * pow(omx, -1) - Li2(-x * pow(z, -1)) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * CF - 4 * Li2(-x * pow(z, -1)) * z * CF * pow(omx, -1) + 2 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(omx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * x * z * CF + 2 * Li2(-x) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(x, -2) * CF - 4 * Li2(-x) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(-x) * pow(x, -2) * z * CF + 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF + 2 * Li2(-x) * pow(x, -1) * CF - 4 * Li2(-x) * pow(x, -1) * z * CF + 8 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x) * CF * pow(opx, -1) - 4 * Li2(-x) * CF + 4 * Li2(-x) * z * CF * pow(opx, -1) + 8 * Li2(-x) * z * CF - 4 * Li2(-x) * x * CF + 8 * Li2(-x) * x * z * CF - Li2(-x * z) * pow(x, -2) * CF * pow(opx, -1) + Li2(-x * z) * pow(x, -2) * CF + 2 * Li2(-x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(x, -2) * z * CF - 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF - Li2(-x * z) * pow(x, -1) * CF + 2 * Li2(-x * z) * pow(x, -1) * z * CF - 4 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += +2 * Li2(-x * z) * CF * pow(omx, -1) - Li2(-x * z) * CF * pow(opx, -1) + 4 * Li2(-x * z) * z * CF * pow(omx, -1) + 2 * Li2(-x * z) * z * CF * pow(opx, -1) - 4 * Li2(-x * z) * z * CF + 4 * Li2(-x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x * z) * x * CF - 8 * Li2(-x * z) * x * pow(z, 2) * CF - 2 * Li2(x) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(x) * pow(x, -2) * CF + 4 * Li2(x) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(x) * pow(x, -2) * z * CF - 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF - 2 * Li2(x) * pow(x, -1) * CF + 4 * Li2(x) * pow(x, -1) * z * CF - 8 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 3 * Li2(x) * CF * pow(omx, -1) + 2 * Li2(x) * CF * pow(opx, -1) - 6 * Li2(x) * z * CF * pow(omx, -1) - 4 * Li2(x) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(z, 2) * CF * pow(omx, -1) - 2 * Li2(x) * x * CF + 4 * Li2(x) * x * z * CF - 8 * Li2(x) * x * pow(z, 2) * CF + Li2(z) * CF * pow(omx, -1) - 2 * Li2(z) * z * CF * pow(omx, -1) - 2 * Li2(z) * x * CF + 4 * Li2(z) * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2qpb_es(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF - 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF - 1.0 / 3.0 * pow(x, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF - 4.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 6 * CF - 6 * pow(rln2, 2) * CF * pow(omx, -1) - 6 * sqrtxz1 * rln2 * CF * pow(omx, -1) + 5.0 / 6.0 * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 3.0 * pow(pi, 2) * CF + 5 * z * CF - 4 * z * pow(rln2, 2) * CF * pow(omx, -1) + 8 * z * pow(rln2, 2) * CF - 5.0 / 3.0 * z * pow(pi, 2) * CF * pow(omx, -1) - 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * z * pow(pi, 2) * CF - 16 * pow(z, 2) * pow(rln2, 2) * CF * pow(omx, -1) + 2 * pow(z, 2) * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + x * CF + 4 * x * pow(rln2, 2) * CF + 4 * x * sqrtxz1 * rln2 * CF - 1.0 / 3.0 * x * pow(pi, 2) * CF - x * z * CF + 2.0 / 3.0 * x * z * pow(pi, 2) * CF + 16 * x * pow(z, 2) * pow(rln2, 2) * CF - 4.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 23 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 23 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF
                result += +3.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 23.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF + 23.0 / 2.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 8 * ln(1 + sqrtxz1 - z) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * rln2 * CF + 6 * ln(1 + sqrtxz1 - z) * sqrtxz1 * CF * pow(omx, -1) - 12 * ln(1 + sqrtxz1 - z) * z * rln2 * CF + 24 * ln(1 + sqrtxz1 - z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 6 * ln(1 + sqrtxz1 - z) * x * rln2 * CF - 4 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF + 4 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF - 24 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF - 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF * pow(omx, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1)
                result += +4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(1 + sqrtxz1 + z) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * z * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 + z) * z * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * x * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF - 4 * ln(x) * pow(x, -2) * CF * pow(opx, -1) + 4 * ln(x) * pow(x, -2) * CF + 8 * ln(x) * pow(x, -2) * z * CF * pow(opx, -1) - 8 * ln(x) * pow(x, -2) * z * CF - 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF + 1.0 / 4.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF - 17.0 / 4.0 * ln(x) * pow(x, -1) * CF + 8 * ln(x) * pow(x, -1) * z * CF - 16 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 1.0 / 4.0 * ln(x) * pow(poly2, -1) * CF + 2 * ln(x) * CF * pow(omx, -1) + 4 * ln(x) * CF * pow(opx, -1) + 1.0 / 4.0 * ln(x) * CF - 5 * ln(x) * rln2 * CF * pow(omx, -1) - 2 * ln(x) * rln2 * CF - 3 * ln(x) * sqrtxz1 * CF * pow(omx, -1) - 3 * ln(x) * z * CF * pow(omx, -1) - 8 * ln(x) * z * CF * pow(opx, -1) + 1.0 / 2.0 * ln(x) * z * CF + 2 * ln(x) * z * rln2 * CF * pow(omx, -1) + 8 * ln(x) * z * rln2 * CF - 16 * ln(x) * pow(z, 2) * rln2 * CF * pow(omx, -1) - ln(x) * x * CF * pow(xmz, -1) - 11.0 / 4.0 * ln(x) * x * CF + 4 * ln(x) * x * rln2 * CF + 2 * ln(x) * x * sqrtxz1 * CF
                result += +5.0 / 2.0 * ln(x) * x * z * CF - 4 * ln(x) * x * z * rln2 * CF + 16 * ln(x) * x * pow(z, 2) * rln2 * CF + 2 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) + 7.0 / 4.0 * ln(x) * pow(x, 2) * CF - 1.0 / 4.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF - 2 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 4.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 7.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 6 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 6 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -7.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 6 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 6 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 3 * ln(x) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF
                result += +ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * x * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 4 * ln(x) * ln(1 + x) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x) * CF - 8 * ln(x) * ln(1 + x) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x) * z * CF + 8 * ln(x) * ln(1 + x) * pow(z, 2) * CF * pow(opx, -1) + 6 * ln(x) * ln(1 + x) * x * CF - 12 * ln(x) * ln(1 + x) * x * z * CF + 8 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF + ln(x) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * z) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF + ln(x) * ln(1 + x * z) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * CF * pow(omx, -1) + ln(x) * ln(1 + x * z) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1)
                result += +2 * ln(x) * ln(1 + x * z) * x * CF + 8 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF + 2 * ln(x) * ln(z + x) * CF * pow(omx, -1) - ln(x) * ln(z + x) * CF + 4 * ln(x) * ln(z + x) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(z + x) * z * CF + 4 * ln(x) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) - ln(x) * ln(z + x) * x * CF - 2 * ln(x) * ln(z + x) * x * z * CF - 4 * ln(x) * ln(z + x) * x * pow(z, 2) * CF + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF * pow(opx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF - 3 * pow(ln(x), 2) * pow(x, -2) * z * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(x, -2) * z * CF + 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -1) * CF - 3 * pow(ln(x), 2) * pow(x, -1) * z * CF + 6 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * pow(ln(x), 2) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(x), 2) * CF * pow(opx, -1) - 2 * pow(ln(x), 2) * CF - 4 * pow(ln(x), 2) * z * CF * pow(omx, -1) + 5 * pow(ln(x), 2) * z * CF * pow(opx, -1) + 4 * pow(ln(x), 2) * z * CF + 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * x * CF + 6 * pow(ln(x), 2) * x * z * CF - 4 * pow(ln(x), 2) * x * pow(z, 2) * CF - ln(x) * ln(z) * pow(x, -2) * CF * pow(opx, -1) + ln(x) * ln(z) * pow(x, -2) * CF + 2 * ln(x) * ln(z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(x, -2) * z * CF - 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF - ln(x) * ln(z) * pow(x, -1) * CF + 2 * ln(x) * ln(z) * pow(x, -1) * z * CF - 4 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * CF * pow(omx, -1)
                result += -ln(x) * ln(z) * CF * pow(opx, -1) - ln(x) * ln(z) * CF + 4 * ln(x) * ln(z) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * z * CF - 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(z) * x * CF - 2 * ln(x) * ln(z) * x * z * CF + 4 * ln(x) * ln(z) * x * pow(z, 2) * CF + 2 * ln(x) * ln(omx) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(omx) * pow(x, -2) * CF - 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF + 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF + 2 * ln(x) * ln(omx) * pow(x, -1) * CF - 4 * ln(x) * ln(omx) * pow(x, -1) * z * CF + 8 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 3 * ln(x) * ln(omx) * CF * pow(omx, -1) - 2 * ln(x) * ln(omx) * CF * pow(opx, -1) + 6 * ln(x) * ln(omx) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(omx) * x * CF - 4 * ln(x) * ln(omx) * x * z * CF + 8 * ln(x) * ln(omx) * x * pow(z, 2) * CF - 2 * ln(x) * ln(opx) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(x, -2) * CF + 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF - 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF - 2 * ln(x) * ln(opx) * pow(x, -1) * CF + 4 * ln(x) * ln(opx) * pow(x, -1) * z * CF - 8 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * CF + 4 * ln(x) * ln(opx) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * z * CF - 8 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1)
                result += -2 * ln(x) * ln(opx) * x * CF + 4 * ln(x) * ln(opx) * x * z * CF - 8 * ln(x) * ln(opx) * x * pow(z, 2) * CF + 1.0 / 4.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(z) * pow(x, -1) * CF + 1.0 / 4.0 * ln(z) * pow(poly2, -1) * CF + 3 * ln(z) * CF * pow(omx, -1) - 17.0 / 4.0 * ln(z) * CF - 7 * ln(z) * rln2 * CF * pow(omx, -1) + 2 * ln(z) * rln2 * CF - 3 * ln(z) * sqrtxz1 * CF * pow(omx, -1) + 3 * ln(z) * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(z) * z * CF - 10 * ln(z) * z * rln2 * CF * pow(omx, -1) + 8 * ln(z) * z * rln2 * CF - 16 * ln(z) * pow(z, 2) * rln2 * CF * pow(omx, -1) + ln(z) * x * CF * pow(xmz, -1) + 1.0 / 4.0 * ln(z) * x * CF + 4 * ln(z) * x * rln2 * CF + 2 * ln(z) * x * sqrtxz1 * CF - 5.0 / 2.0 * ln(z) * x * z * CF + 4 * ln(z) * x * z * rln2 * CF + 16 * ln(z) * x * pow(z, 2) * rln2 * CF - 2 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) - 7.0 / 4.0 * ln(z) * pow(x, 2) * CF - 1.0 / 4.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF + 2 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) - 1.0 / 4.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF + 3 * ln(z) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1)
                result += +ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF - ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * x * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + ln(z) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * z) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF + ln(z) * ln(1 + x * z) * pow(x, -1) * CF - 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * CF * pow(omx, -1) + ln(z) * ln(1 + x * z) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1)
                result += +2 * ln(z) * ln(1 + x * z) * x * CF + 8 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF - 2 * ln(z) * ln(z + x) * CF * pow(omx, -1) + ln(z) * ln(z + x) * CF - 4 * ln(z) * ln(z + x) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(z + x) * z * CF - 4 * ln(z) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) + ln(z) * ln(z + x) * x * CF + 2 * ln(z) * ln(z + x) * x * z * CF + 4 * ln(z) * ln(z + x) * x * pow(z, 2) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF + pow(ln(z), 2) * pow(x, -2) * z * CF * pow(opx, -1) - pow(ln(z), 2) * pow(x, -2) * z * CF - 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -1) * CF + pow(ln(z), 2) * pow(x, -1) * z * CF - 2 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + pow(ln(z), 2) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * CF * pow(opx, -1) + pow(ln(z), 2) * CF - 2 * pow(ln(z), 2) * z * CF * pow(omx, -1) + pow(ln(z), 2) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * z * CF + 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * x * CF + 4 * pow(ln(z), 2) * x * z * CF - 4 * pow(ln(z), 2) * x * pow(z, 2) * CF - ln(z) * ln(omz) * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * x * CF - 4 * ln(z) * ln(omz) * x * z * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF
                result += -9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += -7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF + 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF
                result += +1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 7.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 7.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF
                result += +6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 9.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF + Li2(1 - x * pow(z, -1)) * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * z * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * x * CF + 4 * Li2(1 - x * pow(z, -1)) * x * z * CF + Li2(-x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) - Li2(-x * pow(z, -1)) * pow(x, -2) * CF - 2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1)
                result += +2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF + Li2(-x * pow(z, -1)) * pow(x, -1) * CF - 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * CF * pow(omx, -1) + Li2(-x * pow(z, -1)) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * CF + 4 * Li2(-x * pow(z, -1)) * z * CF * pow(omx, -1) - 2 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(omx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * x * z * CF - 2 * Li2(-x) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(-x) * pow(x, -2) * CF + 4 * Li2(-x) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(-x) * pow(x, -2) * z * CF - 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF - 2 * Li2(-x) * pow(x, -1) * CF + 4 * Li2(-x) * pow(x, -1) * z * CF - 8 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x) * CF * pow(opx, -1) + 4 * Li2(-x) * CF - 4 * Li2(-x) * z * CF * pow(opx, -1) - 8 * Li2(-x) * z * CF + 4 * Li2(-x) * x * CF - 8 * Li2(-x) * x * z * CF + Li2(-x * z) * pow(x, -2) * CF * pow(opx, -1) - Li2(-x * z) * pow(x, -2) * CF - 2 * Li2(-x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(x, -2) * z * CF + 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF + Li2(-x * z) * pow(x, -1) * CF - 2 * Li2(-x * z) * pow(x, -1) * z * CF + 4 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += -2 * Li2(-x * z) * CF * pow(omx, -1) + Li2(-x * z) * CF * pow(opx, -1) - 4 * Li2(-x * z) * z * CF * pow(omx, -1) - 2 * Li2(-x * z) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * z * CF - 4 * Li2(-x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x * z) * x * CF + 8 * Li2(-x * z) * x * pow(z, 2) * CF + 2 * Li2(x) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(x) * pow(x, -2) * CF - 4 * Li2(x) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(x) * pow(x, -2) * z * CF + 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF + 2 * Li2(x) * pow(x, -1) * CF - 4 * Li2(x) * pow(x, -1) * z * CF + 8 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 3 * Li2(x) * CF * pow(omx, -1) - 2 * Li2(x) * CF * pow(opx, -1) + 6 * Li2(x) * z * CF * pow(omx, -1) + 4 * Li2(x) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(z, 2) * CF * pow(omx, -1) + 2 * Li2(x) * x * CF - 4 * Li2(x) * x * z * CF + 8 * Li2(x) * x * pow(z, 2) * CF - Li2(z) * CF * pow(omx, -1) + 2 * Li2(z) * z * CF * pow(omx, -1) + 2 * Li2(z) * x * CF - 4 * Li2(z) * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2g_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -9 * pow(NC, -1) * pow(z, -1) * CF - 4 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 2 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF - 6 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 4 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF + 8.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) - 13.0 / 12.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 41.0 / 4.0 * pow(NC, -1) * CF + 4 * pow(NC, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 2 * pow(NC, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) - 10.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 7.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF - 4 * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(NC, -1) * z * CF - 2 * pow(NC, -1) * z * pow(rln2, 2) * CF * pow(omx, -1) + 5.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF + 4 * pow(NC, -1) * x * pow(z, -1) * CF + 2 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF + 2 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 29.0 / 12.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 2 * pow(NC, -1) * x * CF * pow(omxmz, -1) + 23.0 / 4.0 * pow(NC, -1) * x * CF + 2 * pow(NC, -1) * x * sqrtxz1 * rln2 * CF + 25.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF - 11.0 / 2.0 * pow(NC, -1) * x * z * CF - 5.0 / 2.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF + 2 * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) - 2 * pow(NC, -1) * pow(x, 2) * CF - 2 * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) + 215.0 / 18.0 * NC * pow(z, -1) * CF - 2 * NC * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) + 17.0 / 12.0 * NC * pow(z, -1) * pow(pi, 2) * CF - 163.0 / 12.0 * NC * CF - 8 * NC * pow(rln2, 2) * CF * pow(omx, -1) + 4 * NC * pow(rln2, 2) * CF - 4 * NC * sqrtxz1 * rln2 * CF * pow(omx, -1) + 4.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omx, -1)
                result += -1.0 / 2.0 * NC * pow(pi, 2) * CF + NC * z * CF * pow(omx, -1) + 4.0 / 3.0 * NC * z * CF - NC * z * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * NC * z * pow(pi, 2) * CF - 31.0 / 9.0 * NC * pow(z, 2) * CF - 43.0 / 18.0 * NC * x * pow(z, -1) * CF + 17.0 / 12.0 * NC * x * pow(z, -1) * pow(pi, 2) * CF - 37.0 / 12.0 * NC * x * CF + 4 * NC * x * pow(rln2, 2) * CF + 4 * NC * x * sqrtxz1 * rln2 * CF - 5.0 / 6.0 * NC * x * pow(pi, 2) * CF + 1.0 / 3.0 * NC * x * z * CF + 4 * NC * x * z * pow(rln2, 2) * CF + 5.0 / 2.0 * NC * x * z * pow(pi, 2) * CF + 53.0 / 9.0 * NC * x * pow(z, 2) * CF
                result += +8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * sqrtxz1 * CF - 4 * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * rln2 * CF + 12 * ln(1 + sqrtxz1 - z) * NC * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * NC * rln2 * CF + 4 * ln(1 + sqrtxz1 - z) * NC * sqrtxz1 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * NC * z * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) * rln2 * CF - 4 * ln(1 + sqrtxz1 - z) * NC * x * rln2 * CF - 4 * ln(1 + sqrtxz1 - z) * NC * x * sqrtxz1 * CF
                result += -4 * ln(1 + sqrtxz1 - z) * NC * x * z * rln2 * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(z, -1) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * pow(z, -1) * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * NC * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * z * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * NC * x * pow(z, -1) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * CF - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * z * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * NC * x * z * CF + 4 * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * rln2 * CF + 4 * ln(1 + sqrtxz1 + z) * NC * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 + z) * NC * rln2 * CF + 2 * ln(1 + sqrtxz1 + z) * NC * z * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * NC * x * rln2 * CF
                result += -4 * ln(1 + sqrtxz1 + z) * NC * x * z * rln2 * CF + 12 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 1.0 / 4.0 * ln(x) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) + 3 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF - 3 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 2 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF - 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + ln(x) * pow(NC, -1) * CF + 6 * ln(x) * pow(NC, -1) * rln2 * CF * pow(omx, -1) + ln(x) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) + 51.0 / 4.0 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * z * CF - 3 * ln(x) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 43.0 / 4.0 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF + 3 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 4 * ln(x) * pow(NC, -1) * x * CF + 4 * ln(x) * pow(NC, -1) * x * CF * omx + ln(x) * pow(NC, -1) * x * sqrtxz1 * CF - 15.0 / 2.0 * ln(x) * pow(NC, -1) * x * z * CF - 2 * ln(x) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -2) + 2 * ln(x) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) + 2 * ln(x) * pow(NC, -1) * pow(x, 2) * CF + 2 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -2) - 4 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) - 2 * ln(x) * pow(NC, -1) * pow(x, 4) * CF * pow(omxmz, -2) + 35.0 / 3.0 * ln(x) * NC * pow(z, -1) * CF * pow(omx, -1) - 163.0 / 12.0 * ln(x) * NC * pow(z, -1) * CF + 4 * ln(x) * NC * pow(z, -1) * rln2 * CF * pow(omx, -1) - 2 * ln(x) * NC * pow(z, -1) * rln2 * CF - 4 * ln(x) * NC * CF * pow(omx, -1) + ln(x) * NC * CF - 8 * ln(x) * NC * rln2 * CF * pow(omx, -1) + 2 * ln(x) * NC * rln2 * CF - 2 * ln(x) * NC * sqrtxz1 * CF * pow(omx, -1) - 51.0 / 4.0 * ln(x) * NC * z * CF * pow(omx, -1)
                result += +13.0 / 2.0 * ln(x) * NC * z * CF + 2 * ln(x) * NC * z * rln2 * CF * pow(omx, -1) - 8.0 / 3.0 * ln(x) * NC * pow(z, 2) * CF * pow(omx, -1) - 8.0 / 3.0 * ln(x) * NC * pow(z, 2) * CF - 67.0 / 12.0 * ln(x) * NC * x * pow(z, -1) * CF - 2 * ln(x) * NC * x * pow(z, -1) * rln2 * CF + 5 * ln(x) * NC * x * CF + 2 * ln(x) * NC * x * rln2 * CF + 2 * ln(x) * NC * x * sqrtxz1 * CF + 13.0 / 2.0 * ln(x) * NC * x * z * CF + 2 * ln(x) * NC * x * z * rln2 * CF + 16.0 / 3.0 * ln(x) * NC * x * pow(z, 2) * CF
                result += +4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * pow(z, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * NC * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * z * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * NC * x * pow(z, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) + ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 + z) * NC * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * CF - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * CF - 2 * ln(x) * ln(1 + sqrtxz1 + z) * NC * x * z * CF - 17 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 11.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF + 24 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += +1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF + 25.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 23 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 31.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF + 10 * pow(ln(x), 2) * NC * pow(z, -1) * CF * pow(omx, -1) - 11.0 / 2.0 * pow(ln(x), 2) * NC * pow(z, -1) * CF - 10 * pow(ln(x), 2) * NC * CF * pow(omx, -1) + 9 * pow(ln(x), 2) * NC * CF + 5 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(x), 2) * NC * z * CF - 11.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(z, -1) * CF + 9 * pow(ln(x), 2) * NC * x * CF - 17.0 / 2.0 * pow(ln(x), 2) * NC * x * z * CF + 16 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF - 25 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 10 * ln(x) * ln(z) * pow(NC, -1) * CF + 25.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 11 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 20 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 17 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 6 * ln(x) * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(z) * NC * pow(z, -1) * CF + 19 * ln(x) * ln(z) * NC * CF * pow(omx, -1) - 18 * ln(x) * ln(z) * NC * CF + 7.0 / 2.0 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) + 3 * ln(x) * ln(z) * NC * x * pow(z, -1) * CF - 16 * ln(x) * ln(z) * NC * x * CF - ln(x) * ln(z) * NC * x * z * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF - 26 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 10 * ln(x) * ln(omx) * pow(NC, -1) * CF + 13 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(omx) * pow(NC, -1) * z * CF - 15 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 30 * ln(x) * ln(omx) * pow(NC, -1) * x * CF
                result += -19 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 8 * ln(x) * ln(omx) * NC * pow(z, -1) * CF + 16 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) - 16 * ln(x) * ln(omx) * NC * CF - 8 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) + ln(x) * ln(omx) * NC * z * CF + 8 * ln(x) * ln(omx) * NC * x * pow(z, -1) * CF - 16 * ln(x) * ln(omx) * NC * x * CF + 15 * ln(x) * ln(omx) * NC * x * z * CF + 24 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 15.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 34 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 13 * ln(x) * ln(omz) * pow(NC, -1) * CF + 17 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(omz) * pow(NC, -1) * z * CF - 35.0 / 2.0 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 33 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 22 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF - 14 * ln(x) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 15.0 / 2.0 * ln(x) * ln(omz) * NC * pow(z, -1) * CF + 14 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) - 13 * ln(x) * ln(omz) * NC * CF - 7 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) + ln(x) * ln(omz) * NC * z * CF + 15.0 / 2.0 * ln(x) * ln(omz) * NC * x * pow(z, -1) * CF - 13 * ln(x) * ln(omz) * NC * x * CF + 12 * ln(x) * ln(omz) * NC * x * z * CF - 3 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(z) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) + ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF - 3 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 2 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF + 8 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 4 * ln(z) * pow(NC, -1) * CF + 2 * ln(z) * pow(NC, -1) * rln2 * CF * pow(omx, -1)
                result += +ln(z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) - 7 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(z) * pow(NC, -1) * z * CF - ln(z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) + 5 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 7 * ln(z) * pow(NC, -1) * x * CF + ln(z) * pow(NC, -1) * x * sqrtxz1 * CF + 9 * ln(z) * pow(NC, -1) * x * z * CF + 4 * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) + 44.0 / 3.0 * ln(z) * NC * pow(z, -1) * CF - 4 * ln(z) * NC * pow(z, -1) * rln2 * CF * pow(omx, -1) + 2 * ln(z) * NC * pow(z, -1) * rln2 * CF - 2 * ln(z) * NC * CF * pow(omx, -1) + 14 * ln(z) * NC * CF - 8 * ln(z) * NC * rln2 * CF * pow(omx, -1) + 6 * ln(z) * NC * rln2 * CF - 2 * ln(z) * NC * sqrtxz1 * CF * pow(omx, -1) + 6 * ln(z) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * NC * z * CF - 2 * ln(z) * NC * z * rln2 * CF * pow(omx, -1) + 4.0 / 3.0 * ln(z) * NC * pow(z, 2) * CF + 11.0 / 3.0 * ln(z) * NC * x * pow(z, -1) * CF + 2 * ln(z) * NC * x * pow(z, -1) * rln2 * CF - 2 * ln(z) * NC * x * CF + 6 * ln(z) * NC * x * rln2 * CF + 2 * ln(z) * NC * x * sqrtxz1 * CF - 13 * ln(z) * NC * x * z * CF + 6 * ln(z) * NC * x * z * rln2 * CF - 8.0 / 3.0 * ln(z) * NC * x * pow(z, 2) * CF
                result += +2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * CF * pow(omx, -1) + ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 - z) * NC * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * CF - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * CF - 2 * ln(z) * ln(1 + sqrtxz1 - z) * NC * x * z * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * pow(z, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * CF + 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * pow(z, -1) * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * NC * x * z * CF - 4 * ln(z) * ln(1 + z) * NC * pow(z, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + z) * NC * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + z) * NC * z * CF * pow(omx, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF + 6 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 4 * pow(ln(z), 2) * pow(NC, -1) * CF - 3 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF
                result += +2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 9.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + pow(ln(z), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(z), 2) * NC * pow(z, -1) * CF - 3 * pow(ln(z), 2) * NC * CF * pow(omx, -1) + 9 * pow(ln(z), 2) * NC * CF + 1.0 / 2.0 * pow(ln(z), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * z * CF + 5.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) * CF + 7 * pow(ln(z), 2) * NC * x * CF + 15.0 / 2.0 * pow(ln(z), 2) * NC * x * z * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * CF - 6 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 7 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 9 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 8 * ln(z) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) - 3 * ln(z) * ln(omx) * NC * pow(z, -1) * CF - 8 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) + 14 * ln(z) * ln(omx) * NC * CF + 4 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) - 3 * ln(z) * ln(omx) * NC * x * pow(z, -1) * CF + 12 * ln(z) * ln(omx) * NC * x * CF - ln(z) * ln(omx) * NC * x * z * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 20 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(z) * ln(omz) * pow(NC, -1) * CF - 10 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 6 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 10 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(z) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1)
                result += -5 * ln(z) * ln(omz) * NC * pow(z, -1) * CF - 4 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) + 10 * ln(z) * ln(omz) * NC * CF + 2 * ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) - 5 * ln(z) * ln(omz) * NC * x * pow(z, -1) * CF + 10 * ln(z) * ln(omz) * NC * x * CF - 10 * ln(z) * ln(omz) * NC * x * z * CF - 6 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 11.0 / 4.0 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(omx) * pow(NC, -1) * CF - 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(omx) * pow(NC, -1) * z * CF + 17.0 / 4.0 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 3 * ln(omx) * pow(NC, -1) * x * CF + 4 * ln(omx) * pow(NC, -1) * x * z * CF + 4 * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 125.0 / 12.0 * ln(omx) * NC * pow(z, -1) * CF - 4 * ln(omx) * NC * CF * pow(omx, -1) - 3 * ln(omx) * NC * CF + 4 * ln(omx) * NC * z * CF * pow(omx, -1) - 7.0 / 2.0 * ln(omx) * NC * z * CF + 4.0 / 3.0 * ln(omx) * NC * pow(z, 2) * CF + 41.0 / 12.0 * ln(omx) * NC * x * pow(z, -1) * CF - 6 * ln(omx) * NC * x * CF - 3 * ln(omx) * NC * x * z * CF - 8.0 / 3.0 * ln(omx) * NC * x * pow(z, 2) * CF
                result += -5 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF + 6 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3 * pow(ln(omx), 2) * pow(NC, -1) * CF - 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * z * CF + 6 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 11 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 13.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 4 * pow(ln(omx), 2) * NC * pow(z, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(omx), 2) * NC * pow(z, -1) * CF - 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) + 6 * pow(ln(omx), 2) * NC * CF + 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * NC * z * CF - 7.0 / 2.0 * pow(ln(omx), 2) * NC * x * pow(z, -1) * CF + 6 * pow(ln(omx), 2) * NC * x * CF - 11.0 / 2.0 * pow(ln(omx), 2) * NC * x * z * CF - 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 16 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * CF - 8 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(omx) * ln(omz) * pow(NC, -1) * z * CF + 11 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 13 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1)
                result += -6 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF - 4 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) + 10 * ln(omx) * ln(omz) * NC * CF + 2 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) - ln(omx) * ln(omz) * NC * z * CF - 6 * ln(omx) * ln(omz) * NC * x * pow(z, -1) * CF + 10 * ln(omx) * ln(omz) * NC * x * CF - 9 * ln(omx) * ln(omz) * NC * x * z * CF - 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 11.0 / 4.0 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 8 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + ln(omz) * pow(NC, -1) * CF - 8 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(omz) * pow(NC, -1) * z * CF + 25.0 / 4.0 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(omz) * pow(NC, -1) * x * CF * omx + 9.0 / 2.0 * ln(omz) * pow(NC, -1) * x * z * CF + 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -2) - 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -1) - 2 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF - 2 * ln(omz) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -2) + 4 * ln(omz) * pow(NC, -1) * pow(x, 3) * CF * pow(omxmz, -1) + 2 * ln(omz) * pow(NC, -1) * pow(x, 4) * CF * pow(omxmz, -2) + 2 * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 125.0 / 12.0 * ln(omz) * NC * pow(z, -1) * CF - 2 * ln(omz) * NC * CF * pow(omx, -1) - 6 * ln(omz) * NC * CF + 2 * ln(omz) * NC * z * CF * pow(omx, -1) - 5 * ln(omz) * NC * z * CF + 4.0 / 3.0 * ln(omz) * NC * pow(z, 2) * CF + 65.0 / 12.0 * ln(omz) * NC * x * pow(z, -1) * CF - 6 * ln(omz) * NC * x * CF + 1.0 / 2.0 * ln(omz) * NC * x * z * CF - 8.0 / 3.0 * ln(omz) * NC * x * pow(z, 2) * CF
                result += -8 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF + 12 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) - 5 * pow(ln(omz), 2) * pow(NC, -1) * CF - 6 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF + 7 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 13 * pow(ln(omz), 2) * pow(NC, -1) * x * CF + 17.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + pow(ln(omz), 2) * NC * pow(z, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * NC * pow(z, -1) * CF - pow(ln(omz), 2) * NC * CF * pow(omx, -1) + 4 * pow(ln(omz), 2) * NC * CF + 1.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF - 5.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) * CF + 4 * pow(ln(omz), 2) * NC * x * CF - 7.0 / 2.0 * pow(ln(omz), 2) * NC * x * z * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF
                result += -2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * z * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * z * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * pow(z, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * CF
                result += +2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * z * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * pow(z, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * NC * x * z * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * NC * x * z * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * NC * x * z * CF
                result += +2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * CF - 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * z * CF - 2 * Li2(1 - x * pow(z, -1)) * NC * pow(z, -1) * CF * pow(omx, -1) + Li2(1 - x * pow(z, -1)) * NC * pow(z, -1) * CF + 2 * Li2(1 - x * pow(z, -1)) * NC * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * NC * CF - Li2(1 - x * pow(z, -1)) * NC * z * CF * pow(omx, -1) + Li2(1 - x * pow(z, -1)) * NC * x * pow(z, -1) * CF - 2 * Li2(1 - x * pow(z, -1)) * NC * x * CF + 2 * Li2(1 - x * pow(z, -1)) * NC * x * z * CF - 4 * Li2(-z) * NC * pow(z, -1) * CF * pow(omx, -1) - 4 * Li2(-z) * NC * CF * pow(omx, -1) - 2 * Li2(-z) * NC * z * CF * pow(omx, -1) - 2 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF + 2 * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) - Li2(x) * pow(NC, -1) * CF - Li2(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 3.0 / 2.0 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF - Li2(x) * pow(NC, -1) * x * CF + Li2(x) * pow(NC, -1) * x * z * CF - 1.0 / 2.0 * Li2(x) * NC * pow(z, -1) * CF - Li2(x) * NC * CF - 1.0 / 2.0 * Li2(x) * NC * x * pow(z, -1) * CF - Li2(x) * NC * x * CF + Li2(x) * NC * x * z * CF - 4 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 6 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) - 3 * Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(z) * pow(NC, -1) * x * CF
                result += -Li2(z) * pow(NC, -1) * x * z * CF - 3 * Li2(z) * NC * pow(z, -1) * CF - 2 * Li2(z) * NC * CF - 3 * Li2(z) * NC * x * pow(z, -1) * CF - 11 * Li2(z) * NC * x * z * CF
            if z < round(1 - x, ndecimals) and z < x:
                result += 4 * pow(NC, -1) * pow(z, -1) * CF - 5.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * CF + 2 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF + 4 * pow(NC, -1) * z * CF * pow(omx, -1) - pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * pow(z, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 3 * pow(NC, -1) * x * pow(pi, 2) * CF + 5.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(x) * pow(NC, -1) * x * CF + 12 * ln(x) * pow(NC, -1) * x * z * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - 19 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * CF + 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 20 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 13 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 26 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * CF - 13 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 11 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 22 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 16 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF
                result += +28 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * CF - 14 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 16 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 32 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 20 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 22 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 32 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * CF - 16 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 17 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 34 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 22 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF + 3 * ln(x) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(x) * ln(omxmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 6 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -6 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(z) * pow(NC, -1) * x * CF - 6 * ln(z) * pow(NC, -1) * x * z * CF + 5 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF - 9 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * CF + 9.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 8 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF - 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(z) * ln(omx) * pow(NC, -1) * CF + 6 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 20 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * CF + 10 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 16 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF
                result += +2 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF - 6 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF + 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 9 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 16 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 22 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF + 11 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 13 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 26 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * z * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 11 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * CF + 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -13.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 13 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF + 6 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF - 3 * ln(omz) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 6 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF + 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(z, -1) * CF
                result += -2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF + Li2(z * pow(omx, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF + 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z < x:
                result += 4 * pow(NC, -1) * pow(z, -1) * CF - 5.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * CF + 2 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF + 4 * pow(NC, -1) * z * CF * pow(omx, -1) - pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * pow(z, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 3 * pow(NC, -1) * x * pow(pi, 2) * CF + 5.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(x) * pow(NC, -1) * x * CF + 12 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF + 3 * ln(x) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - 20 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * CF + 10 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 19 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 13 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1)
                result += +6 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 32 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * CF - 16 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 14 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 28 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 20 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 22 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * pow(NC, -1) * CF - 11 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 13 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 26 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 16 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 22 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 34 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * CF - 17 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 32 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 22 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 6 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -6 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(z) * pow(NC, -1) * x * CF - 6 * ln(z) * pow(NC, -1) * x * z * CF + 5 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF - 9 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * CF + 9.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 8 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF - 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(z) * ln(omx) * pow(NC, -1) * CF + 6 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 16 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 26 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 10 * ln(z) * ln(omz) * pow(NC, -1) * CF + 13 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 11 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 22 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF
                result += +2 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF - 6 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF + 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 9 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 16 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF + 6 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF
                result += -3 * ln(omz) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 6 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF + 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 12 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * CF + 6 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * CF + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * z * CF + Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(z, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF - Li2(pow(z, -1) * omx) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += +Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals) and z > x:
                result += 4 * pow(NC, -1) * pow(z, -1) * CF - 3 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) + 5.0 / 6.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * CF + 14.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 5.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF + 4 * pow(NC, -1) * z * CF * pow(omx, -1) - 7.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * pow(z, -1) * CF + 13.0 / 6.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 13.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 3 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(x) * pow(NC, -1) * x * CF + 12 * ln(x) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF + 14 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - 21 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * CF + 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 21 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 14 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1)
                result += +6 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 30 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * CF - 15 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 24 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 18 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 24 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * pow(NC, -1) * CF - 12 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 15 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 30 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 18 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 24 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 36 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * CF - 18 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 18 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 36 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 24 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF + 3 * ln(x) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(x) * ln(omxmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 6 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(z) * pow(NC, -1) * CF * pow(omx, -1)
                result += +6 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(z) * pow(NC, -1) * x * CF - 6 * ln(z) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF + 6 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF - 11 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * CF + 11.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 7 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 6 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 6 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(omx) * pow(NC, -1) * CF + 4 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 5 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 10 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 14 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 24 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 10 * ln(z) * ln(omz) * pow(NC, -1) * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -9 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 18 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 14 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(omx) * pow(NC, -1) * x * z * CF + 7 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF - 10 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 11.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 11 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 7 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 14 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * pow(NC, -1) * CF + 7 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 11 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 22 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * z * CF + 10 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 15 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1)
                result += +5 * pow(ln(omz), 2) * pow(NC, -1) * CF + 15.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 15.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 15 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 10 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * pow(z, -1) * CF + 6 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF - 3 * ln(omz) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 6 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF + 4 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF - 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - Li2(z * pow(omx, -1)) * pow(NC, -1) * pow(z, -1) * CF - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF + Li2(z * pow(omx, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(z * pow(omx, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1)
                result += +2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z > x:
                result += 4 * pow(NC, -1) * pow(z, -1) * CF - 5.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 6 * pow(NC, -1) * CF + 2 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF + 4 * pow(NC, -1) * z * CF * pow(omx, -1) - pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * pow(z, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 3 * pow(NC, -1) * x * pow(pi, 2) * CF + 5.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF - 12 * ln(x) * pow(NC, -1) * x * CF + 12 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF + 3 * ln(x) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF + 12 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1)
                result += -3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - 18 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * CF + 9 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 18 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 28 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * CF - 14 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 13 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 26 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 18 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 26 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * CF - 13 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 14 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 28 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 18 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 30 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * CF - 15 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 15 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF - 30 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 20 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -6 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(z) * pow(NC, -1) * x * CF - 6 * ln(z) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF + 4 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF - 7 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * CF + 7.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 5 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 4 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 10 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 3 * ln(z) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF - 16 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * CF + 8 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 7 * ln(z) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 14 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 10 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 14 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 22 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * CF + 11 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +20 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 14 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF + 6 * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * pow(z, -1) * CF - 6 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF + 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 9 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 12 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(omx) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 16 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * ln(omx) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 20 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 12 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(omz) * pow(NC, -1) * x * CF - 8 * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * pow(z, -1) * CF + 6 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF
                result += -3 * ln(omz) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * pow(z, -1) * CF - 6 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF + 4 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 12 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * CF + 6 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 12 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 8 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * CF + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF
                result += +Li2(pow(z, -1) * omx) * pow(NC, -1) * pow(z, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF - Li2(pow(z, -1) * omx) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(pow(z, -1) * omx) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF - 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 2 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > x:
                result += -NC * pow(z, -1) * CF + NC * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 2.0 * NC * pow(z, -1) * pow(pi, 2) * CF + 3 * NC * CF - NC * pow(pi, 2) * CF * pow(omx, -1) + NC * pow(pi, 2) * CF - NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * NC * z * pow(pi, 2) * CF * pow(omx, -1) + NC * x * pow(z, -1) * CF - 1.0 / 2.0 * NC * x * pow(z, -1) * pow(pi, 2) * CF + NC * x * pow(pi, 2) * CF - NC * x * z * pow(pi, 2) * CF + 6 * ln(x) * NC * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(x) * NC * CF * pow(omx, -1) + 9 * ln(x) * NC * CF + 6 * ln(x) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * NC * x * pow(z, -1) * CF - 6 * ln(x) * NC * x * z * CF - 2 * ln(x) * ln(-xmz) * NC * pow(z, -1) * CF * pow(omx, -1) + ln(x) * ln(-xmz) * NC * pow(z, -1) * CF + 2 * ln(x) * ln(-xmz) * NC * CF * pow(omx, -1) - 2 * ln(x) * ln(-xmz) * NC * CF - ln(x) * ln(-xmz) * NC * z * CF * pow(omx, -1) + ln(x) * ln(-xmz) * NC * x * pow(z, -1) * CF - 2 * ln(x) * ln(-xmz) * NC * x * CF + 2 * ln(x) * ln(-xmz) * NC * x * z * CF - 7 * pow(ln(x), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * pow(z, -1) * CF + 7 * pow(ln(x), 2) * NC * CF * pow(omx, -1) - 7 * pow(ln(x), 2) * NC * CF - 7.0 / 2.0 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * pow(z, -1) * CF - 7 * pow(ln(x), 2) * NC * x * CF + 7 * pow(ln(x), 2) * NC * x * z * CF + 12 * ln(x) * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(z) * NC * pow(z, -1) * CF - 12 * ln(x) * ln(z) * NC * CF * pow(omx, -1) + 12 * ln(x) * ln(z) * NC * CF + 6 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * ln(z) * NC * x * pow(z, -1) * CF + 12 * ln(x) * ln(z) * NC * x * CF - 12 * ln(x) * ln(z) * NC * x * z * CF + 12 * ln(x) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * NC * pow(z, -1) * CF - 12 * ln(x) * ln(omx) * NC * CF * pow(omx, -1)
                result += +12 * ln(x) * ln(omx) * NC * CF + 6 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * NC * x * pow(z, -1) * CF + 12 * ln(x) * ln(omx) * NC * x * CF - 12 * ln(x) * ln(omx) * NC * x * z * CF + 6 * ln(x) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) - 3 * ln(x) * ln(omz) * NC * pow(z, -1) * CF - 6 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * NC * CF + 3 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) - 3 * ln(x) * ln(omz) * NC * x * pow(z, -1) * CF + 6 * ln(x) * ln(omz) * NC * x * CF - 6 * ln(x) * ln(omz) * NC * x * z * CF - 4 * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(z) * NC * CF * pow(omx, -1) - 6 * ln(z) * NC * CF - 4 * ln(z) * NC * z * CF * pow(omx, -1) + 4 * ln(z) * NC * x * pow(z, -1) * CF + 4 * ln(z) * NC * x * z * CF + 2 * ln(z) * ln(-xmz) * NC * pow(z, -1) * CF * pow(omx, -1) - ln(z) * ln(-xmz) * NC * pow(z, -1) * CF - 2 * ln(z) * ln(-xmz) * NC * CF * pow(omx, -1) + 2 * ln(z) * ln(-xmz) * NC * CF + ln(z) * ln(-xmz) * NC * z * CF * pow(omx, -1) - ln(z) * ln(-xmz) * NC * x * pow(z, -1) * CF + 2 * ln(z) * ln(-xmz) * NC * x * CF - 2 * ln(z) * ln(-xmz) * NC * x * z * CF - 5 * pow(ln(z), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(z), 2) * NC * pow(z, -1) * CF + 5 * pow(ln(z), 2) * NC * CF * pow(omx, -1) - 5 * pow(ln(z), 2) * NC * CF - 5.0 / 2.0 * pow(ln(z), 2) * NC * z * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(z), 2) * NC * x * pow(z, -1) * CF - 5 * pow(ln(z), 2) * NC * x * CF + 5 * pow(ln(z), 2) * NC * x * z * CF - 10 * ln(z) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 5 * ln(z) * ln(omx) * NC * pow(z, -1) * CF + 10 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) - 10 * ln(z) * ln(omx) * NC * CF - 5 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) + 5 * ln(z) * ln(omx) * NC * x * pow(z, -1) * CF - 10 * ln(z) * ln(omx) * NC * x * CF
                result += +10 * ln(z) * ln(omx) * NC * x * z * CF - 2 * ln(z) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(omz) * NC * pow(z, -1) * CF + 2 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * NC * CF - ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) + ln(z) * ln(omz) * NC * x * pow(z, -1) * CF - 2 * ln(z) * ln(omz) * NC * x * CF + 2 * ln(z) * ln(omz) * NC * x * z * CF - 4 * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(omx) * NC * CF * pow(omx, -1) - 6 * ln(omx) * NC * CF - 4 * ln(omx) * NC * z * CF * pow(omx, -1) + 4 * ln(omx) * NC * x * pow(z, -1) * CF + 4 * ln(omx) * NC * x * z * CF - 4 * pow(ln(omx), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * pow(z, -1) * CF + 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) - 4 * pow(ln(omx), 2) * NC * CF - 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * x * pow(z, -1) * CF - 4 * pow(ln(omx), 2) * NC * x * CF + 4 * pow(ln(omx), 2) * NC * x * z * CF - 4 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF + 4 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) - 4 * ln(omx) * ln(omz) * NC * CF - 2 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * NC * x * pow(z, -1) * CF - 4 * ln(omx) * ln(omz) * NC * x * CF + 4 * ln(omx) * ln(omz) * NC * x * z * CF - 2 * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(omz) * NC * CF * pow(omx, -1) - 3 * ln(omz) * NC * CF - 2 * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(omz) * NC * x * pow(z, -1) * CF + 2 * ln(omz) * NC * x * z * CF - pow(ln(omz), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * pow(z, -1) * CF + pow(ln(omz), 2) * NC * CF * pow(omx, -1) - pow(ln(omz), 2) * NC * CF - 1.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1)
                result += +1.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) * CF - pow(ln(omz), 2) * NC * x * CF + pow(ln(omz), 2) * NC * x * z * CF + 2 * Li2(pow(omx, -1) * omz) * NC * pow(z, -1) * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * NC * pow(z, -1) * CF - 2 * Li2(pow(omx, -1) * omz) * NC * CF * pow(omx, -1) + 2 * Li2(pow(omx, -1) * omz) * NC * CF + Li2(pow(omx, -1) * omz) * NC * z * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * NC * x * pow(z, -1) * CF + 2 * Li2(pow(omx, -1) * omz) * NC * x * CF - 2 * Li2(pow(omx, -1) * omz) * NC * x * z * CF - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * pow(z, -1) * CF * pow(omx, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * pow(z, -1) * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * CF * pow(omx, -1) - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * CF - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * z * CF * pow(omx, -1) + Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * x * pow(z, -1) * CF - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * x * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * NC * x * z * CF + 2 * Li2(z) * NC * pow(z, -1) * CF * pow(omx, -1) - Li2(z) * NC * pow(z, -1) * CF - 2 * Li2(z) * NC * CF * pow(omx, -1) + 2 * Li2(z) * NC * CF + Li2(z) * NC * z * CF * pow(omx, -1) - Li2(z) * NC * x * pow(z, -1) * CF + 2 * Li2(z) * NC * x * CF - 2 * Li2(z) * NC * x * z * CF
            if z < x:
                result += -NC * pow(z, -1) * CF + NC * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 2.0 * NC * pow(z, -1) * pow(pi, 2) * CF + 3 * NC * CF - NC * pow(pi, 2) * CF * pow(omx, -1) + NC * pow(pi, 2) * CF - NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * NC * z * pow(pi, 2) * CF * pow(omx, -1) + NC * x * pow(z, -1) * CF - 1.0 / 2.0 * NC * x * pow(z, -1) * pow(pi, 2) * CF + NC * x * pow(pi, 2) * CF - NC * x * z * pow(pi, 2) * CF + 6 * ln(x) * NC * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(x) * NC * CF * pow(omx, -1) + 9 * ln(x) * NC * CF + 6 * ln(x) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * NC * x * pow(z, -1) * CF - 6 * ln(x) * NC * x * z * CF - 6 * pow(ln(x), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * NC * pow(z, -1) * CF + 6 * pow(ln(x), 2) * NC * CF * pow(omx, -1) - 6 * pow(ln(x), 2) * NC * CF - 3 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * NC * x * pow(z, -1) * CF - 6 * pow(ln(x), 2) * NC * x * CF + 6 * pow(ln(x), 2) * NC * x * z * CF + 10 * ln(x) * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(x) * ln(z) * NC * pow(z, -1) * CF - 10 * ln(x) * ln(z) * NC * CF * pow(omx, -1) + 10 * ln(x) * ln(z) * NC * CF + 5 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) - 5 * ln(x) * ln(z) * NC * x * pow(z, -1) * CF + 10 * ln(x) * ln(z) * NC * x * CF - 10 * ln(x) * ln(z) * NC * x * z * CF + 10 * ln(x) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) - 5 * ln(x) * ln(omx) * NC * pow(z, -1) * CF - 10 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) + 10 * ln(x) * ln(omx) * NC * CF + 5 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) - 5 * ln(x) * ln(omx) * NC * x * pow(z, -1) * CF + 10 * ln(x) * ln(omx) * NC * x * CF - 10 * ln(x) * ln(omx) * NC * x * z * CF + 8 * ln(x) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) - 4 * ln(x) * ln(omz) * NC * pow(z, -1) * CF - 8 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) + 8 * ln(x) * ln(omz) * NC * CF
                result += +4 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) - 4 * ln(x) * ln(omz) * NC * x * pow(z, -1) * CF + 8 * ln(x) * ln(omz) * NC * x * CF - 8 * ln(x) * ln(omz) * NC * x * z * CF - 2 * ln(x) * ln(xmz) * NC * pow(z, -1) * CF * pow(omx, -1) + ln(x) * ln(xmz) * NC * pow(z, -1) * CF + 2 * ln(x) * ln(xmz) * NC * CF * pow(omx, -1) - 2 * ln(x) * ln(xmz) * NC * CF - ln(x) * ln(xmz) * NC * z * CF * pow(omx, -1) + ln(x) * ln(xmz) * NC * x * pow(z, -1) * CF - 2 * ln(x) * ln(xmz) * NC * x * CF + 2 * ln(x) * ln(xmz) * NC * x * z * CF - 4 * ln(z) * NC * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(z) * NC * CF * pow(omx, -1) - 6 * ln(z) * NC * CF - 4 * ln(z) * NC * z * CF * pow(omx, -1) + 4 * ln(z) * NC * x * pow(z, -1) * CF + 4 * ln(z) * NC * x * z * CF - 4 * pow(ln(z), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * pow(ln(z), 2) * NC * pow(z, -1) * CF + 4 * pow(ln(z), 2) * NC * CF * pow(omx, -1) - 4 * pow(ln(z), 2) * NC * CF - 2 * pow(ln(z), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(z), 2) * NC * x * pow(z, -1) * CF - 4 * pow(ln(z), 2) * NC * x * CF + 4 * pow(ln(z), 2) * NC * x * z * CF - 8 * ln(z) * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(z) * ln(omx) * NC * pow(z, -1) * CF + 8 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) - 8 * ln(z) * ln(omx) * NC * CF - 4 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) + 4 * ln(z) * ln(omx) * NC * x * pow(z, -1) * CF - 8 * ln(z) * ln(omx) * NC * x * CF + 8 * ln(z) * ln(omx) * NC * x * z * CF - 4 * ln(z) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * NC * pow(z, -1) * CF + 4 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * NC * CF - 2 * ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * NC * x * pow(z, -1) * CF - 4 * ln(z) * ln(omz) * NC * x * CF + 4 * ln(z) * ln(omz) * NC * x * z * CF + 2 * ln(z) * ln(xmz) * NC * pow(z, -1) * CF * pow(omx, -1)
                result += -ln(z) * ln(xmz) * NC * pow(z, -1) * CF - 2 * ln(z) * ln(xmz) * NC * CF * pow(omx, -1) + 2 * ln(z) * ln(xmz) * NC * CF + ln(z) * ln(xmz) * NC * z * CF * pow(omx, -1) - ln(z) * ln(xmz) * NC * x * pow(z, -1) * CF + 2 * ln(z) * ln(xmz) * NC * x * CF - 2 * ln(z) * ln(xmz) * NC * x * z * CF - 4 * ln(omx) * NC * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(omx) * NC * CF * pow(omx, -1) - 6 * ln(omx) * NC * CF - 4 * ln(omx) * NC * z * CF * pow(omx, -1) + 4 * ln(omx) * NC * x * pow(z, -1) * CF + 4 * ln(omx) * NC * x * z * CF - 4 * pow(ln(omx), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * pow(z, -1) * CF + 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) - 4 * pow(ln(omx), 2) * NC * CF - 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * x * pow(z, -1) * CF - 4 * pow(ln(omx), 2) * NC * x * CF + 4 * pow(ln(omx), 2) * NC * x * z * CF - 4 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * NC * pow(z, -1) * CF + 4 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) - 4 * ln(omx) * ln(omz) * NC * CF - 2 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * NC * x * pow(z, -1) * CF - 4 * ln(omx) * ln(omz) * NC * x * CF + 4 * ln(omx) * ln(omz) * NC * x * z * CF - 2 * ln(omz) * NC * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(omz) * NC * CF * pow(omx, -1) - 3 * ln(omz) * NC * CF - 2 * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(omz) * NC * x * pow(z, -1) * CF + 2 * ln(omz) * NC * x * z * CF - pow(ln(omz), 2) * NC * pow(z, -1) * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * pow(z, -1) * CF + pow(ln(omz), 2) * NC * CF * pow(omx, -1) - pow(ln(omz), 2) * NC * CF - 1.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * x * pow(z, -1) * CF - pow(ln(omz), 2) * NC * x * CF + pow(ln(omz), 2) * NC * x * z * CF
                result += +2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * pow(z, -1) * CF * pow(omx, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * pow(z, -1) * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * CF + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * z * CF * pow(omx, -1) - Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * x * pow(z, -1) * CF + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * x * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * NC * x * z * CF - 2 * Li2(omx * pow(omz, -1)) * NC * pow(z, -1) * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * NC * pow(z, -1) * CF + 2 * Li2(omx * pow(omz, -1)) * NC * CF * pow(omx, -1) - 2 * Li2(omx * pow(omz, -1)) * NC * CF - Li2(omx * pow(omz, -1)) * NC * z * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * NC * x * pow(z, -1) * CF - 2 * Li2(omx * pow(omz, -1)) * NC * x * CF + 2 * Li2(omx * pow(omz, -1)) * NC * x * z * CF + 2 * Li2(z) * NC * pow(z, -1) * CF * pow(omx, -1) - Li2(z) * NC * pow(z, -1) * CF - 2 * Li2(z) * NC * CF * pow(omx, -1) + 2 * Li2(z) * NC * CF + Li2(z) * NC * z * CF * pow(omx, -1) - Li2(z) * NC * x * pow(z, -1) * CF + 2 * Li2(z) * NC * x * CF - 2 * Li2(z) * NC * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += -ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) * CF + ln(omz) * LMUA * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * z * CF - ln(omz) * LMUA * pow(NC, -1) * x * pow(z, -1) * CF + ln(omz) * LMUA * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x * z * CF + 3 * ln(omz) * LMUA * NC * pow(z, -1) * CF - 5 * ln(omz) * LMUA * NC * CF + 1.0 / 2.0 * ln(omz) * LMUA * NC * z * CF + 3 * ln(omz) * LMUA * NC * x * pow(z, -1) * CF - 5 * ln(omz) * LMUA * NC * x * CF + 9.0 / 2.0 * ln(omz) * LMUA * NC * x * z * CF - ln(omx) * LMUA * pow(NC, -1) * x * pow(z, -1) * CF + ln(omx) * LMUA * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x * z * CF + ln(omx) * LMUA * NC * pow(z, -1) * CF - ln(omx) * LMUA * NC * CF + 1.0 / 2.0 * ln(omx) * LMUA * NC * z * CF + ln(omx) * LMUA * NC * x * pow(z, -1) * CF - ln(omx) * LMUA * NC * x * CF + 1.0 / 2.0 * ln(omx) * LMUA * NC * x * z * CF - 2 * ln(x) * LMUA * NC * CF * pow(omx, -1) + ln(x) * LMUA * NC * CF + ln(x) * LMUA * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * LMUA * NC * z * CF - ln(x) * LMUA * NC * x * pow(z, -1) * CF + ln(x) * LMUA * NC * x * CF - 1.0 / 2.0 * ln(x) * LMUA * NC * x * z * CF - 2 * ln(x) * LMUA * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(x) * LMUA * pow(NC, -1) * pow(z, -1) * CF + 2 * ln(x) * LMUA * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * LMUA * pow(NC, -1) * CF - ln(x) * LMUA * pow(NC, -1) * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * z * CF + ln(x) * LMUA * pow(NC, -1) * x * pow(z, -1) * CF - ln(x) * LMUA * pow(NC, -1) * x * CF + 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x * z * CF + 2 * ln(x) * LMUA * NC * pow(z, -1) * CF * pow(omx, -1) - ln(x) * LMUA * NC * pow(z, -1) * CF - ln(omx) * LMUA * pow(NC, -1) * pow(z, -1) * CF + ln(omx) * LMUA * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * z * CF + ln(z) * LMUA * pow(NC, -1) * CF + 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF - ln(z) * LMUA * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x * z * CF - 2 * ln(z) * LMUA * NC * pow(z, -1) * CF - 5 * ln(z) * LMUA * NC * CF - 1.0 / 2.0 * ln(z) * LMUA * NC * z * CF - 2 * ln(z) * LMUA * NC * x * pow(z, -1) * CF - 3 * ln(z) * LMUA * NC * x * CF - 15.0 / 2.0 * ln(z) * LMUA * NC * x * z * CF + 3 * LMUA * pow(NC, -1) * pow(z, -1) * CF - 5.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * pow(NC, -1) * x * CF + LMUA * pow(NC, -1) * x * z * CF - 53.0 / 6.0 * LMUA * NC * pow(z, -1) * CF + 29.0 / 6.0 * LMUA * NC * CF + 3 * LMUA * NC * z * CF - 4.0 / 3.0 * LMUA * NC * pow(z, 2) * CF - 23.0 / 6.0 * LMUA * NC * x * pow(z, -1) * CF - 1.0 / 6.0 * LMUA * NC * x * CF + 11.0 / 3.0 * LMUA * NC * x * z * CF + 8.0 / 3.0 * LMUA * NC * x * pow(z, 2) * CF - 1.0 / 3.0 * LMUA * NF * pow(z, -1) * CF + 2.0 / 3.0 * LMUA * NF * CF - 1.0 / 3.0 * LMUA * NF * x * pow(z, -1) * CF + 2.0 / 3.0 * LMUA * NF * x * CF - 2.0 / 3.0 * LMUA * NF * x * z * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -7.0 / 4.0 * LMUF * pow(NC, -1) * pow(z, -1) * CF + 5.0 / 2.0 * LMUF * pow(NC, -1) * CF - 2 * LMUF * pow(NC, -1) * z * CF + 1.0 / 4.0 * LMUF * pow(NC, -1) * x * pow(z, -1) * CF + 1.0 / 2.0 * LMUF * pow(NC, -1) * x * CF - 1.0 / 2.0 * LMUF * pow(NC, -1) * x * z * CF + 7.0 / 4.0 * LMUF * NC * pow(z, -1) * CF - 5.0 / 2.0 * LMUF * NC * CF + 2 * LMUF * NC * z * CF - 1.0 / 4.0 * LMUF * NC * x * pow(z, -1) * CF - 1.0 / 2.0 * LMUF * NC * x * CF + 1.0 / 2.0 * LMUF * NC * x * z * CF - 2 * ln(x) * LMUF * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * pow(z, -1) * CF + 2 * ln(x) * LMUF * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(x) * LMUF * pow(NC, -1) * CF - ln(x) * LMUF * pow(NC, -1) * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * z * CF + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(x) * LMUF * pow(NC, -1) * x * CF + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * z * CF + 2 * ln(x) * LMUF * NC * pow(z, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * ln(x) * LMUF * NC * pow(z, -1) * CF - 2 * ln(x) * LMUF * NC * CF * pow(omx, -1) + 2 * ln(x) * LMUF * NC * CF + ln(x) * LMUF * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * LMUF * NC * z * CF - 3.0 / 2.0 * ln(x) * LMUF * NC * x * pow(z, -1) * CF + 2 * ln(x) * LMUF * NC * x * CF - 3.0 / 2.0 * ln(x) * LMUF * NC * x * z * CF - ln(z) * LMUF * pow(NC, -1) * pow(z, -1) * CF + ln(z) * LMUF * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * z * CF - ln(z) * LMUF * pow(NC, -1) * x * pow(z, -1) * CF + ln(z) * LMUF * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x * z * CF + ln(z) * LMUF * NC * pow(z, -1) * CF - ln(z) * LMUF * NC * CF + 1.0 / 2.0 * ln(z) * LMUF * NC * z * CF + ln(z) * LMUF * NC * x * pow(z, -1) * CF - ln(z) * LMUF * NC * x * CF + 1.0 / 2.0 * ln(z) * LMUF * NC * x * z * CF - 2 * ln(omx) * LMUF * pow(NC, -1) * pow(z, -1) * CF + 3 * ln(omx) * LMUF * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * z * CF - 2 * ln(omx) * LMUF * pow(NC, -1) * x * pow(z, -1) * CF + 3 * ln(omx) * LMUF * pow(NC, -1) * x * CF - 5.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x * z * CF + 2 * ln(omx) * LMUF * NC * pow(z, -1) * CF - 3 * ln(omx) * LMUF * NC * CF + 1.0 / 2.0 * ln(omx) * LMUF * NC * z * CF + 2 * ln(omx) * LMUF * NC * x * pow(z, -1) * CF - 3 * ln(omx) * LMUF * NC * x * CF + 5.0 / 2.0 * ln(omx) * LMUF * NC * x * z * CF - ln(omz) * LMUF * pow(NC, -1) * pow(z, -1) * CF + ln(omz) * LMUF * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * z * CF - ln(omz) * LMUF * pow(NC, -1) * x * pow(z, -1) * CF + ln(omz) * LMUF * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x * z * CF + ln(omz) * LMUF * NC * pow(z, -1) * CF - ln(omz) * LMUF * NC * CF + 1.0 / 2.0 * ln(omz) * LMUF * NC * z * CF + ln(omz) * LMUF * NC * x * pow(z, -1) * CF - ln(omz) * LMUF * NC * x * CF + 1.0 / 2.0 * ln(omz) * LMUF * NC * x * z * CF
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += -11.0 / 6.0 * LMUR * NC * pow(z, -1) * CF + 11.0 / 3.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * x * pow(z, -1) * CF + 11.0 / 3.0 * LMUR * NC * x * CF - 11.0 / 3.0 * LMUR * NC * x * z * CF + 1.0 / 3.0 * LMUR * NF * pow(z, -1) * CF - 2.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * x * pow(z, -1) * CF - 2.0 / 3.0 * LMUR * NF * x * CF + 2.0 / 3.0 * LMUR * NF * x * z * CF
        elif orders == "011":
            if z != x and z != round(1 - x, ndecimals):
                result += +LMUA * LMUF * pow(NC, -1) * pow(z, -1) * CF - LMUA * LMUF * pow(NC, -1) * CF + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * z * CF + LMUA * LMUF * pow(NC, -1) * x * pow(z, -1) * CF - LMUA * LMUF * pow(NC, -1) * x * CF + 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x * z * CF - LMUA * LMUF * NC * pow(z, -1) * CF + LMUA * LMUF * NC * CF - 1.0 / 2.0 * LMUA * LMUF * NC * z * CF - LMUA * LMUF * NC * x * pow(z, -1) * CF + LMUA * LMUF * NC * x * CF - 1.0 / 2.0 * LMUA * LMUF * NC * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        return result
    elif rsl == "rl":
        result = 0
        return result
    elif rsl == "sr":
        result = 0
        if orders == "000":
            result_0r = 9.0 / 2.0 * pow(NC, -1) * pow(z, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 17.0 / 4.0 * pow(NC, -1) * CF - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 2.0 * pow(NC, -1) * z * CF + 5.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 55.0 / 18.0 * NC * pow(z, -1) * CF - 2.0 / 3.0 * NC * pow(z, -1) * pow(pi, 2) * CF + 95.0 / 12.0 * NC * CF + 1.0 / 6.0 * NC * pow(pi, 2) * CF - 31.0 / 6.0 * NC * z * CF - 3.0 / 4.0 * NC * z * pow(pi, 2) * CF - 13.0 / 9.0 * NC * pow(z, 2) * CF + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(z, -1) * CF - 89.0 / 6.0 * ln(z) * NC * pow(z, -1) * CF + 2 * ln(z) * NC * CF + 2 * ln(z) * NC * z * CF + 4.0 / 3.0 * ln(z) * NC * pow(z, 2) * CF + 4 * ln(z) * ln(1 + z) * NC * pow(z, -1) * CF + 4 * ln(z) * ln(1 + z) * NC * CF + 2 * ln(z) * ln(1 + z) * NC * z * CF - pow(ln(z), 2) * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF - 6 * pow(ln(z), 2) * NC * pow(z, -1) * CF - 3 * pow(ln(z), 2) * NC * CF - 11.0 / 2.0 * pow(ln(z), 2) * NC * z * CF + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * ln(omz) * pow(NC, -1) * CF + ln(z) * ln(omz) * pow(NC, -1) * z * CF + 6 * ln(z) * ln(omz) * NC * pow(z, -1) * CF - 6 * ln(z) * ln(omz) * NC * CF + 3 * ln(z) * ln(omz) * NC * z * CF + 3 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(omz) * pow(NC, -1) * CF + 3.0 / 4.0 * ln(omz) * pow(NC, -1) * z * CF - 40.0 / 3.0 * ln(omz) * NC * pow(z, -1) * CF + 12 * ln(omz) * NC * CF + 1.0 / 4.0 * ln(omz) * NC * z * CF + 4.0 / 3.0 * ln(omz) * NC * pow(z, 2) * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF + 2 * pow(ln(omz), 2) * pow(NC, -1) * CF - pow(ln(omz), 2) * pow(NC, -1) * z * CF + 4 * pow(ln(omz), 2) * NC * pow(z, -1) * CF - 4 * pow(ln(omz), 2) * NC * CF + 2 * pow(ln(omz), 2) * NC * z * CF + 4 * Li2(-z) * NC * pow(z, -1) * CF + 4 * Li2(-z) * NC * CF + 2 * Li2(-z) * NC * z * CF + 6 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF - 5 * Li2(z) * pow(NC, -1) * CF + 5.0 / 2.0 * Li2(z) * pow(NC, -1) * z * CF + 6 * Li2(z) * NC * pow(z, -1) * CF + Li2(z) * NC * CF + 11.0 / 2.0 * Li2(z) * NC * z * CF
            result_1r = 3 * pow(NC, -1) * pow(z, -1) * CF - 4 * pow(NC, -1) * CF + 3.0 / 4.0 * pow(NC, -1) * z * CF - 40.0 / 3.0 * NC * pow(z, -1) * CF + 12 * NC * CF + 1.0 / 4.0 * NC * z * CF + 4.0 / 3.0 * NC * pow(z, 2) * CF - 2 * ln(z) * pow(NC, -1) * pow(z, -1) * CF + ln(z) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * z * CF - 2 * ln(z) * NC * pow(z, -1) * CF - 5 * ln(z) * NC * CF - 7.0 / 2.0 * ln(z) * NC * z * CF - 4 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(omz) * pow(NC, -1) * CF - 2 * ln(omz) * pow(NC, -1) * z * CF + 8 * ln(omz) * NC * pow(z, -1) * CF - 8 * ln(omz) * NC * CF + 4 * ln(omz) * NC * z * CF
            result_2r = -3 * pow(NC, -1) * pow(z, -1) * CF + 3 * pow(NC, -1) * CF - 3.0 / 2.0 * pow(NC, -1) * z * CF + 3 * NC * pow(z, -1) * CF - 3 * NC * CF + 3.0 / 2.0 * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x) + result_2r * ln(1 - x) * ln(1 - x) / (1 - x)
        elif orders == "001":
            result_0r = -1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF + 4 * ln(z) * LMUA * NC * pow(z, -1) * CF + 3 * ln(z) * LMUA * NC * CF + 9.0 / 2.0 * ln(z) * LMUA * NC * z * CF + 2 * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * CF + ln(omz) * LMUA * pow(NC, -1) * z * CF - 6 * ln(omz) * LMUA * NC * pow(z, -1) * CF + 6 * ln(omz) * LMUA * NC * CF - 3 * ln(omz) * LMUA * NC * z * CF - 3.0 / 2.0 * LMUA * pow(NC, -1) * pow(z, -1) * CF + 5.0 / 2.0 * LMUA * pow(NC, -1) * CF - LMUA * pow(NC, -1) * z * CF + 49.0 / 6.0 * LMUA * NC * pow(z, -1) * CF - 41.0 / 6.0 * LMUA * NC * CF - 11.0 / 6.0 * LMUA * NC * z * CF - 4.0 / 3.0 * LMUA * NC * pow(z, 2) * CF + 2.0 / 3.0 * LMUA * NF * pow(z, -1) * CF - 2.0 / 3.0 * LMUA * NF * CF + 1.0 / 3.0 * LMUA * NF * z * CF + ln(z) * LMUA * pow(NC, -1) * CF
            result_1r = +2 * LMUA * pow(NC, -1) * pow(z, -1) * CF - 2 * LMUA * pow(NC, -1) * CF + LMUA * pow(NC, -1) * z * CF - 2 * LMUA * NC * pow(z, -1) * CF + 2 * LMUA * NC * CF - LMUA * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "010":
            result_0r = +2 * ln(omz) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(omz) * LMUF * pow(NC, -1) * CF + ln(omz) * LMUF * pow(NC, -1) * z * CF - 2 * ln(omz) * LMUF * NC * pow(z, -1) * CF + 2 * ln(omz) * LMUF * NC * CF - ln(omz) * LMUF * NC * z * CF + 2 * ln(z) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * LMUF * pow(NC, -1) * CF + ln(z) * LMUF * pow(NC, -1) * z * CF - 2 * ln(z) * LMUF * NC * pow(z, -1) * CF + 2 * ln(z) * LMUF * NC * CF - ln(z) * LMUF * NC * z * CF + 3.0 / 2.0 * LMUF * pow(NC, -1) * pow(z, -1) * CF - 3.0 / 2.0 * LMUF * pow(NC, -1) * CF + 7.0 / 4.0 * LMUF * pow(NC, -1) * z * CF - 3.0 / 2.0 * LMUF * NC * pow(z, -1) * CF + 3.0 / 2.0 * LMUF * NC * CF - 7.0 / 4.0 * LMUF * NC * z * CF
            result_1r = +4 * LMUF * pow(NC, -1) * pow(z, -1) * CF - 4 * LMUF * pow(NC, -1) * CF + 2 * LMUF * pow(NC, -1) * z * CF - 4 * LMUF * NC * pow(z, -1) * CF + 4 * LMUF * NC * CF - 2 * LMUF * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "100":
            result_0r = +11.0 / 3.0 * LMUR * NC * pow(z, -1) * CF - 11.0 / 3.0 * LMUR * NC * CF + 11.0 / 6.0 * LMUR * NC * z * CF - 2.0 / 3.0 * LMUR * NF * pow(z, -1) * CF + 2.0 / 3.0 * LMUR * NF * CF - 1.0 / 3.0 * LMUR * NF * z * CF
            result += result_0r * 1 / (1 - x)
        elif orders == "011":
            result_0r = -2 * LMUA * LMUF * pow(NC, -1) * pow(z, -1) * CF + 2 * LMUA * LMUF * pow(NC, -1) * CF - LMUA * LMUF * pow(NC, -1) * z * CF + 2 * LMUA * LMUF * NC * pow(z, -1) * CF - 2 * LMUA * LMUF * NC * CF + LMUA * LMUF * NC * z * CF
            result += result_0r * 1 / (1 - x)
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        if orders == "000":
            result += -5 * pow(NC, -1) * pow(z, -1) * zeta3 * CF - 1.0 / 4.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 3 * pow(NC, -1) * CF + 3 * pow(NC, -1) * zeta3 * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF + 13.0 / 8.0 * pow(NC, -1) * z * CF - 3.0 / 2.0 * pow(NC, -1) * z * zeta3 * CF - 1.0 / 8.0 * pow(NC, -1) * z * pow(pi, 2) * CF + 1169.0 / 54.0 * NC * pow(z, -1) * CF - 14 * NC * pow(z, -1) * zeta3 * CF + 4.0 / 3.0 * NC * pow(z, -1) * pow(rln2, 3) * CF - 1.0 / 4.0 * NC * pow(z, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * NC * pow(z, -1) * pow(pi, 2) * rln2 * CF - 295.0 / 18.0 * NC * CF + 4.0 / 3.0 * NC * pow(rln2, 3) * CF - 5.0 / 3.0 * NC * pow(pi, 2) * CF - 2.0 / 3.0 * NC * pow(pi, 2) * rln2 * CF - 389.0 / 72.0 * NC * z * CF - 12 * NC * z * zeta3 * CF + 2.0 / 3.0 * NC * z * pow(rln2, 3) * CF + 7.0 / 24.0 * NC * z * pow(pi, 2) * CF - 1.0 / 3.0 * NC * z * pow(pi, 2) * rln2 * CF - 269.0 / 54.0 * NC * pow(z, 2) * CF
            result += -2 * ln(1 + z) * NC * pow(z, -1) * pow(rln2, 2) * CF + 1.0 / 3.0 * ln(1 + z) * NC * pow(z, -1) * pow(pi, 2) * CF - 2 * ln(1 + z) * NC * pow(rln2, 2) * CF + 1.0 / 3.0 * ln(1 + z) * NC * pow(pi, 2) * CF - ln(1 + z) * NC * z * pow(rln2, 2) * CF + 1.0 / 6.0 * ln(1 + z) * NC * z * pow(pi, 2) * CF + 9.0 / 2.0 * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 1.0 / 3.0 * ln(z) * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 67.0 / 8.0 * ln(z) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(pi, 2) * CF + 45.0 / 8.0 * ln(z) * pow(NC, -1) * z * CF + 1.0 / 4.0 * ln(z) * pow(NC, -1) * z * pow(pi, 2) * CF + 71.0 / 18.0 * ln(z) * NC * pow(z, -1) * CF - ln(z) * NC * pow(z, -1) * pow(pi, 2) * CF + 247.0 / 8.0 * ln(z) * NC * CF - 1.0 / 6.0 * ln(z) * NC * pow(pi, 2) * CF + 31.0 / 8.0 * ln(z) * NC * z * CF - 11.0 / 12.0 * ln(z) * NC * z * pow(pi, 2) * CF + 31.0 / 9.0 * ln(z) * NC * pow(z, 2) * CF
            result += +ln(z) * ln(1 + z) * NC * z * CF + pow(ln(z), 2) * pow(NC, -1) * CF - 13.0 / 16.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF - 20.0 / 3.0 * pow(ln(z), 2) * NC * pow(z, -1) * CF - 5 * pow(ln(z), 2) * NC * CF - 7.0 / 16.0 * pow(ln(z), 2) * NC * z * CF + 3 * pow(ln(z), 2) * ln(1 + z) * NC * pow(z, -1) * CF + 3 * pow(ln(z), 2) * ln(1 + z) * NC * CF + 3.0 / 2.0 * pow(ln(z), 2) * ln(1 + z) * NC * z * CF - 5.0 / 12.0 * pow(ln(z), 3) * pow(NC, -1) * CF + 5.0 / 24.0 * pow(ln(z), 3) * pow(NC, -1) * z * CF
            result += -10.0 / 3.0 * pow(ln(z), 3) * NC * pow(z, -1) * CF - 5.0 / 4.0 * pow(ln(z), 3) * NC * CF - 65.0 / 24.0 * pow(ln(z), 3) * NC * z * CF + 2 * pow(ln(z), 2) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 2 * pow(ln(z), 2) * ln(omz) * pow(NC, -1) * CF + pow(ln(z), 2) * ln(omz) * pow(NC, -1) * z * CF + pow(ln(z), 2) * ln(omz) * NC * pow(z, -1) * CF - pow(ln(z), 2) * ln(omz) * NC * CF + 1.0 / 2.0 * pow(ln(z), 2) * ln(omz) * NC * z * CF + 3 * ln(z) * ln(omz) * NC * z * CF + 4 * ln(z) * ln(omz) * ln(1 + z) * NC * pow(z, -1) * CF + 4 * ln(z) * ln(omz) * ln(1 + z) * NC * CF + 2 * ln(z) * ln(omz) * ln(1 + z) * NC * z * CF + 2 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 3.0 / 2.0 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * CF + 3.0 / 4.0 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * z * CF + 5 * ln(z) * pow(ln(omz), 2) * NC * pow(z, -1) * CF - 3.0 / 2.0 * ln(z) * pow(ln(omz), 2) * NC * CF + 15.0 / 4.0 * ln(z) * pow(ln(omz), 2) * NC * z * CF + 2 * ln(z) * Li2(-z) * NC * pow(z, -1) * CF + 2 * ln(z) * Li2(-z) * NC * CF + ln(z) * Li2(-z) * NC * z * CF + 6 * ln(z) * Li2(z) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(z) * Li2(z) * pow(NC, -1) * CF + 3 * ln(z) * Li2(z) * pow(NC, -1) * z * CF - 4 * ln(z) * Li2(z) * NC * pow(z, -1) * CF + 4 * ln(z) * Li2(z) * NC * CF - 2 * ln(z) * Li2(z) * NC * z * CF + 9.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 1.0 / 3.0 * ln(omz) * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 9.0 / 2.0 * ln(omz) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 2.0 * ln(omz) * pow(NC, -1) * z * CF
            result += +1.0 / 4.0 * ln(omz) * pow(NC, -1) * z * pow(pi, 2) * CF - 55.0 / 18.0 * ln(omz) * NC * pow(z, -1) * CF - 2 * ln(omz) * NC * pow(z, -1) * pow(rln2, 2) * CF - ln(omz) * NC * pow(z, -1) * pow(pi, 2) * CF + 23.0 / 3.0 * ln(omz) * NC * CF - 2 * ln(omz) * NC * pow(rln2, 2) * CF + 1.0 / 2.0 * ln(omz) * NC * pow(pi, 2) * CF - 31.0 / 6.0 * ln(omz) * NC * z * CF - ln(omz) * NC * z * pow(rln2, 2) * CF - 11.0 / 12.0 * ln(omz) * NC * z * pow(pi, 2) * CF - 13.0 / 9.0 * ln(omz) * NC * pow(z, 2) * CF + 4 * ln(omz) * ln(1 + z) * NC * pow(z, -1) * rln2 * CF + 4 * ln(omz) * ln(1 + z) * NC * rln2 * CF + 2 * ln(omz) * ln(1 + z) * NC * z * rln2 * CF
            result += -2 * ln(omz) * pow(ln(1 + z), 2) * NC * pow(z, -1) * CF - 2 * ln(omz) * pow(ln(1 + z), 2) * NC * CF - ln(omz) * pow(ln(1 + z), 2) * NC * z * CF + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * CF + 1.0 / 8.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF - 20.0 / 3.0 * pow(ln(omz), 2) * NC * pow(z, -1) * CF + 6 * pow(ln(omz), 2) * NC * CF - 1.0 / 8.0 * pow(ln(omz), 2) * NC * z * CF + 2.0 / 3.0 * pow(ln(omz), 2) * NC * pow(z, 2) * CF - 5.0 / 6.0 * pow(ln(omz), 3) * pow(NC, -1) * pow(z, -1) * CF + 5.0 / 6.0 * pow(ln(omz), 3) * pow(NC, -1) * CF - 5.0 / 12.0 * pow(ln(omz), 3) * pow(NC, -1) * z * CF + 7.0 / 6.0 * pow(ln(omz), 3) * NC * pow(z, -1) * CF - 7.0 / 6.0 * pow(ln(omz), 3) * NC * CF + 7.0 / 12.0 * pow(ln(omz), 3) * NC * z * CF + 4 * ln(omz) * Li2(-z) * NC * pow(z, -1) * CF + 4 * ln(omz) * Li2(-z) * NC * CF + 2 * ln(omz) * Li2(-z) * NC * z * CF + 5 * ln(omz) * Li2(z) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(omz) * Li2(z) * pow(NC, -1) * CF + 2 * ln(omz) * Li2(z) * pow(NC, -1) * z * CF + 5 * ln(omz) * Li2(z) * NC * pow(z, -1) * CF + 2 * ln(omz) * Li2(z) * NC * CF + 5 * ln(omz) * Li2(z) * NC * z * CF + 2.0 / 3.0 * ln(opz) * NC * pow(z, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * ln(opz) * NC * pow(pi, 2) * CF + 1.0 / 3.0 * ln(opz) * NC * z * pow(pi, 2) * CF - 4 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * NC * pow(z, -1) * CF - 4 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * NC * CF - 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * NC * z * CF - 4 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * NC * pow(z, -1) * CF - 4 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * NC * CF
            result += -2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * NC * z * CF + 3 * Li3(1 - z) * pow(NC, -1) * pow(z, -1) * CF - 2 * Li3(1 - z) * pow(NC, -1) * CF + Li3(1 - z) * pow(NC, -1) * z * CF + 7 * Li3(1 - z) * NC * pow(z, -1) * CF + 8 * Li3(1 - z) * NC * CF + 6 * Li3(1 - z) * NC * z * CF + 2 * Li3(-z) * NC * pow(z, -1) * CF + 2 * Li3(-z) * NC * CF + Li3(-z) * NC * z * CF + 4 * Li3(1 / (1 + z)) * NC * pow(z, -1) * CF + 4 * Li3(1 / (1 + z)) * NC * CF + 2 * Li3(1 / (1 + z)) * NC * z * CF - 4 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * NC * pow(z, -1) * CF - 4 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * NC * CF - 2 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * NC * z * CF - 6 * Li3(z) * pow(NC, -1) * pow(z, -1) * CF + 8 * Li3(z) * pow(NC, -1) * CF - 4 * Li3(z) * pow(NC, -1) * z * CF + 20 * Li3(z) * NC * pow(z, -1) * CF - 2 * Li3(z) * NC * CF + 15 * Li3(z) * NC * z * CF + Li2(-z) * NC * z * CF - 3.0 / 2.0 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF + Li2(z) * pow(NC, -1) * z * CF + 89.0 / 6.0 * Li2(z) * NC * pow(z, -1) * CF - 2 * Li2(z) * NC * CF + Li2(z) * NC * z * CF - 4.0 / 3.0 * Li2(z) * NC * pow(z, 2) * CF
            result_0r = 9.0 / 2.0 * pow(NC, -1) * pow(z, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF - 17.0 / 4.0 * pow(NC, -1) * CF - 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 2.0 * pow(NC, -1) * z * CF + 5.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 55.0 / 18.0 * NC * pow(z, -1) * CF - 2.0 / 3.0 * NC * pow(z, -1) * pow(pi, 2) * CF + 95.0 / 12.0 * NC * CF + 1.0 / 6.0 * NC * pow(pi, 2) * CF - 31.0 / 6.0 * NC * z * CF - 3.0 / 4.0 * NC * z * pow(pi, 2) * CF - 13.0 / 9.0 * NC * pow(z, 2) * CF + 3.0 / 2.0 * ln(z) * pow(NC, -1) * pow(z, -1) * CF - 89.0 / 6.0 * ln(z) * NC * pow(z, -1) * CF + 2 * ln(z) * NC * CF + 2 * ln(z) * NC * z * CF + 4.0 / 3.0 * ln(z) * NC * pow(z, 2) * CF + 4 * ln(z) * ln(1 + z) * NC * pow(z, -1) * CF + 4 * ln(z) * ln(1 + z) * NC * CF + 2 * ln(z) * ln(1 + z) * NC * z * CF - pow(ln(z), 2) * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF - 6 * pow(ln(z), 2) * NC * pow(z, -1) * CF - 3 * pow(ln(z), 2) * NC * CF - 11.0 / 2.0 * pow(ln(z), 2) * NC * z * CF + 2 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * ln(omz) * pow(NC, -1) * CF + ln(z) * ln(omz) * pow(NC, -1) * z * CF + 6 * ln(z) * ln(omz) * NC * pow(z, -1) * CF - 6 * ln(z) * ln(omz) * NC * CF + 3 * ln(z) * ln(omz) * NC * z * CF + 3 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(omz) * pow(NC, -1) * CF + 3.0 / 4.0 * ln(omz) * pow(NC, -1) * z * CF - 40.0 / 3.0 * ln(omz) * NC * pow(z, -1) * CF + 12 * ln(omz) * NC * CF + 1.0 / 4.0 * ln(omz) * NC * z * CF + 4.0 / 3.0 * ln(omz) * NC * pow(z, 2) * CF - 2 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * CF + 2 * pow(ln(omz), 2) * pow(NC, -1) * CF - pow(ln(omz), 2) * pow(NC, -1) * z * CF + 4 * pow(ln(omz), 2) * NC * pow(z, -1) * CF - 4 * pow(ln(omz), 2) * NC * CF + 2 * pow(ln(omz), 2) * NC * z * CF + 4 * Li2(-z) * NC * pow(z, -1) * CF + 4 * Li2(-z) * NC * CF + 2 * Li2(-z) * NC * z * CF + 6 * Li2(z) * pow(NC, -1) * pow(z, -1) * CF - 5 * Li2(z) * pow(NC, -1) * CF + 5.0 / 2.0 * Li2(z) * pow(NC, -1) * z * CF + 6 * Li2(z) * NC * pow(z, -1) * CF + Li2(z) * NC * CF + 11.0 / 2.0 * Li2(z) * NC * z * CF
            result_1r = 3 * pow(NC, -1) * pow(z, -1) * CF - 4 * pow(NC, -1) * CF + 3.0 / 4.0 * pow(NC, -1) * z * CF - 40.0 / 3.0 * NC * pow(z, -1) * CF + 12 * NC * CF + 1.0 / 4.0 * NC * z * CF + 4.0 / 3.0 * NC * pow(z, 2) * CF - 2 * ln(z) * pow(NC, -1) * pow(z, -1) * CF + ln(z) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * z * CF - 2 * ln(z) * NC * pow(z, -1) * CF - 5 * ln(z) * NC * CF - 7.0 / 2.0 * ln(z) * NC * z * CF - 4 * ln(omz) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(omz) * pow(NC, -1) * CF - 2 * ln(omz) * pow(NC, -1) * z * CF + 8 * ln(omz) * NC * pow(z, -1) * CF - 8 * ln(omz) * NC * CF + 4 * ln(omz) * NC * z * CF
            result_2r = -3 * pow(NC, -1) * pow(z, -1) * CF + 3 * pow(NC, -1) * CF - 3.0 / 2.0 * pow(NC, -1) * z * CF + 3 * NC * pow(z, -1) * CF - 3 * NC * CF + 3.0 / 2.0 * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2 + result_2r * ln(1 - x) * ln(1 - x) * ln(1 - x) / 3
        elif orders == "001":
            result += -9.0 / 2.0 * LMUA * pow(NC, -1) * pow(z, -1) * CF - 1.0 / 3.0 * LMUA * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 17.0 / 4.0 * LMUA * pow(NC, -1) * CF + 1.0 / 2.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF - 7.0 / 4.0 * LMUA * pow(NC, -1) * z * CF - 1.0 / 4.0 * LMUA * pow(NC, -1) * z * pow(pi, 2) * CF + 55.0 / 18.0 * LMUA * NC * pow(z, -1) * CF + 1.0 / 3.0 * LMUA * NC * pow(z, -1) * pow(pi, 2) * CF - 95.0 / 12.0 * LMUA * NC * CF + 1.0 / 6.0 * LMUA * NC * pow(pi, 2) * CF + 31.0 / 12.0 * LMUA * NC * z * CF + 7.0 / 12.0 * LMUA * NC * z * pow(pi, 2) * CF + 13.0 / 9.0 * LMUA * NC * pow(z, 2) * CF - 4 * Li2(-z) * LMUA * NC * pow(z, -1) * CF - 4 * Li2(-z) * LMUA * NC * CF - 2 * Li2(-z) * LMUA * NC * z * CF - 6 * Li2(z) * LMUA * pow(NC, -1) * pow(z, -1) * CF + 5 * Li2(z) * LMUA * pow(NC, -1) * CF - 5.0 / 2.0 * Li2(z) * LMUA * pow(NC, -1) * z * CF - 6 * Li2(z) * LMUA * NC * pow(z, -1) * CF - Li2(z) * LMUA * NC * CF - 11.0 / 2.0 * Li2(z) * LMUA * NC * z * CF - 3.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) * CF + 5.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * CF + 49.0 / 6.0 * ln(omz) * LMUA * NC * pow(z, -1) * CF - 41.0 / 6.0 * ln(omz) * LMUA * NC * CF - 17.0 / 6.0 * ln(omz) * LMUA * NC * z * CF - 4.0 / 3.0 * ln(omz) * LMUA * NC * pow(z, 2) * CF + 2.0 / 3.0 * ln(omz) * LMUA * NF * pow(z, -1) * CF - 2.0 / 3.0 * ln(omz) * LMUA * NF * CF + 1.0 / 3.0 * ln(omz) * LMUA * NF * z * CF + 2 * pow(ln(omz), 2) * LMUA * pow(NC, -1) * pow(z, -1) * CF - 2 * pow(ln(omz), 2) * LMUA * pow(NC, -1) * CF + pow(ln(omz), 2) * LMUA * pow(NC, -1) * z * CF - 4 * pow(ln(omz), 2) * LMUA * NC * pow(z, -1) * CF + 4 * pow(ln(omz), 2) * LMUA * NC * CF - 2 * pow(ln(omz), 2) * LMUA * NC * z * CF - 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * CF + 3.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) * z * CF + 29.0 / 3.0 * ln(z) * LMUA * NC * pow(z, -1) * CF + 19.0 / 6.0 * ln(z) * LMUA * NC * CF - 55.0 / 12.0 * ln(z) * LMUA * NC * z * CF - 4.0 / 3.0 * ln(z) * LMUA * NC * pow(z, 2) * CF + 2.0 / 3.0 * ln(z) * LMUA * NF * pow(z, -1) * CF - 2.0 / 3.0 * ln(z) * LMUA * NF * CF + 1.0 / 3.0 * ln(z) * LMUA * NF * z * CF - 2 * ln(z) * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) * CF + 2 * ln(z) * ln(omz) * LMUA * pow(NC, -1) * CF - ln(z) * ln(omz) * LMUA * pow(NC, -1) * z * CF - 6 * ln(z) * ln(omz) * LMUA * NC * pow(z, -1) * CF + 6 * ln(z) * ln(omz) * LMUA * NC * CF - 3 * ln(z) * ln(omz) * LMUA * NC * z * CF - 4 * ln(z) * ln(1 + z) * LMUA * NC * pow(z, -1) * CF - 4 * ln(z) * ln(1 + z) * LMUA * NC * CF - 2 * ln(z) * ln(1 + z) * LMUA * NC * z * CF + pow(ln(z), 2) * LMUA * pow(NC, -1) * CF - 1.0 / 2.0 * pow(ln(z), 2) * LMUA * pow(NC, -1) * z * CF + 6 * pow(ln(z), 2) * LMUA * NC * pow(z, -1) * CF + 3 * pow(ln(z), 2) * LMUA * NC * CF + 11.0 / 2.0 * pow(ln(z), 2) * LMUA * NC * z * CF + 1.0 / 3.0 * LMUA * NF * z * CF
            result_0r = -1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF + 4 * ln(z) * LMUA * NC * pow(z, -1) * CF + 3 * ln(z) * LMUA * NC * CF + 9.0 / 2.0 * ln(z) * LMUA * NC * z * CF + 2 * ln(omz) * LMUA * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * CF + ln(omz) * LMUA * pow(NC, -1) * z * CF - 6 * ln(omz) * LMUA * NC * pow(z, -1) * CF + 6 * ln(omz) * LMUA * NC * CF - 3 * ln(omz) * LMUA * NC * z * CF - 3.0 / 2.0 * LMUA * pow(NC, -1) * pow(z, -1) * CF + 5.0 / 2.0 * LMUA * pow(NC, -1) * CF - LMUA * pow(NC, -1) * z * CF + 49.0 / 6.0 * LMUA * NC * pow(z, -1) * CF - 41.0 / 6.0 * LMUA * NC * CF - 11.0 / 6.0 * LMUA * NC * z * CF - 4.0 / 3.0 * LMUA * NC * pow(z, 2) * CF + 2.0 / 3.0 * LMUA * NF * pow(z, -1) * CF - 2.0 / 3.0 * LMUA * NF * CF + 1.0 / 3.0 * LMUA * NF * z * CF + ln(z) * LMUA * pow(NC, -1) * CF
            result_1r = +2 * LMUA * pow(NC, -1) * pow(z, -1) * CF - 2 * LMUA * pow(NC, -1) * CF + LMUA * pow(NC, -1) * z * CF - 2 * LMUA * NC * pow(z, -1) * CF + 2 * LMUA * NC * CF - LMUA * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2
        elif orders == "010":
            result += -1.0 / 3.0 * LMUF * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 3.0 / 4.0 * LMUF * pow(NC, -1) * z * CF - 1.0 / 6.0 * LMUF * pow(NC, -1) * z * pow(pi, 2) * CF + 1.0 / 3.0 * LMUF * NC * pow(z, -1) * pow(pi, 2) * CF - 1.0 / 3.0 * LMUF * NC * pow(pi, 2) * CF - 3.0 / 4.0 * LMUF * NC * z * CF + 1.0 / 6.0 * LMUF * NC * z * pow(pi, 2) * CF + 3.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 3.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * CF + 3.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) * z * CF - 3.0 / 2.0 * ln(omz) * LMUF * NC * pow(z, -1) * CF + 3.0 / 2.0 * ln(omz) * LMUF * NC * CF - 3.0 / 4.0 * ln(omz) * LMUF * NC * z * CF + 3.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 3.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * CF + 3.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) * z * CF - 3.0 / 2.0 * ln(z) * LMUF * NC * pow(z, -1) * CF + 3.0 / 2.0 * ln(z) * LMUF * NC * CF - 3.0 / 4.0 * ln(z) * LMUF * NC * z * CF
            result_0r = +2 * ln(omz) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(omz) * LMUF * pow(NC, -1) * CF + ln(omz) * LMUF * pow(NC, -1) * z * CF - 2 * ln(omz) * LMUF * NC * pow(z, -1) * CF + 2 * ln(omz) * LMUF * NC * CF - ln(omz) * LMUF * NC * z * CF + 2 * ln(z) * LMUF * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * LMUF * pow(NC, -1) * CF + ln(z) * LMUF * pow(NC, -1) * z * CF - 2 * ln(z) * LMUF * NC * pow(z, -1) * CF + 2 * ln(z) * LMUF * NC * CF - ln(z) * LMUF * NC * z * CF + 3.0 / 2.0 * LMUF * pow(NC, -1) * pow(z, -1) * CF - 3.0 / 2.0 * LMUF * pow(NC, -1) * CF + 7.0 / 4.0 * LMUF * pow(NC, -1) * z * CF - 3.0 / 2.0 * LMUF * NC * pow(z, -1) * CF + 3.0 / 2.0 * LMUF * NC * CF - 7.0 / 4.0 * LMUF * NC * z * CF
            result_1r = +4 * LMUF * pow(NC, -1) * pow(z, -1) * CF - 4 * LMUF * pow(NC, -1) * CF + 2 * LMUF * pow(NC, -1) * z * CF - 4 * LMUF * NC * pow(z, -1) * CF + 4 * LMUF * NC * CF - 2 * LMUF * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2
        elif orders == "100":
            result += +11.0 / 6.0 * LMUR * NC * z * CF - 1.0 / 3.0 * LMUR * NF * z * CF + 11.0 / 3.0 * ln(omz) * LMUR * NC * pow(z, -1) * CF - 11.0 / 3.0 * ln(omz) * LMUR * NC * CF + 11.0 / 6.0 * ln(omz) * LMUR * NC * z * CF - 2.0 / 3.0 * ln(omz) * LMUR * NF * pow(z, -1) * CF + 2.0 / 3.0 * ln(omz) * LMUR * NF * CF - 1.0 / 3.0 * ln(omz) * LMUR * NF * z * CF + 11.0 / 3.0 * ln(z) * LMUR * NC * pow(z, -1) * CF - 11.0 / 3.0 * ln(z) * LMUR * NC * CF + 11.0 / 6.0 * ln(z) * LMUR * NC * z * CF - 2.0 / 3.0 * ln(z) * LMUR * NF * pow(z, -1) * CF + 2.0 / 3.0 * ln(z) * LMUR * NF * CF - 1.0 / 3.0 * ln(z) * LMUR * NF * z * CF
            result_0r = +11.0 / 3.0 * LMUR * NC * pow(z, -1) * CF - 11.0 / 3.0 * LMUR * NC * CF + 11.0 / 6.0 * LMUR * NC * z * CF - 2.0 / 3.0 * LMUR * NF * pow(z, -1) * CF + 2.0 / 3.0 * LMUR * NF * CF - 1.0 / 3.0 * LMUR * NF * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "011":
            result += -3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * pow(z, -1) * CF + 3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF - 3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * z * CF + 3.0 / 2.0 * LMUA * LMUF * NC * pow(z, -1) * CF - 3.0 / 2.0 * LMUA * LMUF * NC * CF + 3.0 / 4.0 * LMUA * LMUF * NC * z * CF
            result_0r = -2 * LMUA * LMUF * pow(NC, -1) * pow(z, -1) * CF + 2 * LMUA * LMUF * pow(NC, -1) * CF - LMUA * LMUF * pow(NC, -1) * z * CF + 2 * LMUA * LMUF * NC * pow(z, -1) * CF - 2 * LMUA * LMUF * NC * CF + LMUA * LMUF * NC * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "101":
            result += -11.0 / 3.0 * LMUA * LMUR * NC * pow(z, -1) * CF + 11.0 / 3.0 * LMUA * LMUR * NC * CF - 11.0 / 6.0 * LMUA * LMUR * NC * z * CF + 2.0 / 3.0 * LMUA * LMUR * NF * pow(z, -1) * CF - 2.0 / 3.0 * LMUA * LMUR * NF * CF + 1.0 / 3.0 * LMUA * LMUR * NF * z * CF
        elif orders == "002":
            result += -ln(omz) * pow(LMUA, 2) * pow(NC, -1) * pow(z, -1) * CF + ln(omz) * pow(LMUA, 2) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(omz) * pow(LMUA, 2) * pow(NC, -1) * z * CF + 3 * ln(omz) * pow(LMUA, 2) * NC * pow(z, -1) * CF - 3 * ln(omz) * pow(LMUA, 2) * NC * CF + 3.0 / 2.0 * ln(omz) * pow(LMUA, 2) * NC * z * CF - 1.0 / 2.0 * pow(LMUA, 2) * pow(NC, -1) * CF + 1.0 / 8.0 * pow(LMUA, 2) * pow(NC, -1) * z * CF - 3.0 / 2.0 * pow(LMUA, 2) * NC * pow(z, -1) * CF + 5.0 / 6.0 * pow(LMUA, 2) * NC * CF + 53.0 / 24.0 * pow(LMUA, 2) * NC * z * CF + 2.0 / 3.0 * pow(LMUA, 2) * NC * pow(z, 2) * CF - 2.0 / 3.0 * pow(LMUA, 2) * NF * pow(z, -1) * CF + 2.0 / 3.0 * pow(LMUA, 2) * NF * CF - 1.0 / 3.0 * pow(LMUA, 2) * NF * z * CF - 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * pow(NC, -1) * CF + 1.0 / 4.0 * ln(z) * pow(LMUA, 2) * pow(NC, -1) * z * CF - 2 * ln(z) * pow(LMUA, 2) * NC * pow(z, -1) * CF - 3.0 / 2.0 * ln(z) * pow(LMUA, 2) * NC * CF - 9.0 / 4.0 * ln(z) * pow(LMUA, 2) * NC * z * CF
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2q_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += 1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) * CF + 1.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF - 1.0 / 2.0 * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF + 1.0 / 2.0 * pow(NC, -1) * pow(x, -1) * CF - 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 12 * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * pow(NC, -1) * pow(z, -1) * CF - 4 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 2 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF - 6 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 4 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF + 4.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 1.0 / 2.0 * pow(NC, -1) * pow(poly2, -1) * CF + 12 * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 4 * pow(NC, -1) * CF * pow(omx, -1) - 8 * pow(NC, -1) * CF * pow(omz, -1) - 1.0 / 2.0 * pow(NC, -1) * CF * pow(omxmz, -1) + 23 * pow(NC, -1) * CF - 8 * pow(NC, -1) * pow(rln2, 2) * CF * pow(omx, -1)
                result += +4 * pow(NC, -1) * pow(rln2, 2) * CF - 6 * pow(NC, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) - 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 3.0 / 2.0 * pow(NC, -1) * pow(pi, 2) * CF + 4 * pow(NC, -1) * z * CF * pow(omx, -1) - 16 * pow(NC, -1) * z * CF - 4 * pow(NC, -1) * z * pow(rln2, 2) * CF * pow(omx, -1) - 4.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF + 8 * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 15.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * CF + 2 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF + 2 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) + 1.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - pow(NC, -1) * x * pow(poly2, -1) * CF - 4 * pow(NC, -1) * x * CF * pow(omz, -1) - 1.0 / 2.0 * pow(NC, -1) * x * CF * pow(xmz, -1) + 1.0 / 2.0 * pow(NC, -1) * x * CF * pow(omxmz, -1) - 19.0 / 2.0 * pow(NC, -1) * x * CF + 4 * pow(NC, -1) * x * pow(rln2, 2) * CF + 6 * pow(NC, -1) * x * sqrtxz1 * rln2 * CF - 2.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) + 11.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 25 * pow(NC, -1) * x * z * CF + 4 * pow(NC, -1) * x * z * pow(rln2, 2) * CF + 13.0 / 6.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF + pow(NC, -1) * pow(x, 2) * pow(poly2, -1) * CF + pow(NC, -1) * pow(x, 2) * CF * pow(xmz, -1) + 1.0 / 2.0 * pow(NC, -1) * pow(x, 2) * CF - 1.0 / 2.0 * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF - pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 2.0 * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF
                result += +1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF + 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * pow(z, -1) * CF - 26.0 / 9.0 * pow(x, -1) * CF + 1.0 / 3.0 * pow(x, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF + 4.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 71.0 / 36.0 * pow(z, -1) * CF + 1.0 / 6.0 * pow(z, -1) * pow(pi, 2) * CF + 10.0 / 3.0 * CF + 6 * pow(rln2, 2) * CF * pow(omx, -1) + 6 * sqrtxz1 * rln2 * CF * pow(omx, -1) - 5.0 / 6.0 * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(pi, 2) * CF * pow(opx, -1) - 5.0 / 6.0 * pow(pi, 2) * CF + 37.0 / 12.0 * z * CF + 4 * z * pow(rln2, 2) * CF * pow(omx, -1) - 8 * z * pow(rln2, 2) * CF + 5.0 / 3.0 * z * pow(pi, 2) * CF * pow(omx, -1) + 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * z * pow(pi, 2) * CF + 43.0 / 18.0 * pow(z, 2) * CF + 16 * pow(z, 2) * pow(rln2, 2) * CF * pow(omx, -1) - 2 * pow(z, 2) * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 121.0 / 36.0 * x * pow(z, -1) * CF + 1.0 / 6.0 * x * pow(z, -1) * pow(pi, 2) * CF + 2 * x * CF - 4 * x * pow(rln2, 2) * CF - 4 * x * sqrtxz1 * rln2 * CF - 1.0 / 6.0 * x * pow(pi, 2) * CF - 95.0 / 12.0 * x * z * CF - x * z * pow(pi, 2) * CF - 77.0 / 18.0 * x * pow(z, 2) * CF - 16 * x * pow(z, 2) * pow(rln2, 2) * CF + 4.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * pow(z, -1) * CF + 44.0 / 9.0 * pow(x, 2) * CF + NC * CF * pow(omx, -1) + NC * CF * pow(omz, -1) + 1.0 / 2.0 * NC * CF * pow(omxmz, -1) - 37.0 / 18.0 * NC * CF - NC * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) + 1.0 / 2.0 * NC * pow(pi, 2) * CF * pow(omx, -1)
                result += +1.0 / 2.0 * NC * pow(pi, 2) * CF * pow(omz, -1) - 13.0 / 6.0 * NC * pow(pi, 2) * CF - NC * z * CF * pow(omx, -1) - 8.0 / 3.0 * NC * z * CF + 1.0 / 2.0 * NC * z * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 6.0 * NC * z * pow(pi, 2) * CF - NC * x * CF * pow(omz, -1) - 1.0 / 2.0 * NC * x * CF * pow(xmz, -1) - 1.0 / 2.0 * NC * x * CF * pow(omxmz, -1) - NC * x * CF + 1.0 / 2.0 * NC * x * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 6.0 * NC * x * pow(pi, 2) * CF + 47.0 / 18.0 * NC * x * z * CF - 13.0 / 6.0 * NC * x * z * pow(pi, 2) * CF + NC * pow(x, 2) * CF * pow(xmz, -1) + NC * pow(x, 2) * CF - NC * pow(x, 3) * CF * pow(xmz, -1) - 10.0 / 9.0 * NF * CF + 2.0 / 3.0 * NF * z * CF - 16.0 / 9.0 * NF * x * z * CF
                result += -9 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF + ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF + 5 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 9 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF - 23 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF + 9 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 5 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 9 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF + 23 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF + 9.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - 1.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 5.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 9.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF + 23.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF
                result += -3.0 / 2.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF + 9 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF - InvTanInt(z * sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF - 5 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 9 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF + 23 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF - 9.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(x, -1) * z * sqrtxz3 * CF + 1.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * sqrtxz3 * CF + 5.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 9.0 / 2.0 * InvTanInt(sqrtxz3) * pow(NC, -1) * x * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF - 23.0 / 2.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF + 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 * CF + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF
                result += -4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2 * CF - 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * sqrtxz1 * CF - 4 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 * CF - 8 * ln(1 + sqrtxz1 - z) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * rln2 * CF - 6 * ln(1 + sqrtxz1 - z) * sqrtxz1 * CF * pow(omx, -1) + 12 * ln(1 + sqrtxz1 - z) * z * rln2 * CF - 24 * ln(1 + sqrtxz1 - z) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 6 * ln(1 + sqrtxz1 - z) * x * rln2 * CF + 4 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF - 4 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF + 24 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF + 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF * pow(omx, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF
                result += +4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * rln2 * CF + 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 + z) * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * z * rln2 * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 + z) * z * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 + z) * x * rln2 * CF + 4 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF + 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 8 * ln(x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * CF + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1)
                result += -8 * ln(x) * pow(NC, -1) * pow(x, -2) * z * CF + 4 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) * CF + 7.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF - 9 * ln(x) * pow(NC, -1) * pow(x, -1) * CF + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 48 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) - 87.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 16 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 13 * ln(x) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) + ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF - 3 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 2 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(poly2, -2) * CF - 5.0 / 4.0 * ln(x) * pow(NC, -1) * pow(poly2, -1) * CF - 36 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(xmz, -1) - 2 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + 16 * ln(x) * pow(NC, -1) * CF * pow(omz, -1) + 8 * ln(x) * pow(NC, -1) * CF * pow(opx, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * CF * pow(xmz, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * CF * pow(omxmz, -1) + 9 * ln(x) * pow(NC, -1) * CF - 4 * ln(x) * pow(NC, -1) * rln2 * CF * pow(omx, -1) + 2 * ln(x) * pow(NC, -1) * rln2 * CF - 3 * ln(x) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) - 37.0 / 2.0 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(x) * pow(NC, -1) * z * CF - 2 * ln(x) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 32 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1)
                result += +30 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF + ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 3.0 / 4.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -2) * CF + 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * pow(poly2, -1) * CF + 20 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 3.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF * pow(xmz, -1) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF * pow(omxmz, -2) - 1.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF * pow(omxmz, -1) + 5 * ln(x) * pow(NC, -1) * x * CF + 2 * ln(x) * pow(NC, -1) * x * rln2 * CF + 3 * ln(x) * pow(NC, -1) * x * sqrtxz1 * CF + 10 * ln(x) * pow(NC, -1) * x * z * CF + 2 * ln(x) * pow(NC, -1) * x * z * rln2 * CF - 2 * ln(x) * pow(NC, -1) * x * pow(z, 3) * CF * pow(xmz, -2) + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) * CF + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) * CF + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * CF * pow(xmz, -2) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -2) + 5 * ln(x) * pow(NC, -1) * pow(x, 2) * CF + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) * CF - 5.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF - ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -2) - 9 * ln(x) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) - 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) * CF + 7.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF + 3 * ln(x) * pow(NC, -1) * pow(x, 4) * CF * pow(xmz, -2) + 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) * CF - 3.0 / 4.0 * ln(x) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) * CF + 4 * ln(x) * pow(x, -2) * CF * pow(opx, -1) - 4 * ln(x) * pow(x, -2) * CF - 8 * ln(x) * pow(x, -2) * z * CF * pow(opx, -1) + 8 * ln(x) * pow(x, -2) * z * CF + 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1)
                result += -16 * ln(x) * pow(x, -2) * pow(z, 2) * CF + 4 * ln(x) * pow(x, -1) * CF - 8 * ln(x) * pow(x, -1) * z * CF + 16 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * ln(x) * pow(z, -1) * CF * pow(omx, -1) + 5.0 / 3.0 * ln(x) * pow(z, -1) * CF - 9.0 / 2.0 * ln(x) * CF * pow(omx, -1) - 4 * ln(x) * CF * pow(opx, -1) - 4 * ln(x) * CF + 5 * ln(x) * rln2 * CF * pow(omx, -1) + 2 * ln(x) * rln2 * CF + 3 * ln(x) * sqrtxz1 * CF * pow(omx, -1) + 11.0 / 2.0 * ln(x) * z * CF * pow(omx, -1) + 8 * ln(x) * z * CF * pow(opx, -1) + 3.0 / 2.0 * ln(x) * z * CF - 2 * ln(x) * z * rln2 * CF * pow(omx, -1) - 8 * ln(x) * z * rln2 * CF + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF * pow(omx, -1) + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF + 16 * ln(x) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 11.0 / 3.0 * ln(x) * x * pow(z, -1) * CF + ln(x) * x * CF * pow(xmz, -1) - 3 * ln(x) * x * CF - 4 * ln(x) * x * rln2 * CF - 2 * ln(x) * x * sqrtxz1 * CF + 3.0 / 2.0 * ln(x) * x * z * CF + 4 * ln(x) * x * z * rln2 * CF - 8.0 / 3.0 * ln(x) * x * pow(z, 2) * CF - 16 * ln(x) * x * pow(z, 2) * rln2 * CF + 2 * ln(x) * pow(x, 2) * pow(z, -1) * CF - 2 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 6 * ln(x) * pow(x, 2) * CF + 2 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) - 6 * ln(x) * NC * CF * pow(omx, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(x) * NC * CF * pow(omx, -1) * pow(xmz, -1) - 5.0 / 2.0 * ln(x) * NC * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * NC * CF * pow(xmz, -1) - 3.0 / 2.0 * ln(x) * NC * CF * pow(omxmz, -1) - 31.0 / 6.0 * ln(x) * NC * CF + 5.0 / 2.0 * ln(x) * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * NC * z * CF + 6 * ln(x) * NC * x * CF * pow(omz, -1) + 3.0 / 2.0 * ln(x) * NC * x * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(x) * NC * x * CF * pow(omxmz, -2) - 1.0 / 2.0 * ln(x) * NC * x * CF * pow(omxmz, -1) + 9.0 / 2.0 * ln(x) * NC * x * CF + 11.0 / 6.0 * ln(x) * NC * x * z * CF + 1.0 / 2.0 * ln(x) * NC * pow(x, 2) * CF * pow(xmz, -2)
                result += +2 * ln(x) * NC * pow(x, 2) * CF * pow(xmz, -1) - 1.0 / 2.0 * ln(x) * NC * pow(x, 2) * CF * pow(omxmz, -2) - ln(x) * NC * pow(x, 3) * CF * pow(xmz, -2) - ln(x) * NC * pow(x, 3) * CF * pow(xmz, -1) + ln(x) * NC * pow(x, 4) * CF * pow(xmz, -2) + ln(x) * NF * CF * pow(omx, -1) - 4.0 / 3.0 * ln(x) * NF * CF + ln(x) * NF * z * CF * pow(omx, -1) - 4.0 / 3.0 * ln(x) * NF * x * z * CF - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF
                result += -3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF - 9 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 51.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 18 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 18 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 5.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 8.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + 8 * ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF
                result += +16 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF - 16 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 8 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF + 9 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 51.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 18 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 18 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF
                result += -3.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 5.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 8.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 16 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 16 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 8 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF
                result += -2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 3 * ln(x) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF - ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1)
                result += +ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF - ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * x * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF - 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * ln(x) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(x) * ln(1 + x) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z * CF - 4 * ln(x) * ln(1 + x) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x) * CF + 8 * ln(x) * ln(1 + x) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x) * z * CF - 8 * ln(x) * ln(1 + x) * pow(z, 2) * CF * pow(opx, -1) - 6 * ln(x) * ln(1 + x) * x * CF + 12 * ln(x) * ln(1 + x) * x * z * CF - 8 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1)
                result += -2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * CF - ln(x) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * z) * pow(x, -2) * CF + 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF - ln(x) * ln(1 + x * z) * pow(x, -1) * CF + 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * CF * pow(omx, -1) - ln(x) * ln(1 + x * z) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * x * CF
                result += -8 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF + 2 * ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(z + x) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(z + x) * pow(NC, -1) * CF + 2 * ln(x) * ln(z + x) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * z * CF - 2 * ln(x) * ln(z + x) * CF * pow(omx, -1) + ln(x) * ln(z + x) * CF - 4 * ln(x) * ln(z + x) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z + x) * z * CF - 4 * ln(x) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) + ln(x) * ln(z + x) * x * CF + 2 * ln(x) * ln(z + x) * x * z * CF + 4 * ln(x) * ln(z + x) * x * pow(z, 2) * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 16 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) + 16 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 5 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + 5.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 5 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += +13 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) - 5 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) - 17.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF + 11 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 31.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF * pow(opx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF + 3 * pow(ln(x), 2) * pow(x, -2) * z * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(x, -2) * z * CF - 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -1) * CF + 3 * pow(ln(x), 2) * pow(x, -1) * z * CF - 6 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - pow(ln(x), 2) * pow(z, -1) * CF - 2 * pow(ln(x), 2) * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(x), 2) * CF * pow(opx, -1) + 4 * pow(ln(x), 2) * CF + 4 * pow(ln(x), 2) * z * CF * pow(omx, -1) - 5 * pow(ln(x), 2) * z * CF * pow(opx, -1) - 4 * pow(ln(x), 2) * z * CF - 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) - pow(ln(x), 2) * x * pow(z, -1) * CF + 5 * pow(ln(x), 2) * x * CF - 6 * pow(ln(x), 2) * x * z * CF + 4 * pow(ln(x), 2) * x * pow(z, 2) * CF + 8 * pow(ln(x), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) - 5 * pow(ln(x), 2) * NC * CF * pow(omx, -1) - 4 * pow(ln(x), 2) * NC * CF * pow(omz, -1)
                result += +17.0 / 2.0 * pow(ln(x), 2) * NC * CF - 5 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(x), 2) * NC * z * CF - 4 * pow(ln(x), 2) * NC * x * CF * pow(omz, -1) + 1.0 / 2.0 * pow(ln(x), 2) * NC * x * CF + 17.0 / 2.0 * pow(ln(x), 2) * NC * x * z * CF + ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z * CF + ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 16 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) - 16 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 6 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 23.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(opx, -1) + 9 * ln(x) * ln(z) * pow(NC, -1) * CF - 27.0 / 2.0 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(opx, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 12 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * x * CF + 19 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF + ln(x) * ln(z) * pow(x, -2) * CF * pow(opx, -1)
                result += -ln(x) * ln(z) * pow(x, -2) * CF - 2 * ln(x) * ln(z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(x, -2) * z * CF + 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF + ln(x) * ln(z) * pow(x, -1) * CF - 2 * ln(x) * ln(z) * pow(x, -1) * z * CF + 4 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(z) * pow(z, -1) * CF + ln(x) * ln(z) * CF * pow(omx, -1) + ln(x) * ln(z) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * CF - 7 * ln(x) * ln(z) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(z) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * z * CF + 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(z) * x * pow(z, -1) * CF + 6 * ln(x) * ln(z) * x * z * CF - 4 * ln(x) * ln(z) * x * pow(z, 2) * CF - 8 * ln(x) * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) + 7.0 / 2.0 * ln(x) * ln(z) * NC * CF * pow(omx, -1) + 4 * ln(x) * ln(z) * NC * CF * pow(omz, -1) - 5 * ln(x) * ln(z) * NC * CF + 7.0 / 2.0 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) + 4 * ln(x) * ln(z) * NC * x * CF * pow(omz, -1) - 5 * ln(x) * ln(z) * NC * x * z * CF - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * CF - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z * CF - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += +8 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 28 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 17 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 7 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(opx, -1) + 9 * ln(x) * ln(omx) * pow(NC, -1) * CF - 17 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(x) * ln(omx) * pow(NC, -1) * z * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 21 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 15 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 23 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 2 * ln(x) * ln(omx) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(omx) * pow(x, -2) * CF + 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF - 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF - 2 * ln(x) * ln(omx) * pow(x, -1) * CF + 4 * ln(x) * ln(omx) * pow(x, -1) * z * CF - 8 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 3 * ln(x) * ln(omx) * CF * pow(omx, -1) + 2 * ln(x) * ln(omx) * CF * pow(opx, -1) - 6 * ln(x) * ln(omx) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(omx) * z * CF * pow(opx, -1) + 8 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(omx) * x * CF + 4 * ln(x) * ln(omx) * x * z * CF - 8 * ln(x) * ln(omx) * x * pow(z, 2) * CF - 10 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1)
                result += +8 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) + 5 * ln(x) * ln(omx) * NC * CF * pow(omz, -1) - 13 * ln(x) * ln(omx) * NC * CF + 8 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) - ln(x) * ln(omx) * NC * z * CF + 5 * ln(x) * ln(omx) * NC * x * CF * pow(omz, -1) - ln(x) * ln(omx) * NC * x * CF - 13 * ln(x) * ln(omx) * NC * x * z * CF + 18 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 16 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 6 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 14 * ln(x) * ln(omz) * pow(NC, -1) * CF - 16 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(x) * ln(omz) * pow(NC, -1) * z * CF - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 7 * ln(x) * ln(omz) * pow(NC, -1) * x * CF + 20 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + ln(x) * ln(omz) * pow(z, -1) * CF - 2 * ln(x) * ln(omz) * CF + ln(x) * ln(omz) * x * pow(z, -1) * CF - 2 * ln(x) * ln(omz) * x * CF - 12 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 8 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * NC * CF * pow(omz, -1) - 14 * ln(x) * ln(omz) * NC * CF + 8 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) - ln(x) * ln(omz) * NC * z * CF + 6 * ln(x) * ln(omz) * NC * x * CF * pow(omz, -1) - ln(x) * ln(omz) * NC * x * CF - 14 * ln(x) * ln(omz) * NC * x * z * CF + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF
                result += -4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(x) * ln(opx) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * ln(opx) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(opx) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * pow(x, -2) * CF - 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF + 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF + 2 * ln(x) * ln(opx) * pow(x, -1) * CF - 4 * ln(x) * ln(opx) * pow(x, -1) * z * CF + 8 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * CF - 4 * ln(x) * ln(opx) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * z * CF + 8 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * x * CF - 4 * ln(x) * ln(opx) * x * z * CF + 8 * ln(x) * ln(opx) * x * pow(z, 2) * CF - 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -2) * CF + 7.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, -1) * pow(poly2, -1) * CF - ln(z) * pow(NC, -1) * pow(x, -1) * CF - 24 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) + 27 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 8 * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) - 10 * ln(z) * pow(NC, -1) * pow(z, -1) * CF - 6 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1)
                result += +3 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF - 3 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 2 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF - 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(poly2, -2) * CF + 5.0 / 4.0 * ln(z) * pow(NC, -1) * pow(poly2, -1) * CF + 35.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(xmz, -1) + 6 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(xmz, -1) + 11.0 / 2.0 * ln(z) * pow(NC, -1) * CF - 12 * ln(z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) + 6 * ln(z) * pow(NC, -1) * rln2 * CF - 3 * ln(z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) + 11 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 7.0 / 2.0 * ln(z) * pow(NC, -1) * z * CF - 6 * ln(z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) + 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 17 * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 3 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 3.0 / 4.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -2) * CF + 1.0 / 2.0 * ln(z) * pow(NC, -1) * x * pow(poly2, -1) * CF - 8 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * pow(NC, -1) * x * CF * pow(xmz, -1) - 23.0 / 2.0 * ln(z) * pow(NC, -1) * x * CF + 6 * ln(z) * pow(NC, -1) * x * rln2 * CF + 3 * ln(z) * pow(NC, -1) * x * sqrtxz1 * CF - 25.0 / 2.0 * ln(z) * pow(NC, -1) * x * z * CF + 6 * ln(z) * pow(NC, -1) * x * z * rln2 * CF + 2 * ln(z) * pow(NC, -1) * x * pow(z, 3) * CF * pow(xmz, -2) - 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -2) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(x, 2) * CF * pow(xmz, -2)
                result += -5 * ln(z) * pow(NC, -1) * pow(x, 2) * CF + 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -2) * CF - 5.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 3) * pow(poly2, -1) * CF + ln(z) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -2) + 9 * ln(z) * pow(NC, -1) * pow(x, 3) * CF * pow(xmz, -1) + 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -2) * CF - 7.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 4) * pow(poly2, -1) * CF - 3 * ln(z) * pow(NC, -1) * pow(x, 4) * CF * pow(xmz, -2) + 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 5) * pow(poly2, -2) * CF + 3.0 / 4.0 * ln(z) * pow(NC, -1) * pow(x, 6) * pow(poly2, -2) * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * pow(z, -1) * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * CF * pow(omz, -1) - 4.0 / 3.0 * ln(z) * pow(x, -1) * CF + 1.0 / 6.0 * ln(z) * pow(z, -1) * CF - 3 * ln(z) * CF * pow(omx, -1) - ln(z) * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * CF + 7 * ln(z) * rln2 * CF * pow(omx, -1) - 2 * ln(z) * rln2 * CF + 3 * ln(z) * sqrtxz1 * CF * pow(omx, -1) - 3 * ln(z) * z * CF * pow(omx, -1) + 4 * ln(z) * z * CF + 10 * ln(z) * z * rln2 * CF * pow(omx, -1) - 8 * ln(z) * z * rln2 * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + 16 * ln(z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 5.0 / 6.0 * ln(z) * x * pow(z, -1) * CF + ln(z) * x * CF * pow(omz, -1) - ln(z) * x * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(z) * x * CF - 4 * ln(z) * x * rln2 * CF - 2 * ln(z) * x * sqrtxz1 * CF + ln(z) * x * z * CF - 4 * ln(z) * x * z * rln2 * CF + 4.0 / 3.0 * ln(z) * x * pow(z, 2) * CF - 16 * ln(z) * x * pow(z, 2) * rln2 * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * pow(z, -1) * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * CF * pow(omz, -1) + 2 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) + 10.0 / 3.0 * ln(z) * pow(x, 2) * CF - 2 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) + 3.0 / 2.0 * ln(z) * NC * CF * pow(omx, -1) * pow(xmz, -1)
                result += +ln(z) * NC * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * NC * CF * pow(xmz, -1) + 4 * ln(z) * NC * CF - 2 * ln(z) * NC * z * CF * pow(omx, -1) - ln(z) * NC * z * CF - 3 * ln(z) * NC * x * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * NC * x * CF * pow(xmz, -1) + ln(z) * NC * x * CF + 6 * ln(z) * NC * x * z * CF - 1.0 / 2.0 * ln(z) * NC * pow(x, 2) * CF * pow(xmz, -2) - 2 * ln(z) * NC * pow(x, 2) * CF * pow(xmz, -1) + ln(z) * NC * pow(x, 3) * CF * pow(xmz, -2) + ln(z) * NC * pow(x, 3) * CF * pow(xmz, -1) - ln(z) * NC * pow(x, 4) * CF * pow(xmz, -2) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * CF * pow(omx, -1)
                result += -2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * CF + 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * CF - 2 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * CF - 3 * ln(z) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF
                result += -2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * CF
                result += -2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * x * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF + 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * CF - ln(z) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * z) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF
                result += -ln(z) * ln(1 + x * z) * pow(x, -1) * CF + 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * CF * pow(omx, -1) - ln(z) * ln(1 + x * z) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * x * CF - 8 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF - 2 * ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF - 4 * ln(z) * ln(z + x) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(z + x) * pow(NC, -1) * CF - 2 * ln(z) * ln(z + x) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * z * CF + 2 * ln(z) * ln(z + x) * CF * pow(omx, -1) - ln(z) * ln(z + x) * CF + 4 * ln(z) * ln(z + x) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(z + x) * z * CF + 4 * ln(z) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) - ln(z) * ln(z + x) * x * CF - 2 * ln(z) * ln(z + x) * x * z * CF - 4 * ln(z) * ln(z + x) * x * pow(z, 2) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * CF + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF
                result += -pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF - 3 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) - pow(ln(z), 2) * pow(NC, -1) * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF + 3 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF + pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF - pow(ln(z), 2) * pow(x, -2) * z * CF * pow(opx, -1) + pow(ln(z), 2) * pow(x, -2) * z * CF + 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -1) * CF - pow(ln(z), 2) * pow(x, -1) * z * CF + 2 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - pow(ln(z), 2) * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * CF
                result += +2 * pow(ln(z), 2) * z * CF * pow(omx, -1) - pow(ln(z), 2) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * z * CF - 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) + pow(ln(z), 2) * x * CF - 6 * pow(ln(z), 2) * x * z * CF + 4 * pow(ln(z), 2) * x * pow(z, 2) * CF + 2 * pow(ln(z), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) - pow(ln(z), 2) * NC * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * CF - pow(ln(z), 2) * NC * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * NC * z * CF - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * CF - 1.0 / 2.0 * pow(ln(z), 2) * NC * x * z * CF - 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 8 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 3 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 5 * ln(z) * ln(omx) * pow(NC, -1) * CF + 8 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 9 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 6 * ln(z) * ln(omx) * pow(NC, -1) * x * CF - 11 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF - ln(z) * ln(omx) * CF - ln(z) * ln(omx) * x * CF - 2 * ln(z) * ln(omx) * x * z * CF + 4 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) - 2 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * NC * CF * pow(omz, -1) + 3 * ln(z) * ln(omx) * NC * CF - 2 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * NC * x * CF * pow(omz, -1) + 3 * ln(z) * ln(omx) * NC * x * z * CF - 14 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 13 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 5 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 12 * ln(z) * ln(omz) * pow(NC, -1) * CF + 13 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 11 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += -6 * ln(z) * ln(omz) * pow(NC, -1) * x * CF - 18 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + ln(z) * ln(omz) * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * x * CF + 4 * ln(z) * ln(omz) * x * z * CF + 2 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - ln(z) * ln(omz) * NC * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * NC * CF * pow(omz, -1) + 6 * ln(z) * ln(omz) * NC * CF - ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) - 2 * ln(z) * ln(omz) * NC * x * CF * pow(omz, -1) + 6 * ln(z) * ln(omz) * NC * x * z * CF - 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3.0 / 2.0 * ln(omx) * pow(NC, -1) * CF + 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(omx) * pow(NC, -1) * z * CF + 6 * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 3.0 / 2.0 * ln(omx) * pow(NC, -1) * x * CF - 11.0 / 2.0 * ln(omx) * pow(NC, -1) * x * z * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 6.0 * ln(omx) * pow(z, -1) * CF - 3.0 / 2.0 * ln(omx) * CF + 3.0 / 2.0 * ln(omx) * z * CF - 2.0 / 3.0 * ln(omx) * pow(z, 2) * CF - 5.0 / 6.0 * ln(omx) * x * pow(z, -1) * CF - 1.0 / 2.0 * ln(omx) * x * CF + 1.0 / 2.0 * ln(omx) * x * z * CF + 4.0 / 3.0 * ln(omx) * x * pow(z, 2) * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 4 * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) + 11.0 / 6.0 * ln(omx) * NC * CF - 4 * ln(omx) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(omx) * NC * z * CF - 4 * ln(omx) * NC * x * CF * pow(omz, -1) - 7.0 / 2.0 * ln(omx) * NC * x * CF - 1.0 / 6.0 * ln(omx) * NC * x * z * CF + 2.0 / 3.0 * ln(omx) * NF * CF + 2.0 / 3.0 * ln(omx) * NF * x * z * CF
                result += -5 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omz, -1) - 5.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF + 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * z * CF + 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 13.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) - 2 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) - 2 * pow(ln(omx), 2) * NC * CF * pow(omz, -1) + 11.0 / 2.0 * pow(ln(omx), 2) * NC * CF - 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * z * CF - 2 * pow(ln(omx), 2) * NC * x * CF * pow(omz, -1) + 1.0 / 2.0 * pow(ln(omx), 2) * NC * x * CF + 11.0 / 2.0 * pow(ln(omx), 2) * NC * x * z * CF - 8 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 7 * ln(omx) * ln(omz) * pow(NC, -1) * CF + 6 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(omx) * ln(omz) * pow(NC, -1) * z * CF
                result += +6 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 5 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF - 11 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - 4 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) - 4 * ln(omx) * ln(omz) * NC * CF * pow(omz, -1) + 11 * ln(omx) * ln(omz) * NC * CF - 4 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) + ln(omx) * ln(omz) * NC * z * CF - 4 * ln(omx) * ln(omz) * NC * x * CF * pow(omz, -1) + ln(omx) * ln(omz) * NC * x * CF + 11 * ln(omx) * ln(omz) * NC * x * z * CF - 6 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3.0 / 2.0 * ln(omz) * pow(NC, -1) * CF * pow(omxmz, -1) + 3 * ln(omz) * pow(NC, -1) * CF + 6 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(omz) * pow(NC, -1) * z * CF + 6 * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * x * CF * pow(omxmz, -2) + 1.0 / 2.0 * ln(omz) * pow(NC, -1) * x * CF * pow(omxmz, -1) - 2 * ln(omz) * pow(NC, -1) * x * CF - 4 * ln(omz) * pow(NC, -1) * x * z * CF - 1.0 / 2.0 * ln(omz) * pow(NC, -1) * pow(x, 2) * CF * pow(omxmz, -2) + 2.0 / 3.0 * ln(omz) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF + 1.0 / 6.0 * ln(omz) * pow(z, -1) * CF - 3.0 / 2.0 * ln(omz) * CF + 3.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF - 5.0 / 6.0 * ln(omz) * x * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * x * CF + 1.0 / 2.0 * ln(omz) * x * z * CF + 4.0 / 3.0 * ln(omz) * x * pow(z, 2) * CF - 2.0 / 3.0 * ln(omz) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omz) * pow(x, 2) * CF + 4 * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 3.0 / 2.0 * ln(omz) * NC * CF * pow(omxmz, -1) + 1.0 / 3.0 * ln(omz) * NC * CF - 4 * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(omz) * NC * z * CF - 4 * ln(omz) * NC * x * CF * pow(omz, -1)
                result += -1.0 / 2.0 * ln(omz) * NC * x * CF * pow(omxmz, -2) + 1.0 / 2.0 * ln(omz) * NC * x * CF * pow(omxmz, -1) - 2 * ln(omz) * NC * x * CF - 5.0 / 3.0 * ln(omz) * NC * x * z * CF + 1.0 / 2.0 * ln(omz) * NC * pow(x, 2) * CF * pow(omxmz, -2) + 2.0 / 3.0 * ln(omz) * NF * CF + 2.0 / 3.0 * ln(omz) * NF * x * z * CF - 5 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) + 2 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) - 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF + 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF + 3 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * CF - 13.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF + 4 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) - 2 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) - 2 * pow(ln(omz), 2) * NC * CF * pow(omz, -1) + 11.0 / 2.0 * pow(ln(omz), 2) * NC * CF - 2 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF - 2 * pow(ln(omz), 2) * NC * x * CF * pow(omz, -1)
                result += +1.0 / 2.0 * pow(ln(omz), 2) * NC * x * CF + 11.0 / 2.0 * pow(ln(omz), 2) * NC * x * z * CF - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF
                result += +3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF
                result += -Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF
                result += +9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1)
                result += +2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF + 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF + 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1)
                result += +2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF - 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) - 51.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1)
                result += -9.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 9 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 5.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 8.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 5.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF * pow(omz, -1)
                result += +9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * z * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, -1) * pow(sqrtxz2, -1) * CF - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 51.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(sqrtxz2, -1) * CF - 18 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * z * pow(sqrtxz2, -1) * CF + 18 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(z, -1) * pow(sqrtxz2, -1) * CF + 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF * pow(omz, -1) + 9.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz2, -1) * CF - 9 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 3.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 5.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 3) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 8.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(NC, -1) * pow(x, 7) * pow(sqrtxz2, -1) * pow(poly2, -2) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF
                result += -2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1)
                result += +2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * CF - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * CF + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF - 2 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF * pow(omz, -1) + 4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * CF - 6 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 6 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * CF + 8 * Li2(1 - x * pow(z, -1)) * pow(NC, -1) * x * z * CF - Li2(1 - x * pow(z, -1)) * CF * pow(omx, -1)
                result += +2 * Li2(1 - x * pow(z, -1)) * z * CF * pow(omx, -1) + 2 * Li2(1 - x * pow(z, -1)) * x * CF - 4 * Li2(1 - x * pow(z, -1)) * x * z * CF + 2 * Li2(1 - x * pow(z, -1)) * NC * CF * pow(omx, -1) * pow(omz, -1) - Li2(1 - x * pow(z, -1)) * NC * CF * pow(omx, -1) - Li2(1 - x * pow(z, -1)) * NC * CF * pow(omz, -1) - Li2(1 - x * pow(z, -1)) * NC * z * CF * pow(omx, -1) - Li2(1 - x * pow(z, -1)) * NC * x * CF * pow(omz, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * CF - Li2(-x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) + Li2(-x * pow(z, -1)) * pow(x, -2) * CF + 2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1)
                result += -2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF - Li2(-x * pow(z, -1)) * pow(x, -1) * CF + 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * CF * pow(omx, -1) - Li2(-x * pow(z, -1)) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * CF - 4 * Li2(-x * pow(z, -1)) * z * CF * pow(omx, -1) + 2 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(omx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * x * z * CF + 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * CF + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF - 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * CF - 2 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(-x) * pow(NC, -1) * x * CF + 2 * Li2(-x) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(x, -2) * CF - 4 * Li2(-x) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(-x) * pow(x, -2) * z * CF
                result += +8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF + 2 * Li2(-x) * pow(x, -1) * CF - 4 * Li2(-x) * pow(x, -1) * z * CF + 8 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x) * CF * pow(opx, -1) - 4 * Li2(-x) * CF + 4 * Li2(-x) * z * CF * pow(opx, -1) + 8 * Li2(-x) * z * CF - 4 * Li2(-x) * x * CF + 8 * Li2(-x) * x * z * CF - Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z * CF - Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF - 4 * Li2(-x * z) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(NC, -1) * x * CF - Li2(-x * z) * pow(x, -2) * CF * pow(opx, -1) + Li2(-x * z) * pow(x, -2) * CF + 2 * Li2(-x * z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(x, -2) * z * CF - 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF - Li2(-x * z) * pow(x, -1) * CF + 2 * Li2(-x * z) * pow(x, -1) * z * CF
                result += -4 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x * z) * CF * pow(omx, -1) - Li2(-x * z) * CF * pow(opx, -1) + 4 * Li2(-x * z) * z * CF * pow(omx, -1) + 2 * Li2(-x * z) * z * CF * pow(opx, -1) - 4 * Li2(-x * z) * z * CF + 4 * Li2(-x * z) * pow(z, 2) * CF * pow(omx, -1) - 4 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x * z) * x * CF - 8 * Li2(-x * z) * x * pow(z, 2) * CF - 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * CF - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * z * CF - 2 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF + 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF - 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(omz, -1) + 8 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) + 2 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF + 12 * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) - 4 * Li2(x) * pow(NC, -1) * CF * pow(omz, -1) - 4 * Li2(x) * pow(NC, -1) * CF * pow(opx, -1) - Li2(x) * pow(NC, -1) * CF - 3 * Li2(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 4 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * Li2(x) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * Li2(x) * pow(NC, -1) * x * CF + 3 * Li2(x) * pow(NC, -1) * x * z * CF
                result += -2 * Li2(x) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(x) * pow(x, -2) * CF + 4 * Li2(x) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(x) * pow(x, -2) * z * CF - 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF - 2 * Li2(x) * pow(x, -1) * CF + 4 * Li2(x) * pow(x, -1) * z * CF - 8 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - Li2(x) * pow(z, -1) * CF + 3 * Li2(x) * CF * pow(omx, -1) + 2 * Li2(x) * CF * pow(opx, -1) + 2 * Li2(x) * CF - 6 * Li2(x) * z * CF * pow(omx, -1) - 4 * Li2(x) * z * CF * pow(opx, -1) + 8 * Li2(x) * pow(z, 2) * CF * pow(omx, -1) - Li2(x) * x * pow(z, -1) * CF + 4 * Li2(x) * x * z * CF - 8 * Li2(x) * x * pow(z, 2) * CF + Li2(x) * NC * CF + Li2(x) * NC * x * z * CF - 4 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 5 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * CF * pow(omz, -1) - 5 * Li2(z) * pow(NC, -1) * CF + 5 * Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(z) * pow(NC, -1) * x * CF - 7 * Li2(z) * pow(NC, -1) * x * z * CF + Li2(z) * CF * pow(omx, -1) + Li2(z) * CF - 2 * Li2(z) * z * CF * pow(omx, -1) - Li2(z) * x * CF + 6 * Li2(z) * x * z * CF + 3 * Li2(z) * NC * CF + 3 * Li2(z) * NC * x * z * CF
            if z < round(1 - x, ndecimals) and z < x:
                result += 4 * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(NC, -1) * CF * pow(omz, -1) - 6 * pow(NC, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) + 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 4 * pow(NC, -1) * z * CF * pow(omx, -1) + 5.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * CF * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - pow(NC, -1) * x * pow(pi, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * pow(NC, -1) * x * z * CF + 12 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * CF - 9 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 12 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 15 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omz, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * CF + 15 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 15 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 20 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 13 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1)
                result += +4 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * CF + 13 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 14 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 10 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 14 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * CF + 14 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 13 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 8 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 18 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * CF - 3 * ln(x) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 8 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(z) * pow(NC, -1) * x * z * CF
                result += +8 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * CF - 6 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 8 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) + 4 * ln(z) * ln(omx) * pow(NC, -1) * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 10 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * CF - 10 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * CF + 3 * ln(z) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += -6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omz, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF - 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 10 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 3 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF - 8 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 7 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 10 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omz) * pow(NC, -1) * x * z * CF + 4 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 7.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) + 3 * pow(ln(omz), 2) * pow(NC, -1) * CF - 7.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + pow(ln(omz), 2) * pow(NC, -1) * x * CF + 4 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += +2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF + Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF + Li2(omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += -2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * z * CF - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z < x:
                result += 4 * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(NC, -1) * CF * pow(omz, -1) - 6 * pow(NC, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) + 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 4 * pow(NC, -1) * z * CF * pow(omx, -1) + 5.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * CF * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - pow(NC, -1) * x * pow(pi, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * CF - 10 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 22 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 17 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1)
                result += +6 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omz, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * CF + 17 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 16 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 22 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 11 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 6 * ln(x) * ln(omx) * pow(NC, -1) * CF + 11 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 13 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 10 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 16 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * CF + 16 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 14 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 8 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 20 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(xmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * CF - 3 * ln(x) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(xmz) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(xmz) * pow(NC, -1) * x * z * CF + 8 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += +8 * ln(z) * pow(NC, -1) * x * z * CF + 8 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * CF - 6 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 8 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) + 4 * ln(z) * ln(omx) * pow(NC, -1) * CF - 8 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 8 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 14 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 12 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 10 * ln(z) * ln(omz) * pow(NC, -1) * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 9 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * CF + 14 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(z) * ln(xmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * CF + 3 * ln(z) * ln(xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(z) * ln(xmz) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(xmz) * pow(NC, -1) * x * z * CF
                result += +6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omz, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF - 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * CF - 6 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omz) * pow(NC, -1) * x * z * CF - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += -9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * CF - 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + pow(ln(omz), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * CF - 2 * Li2(pow(x, -1) * z * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * z * CF + Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) + Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * CF + Li2(omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(omx * pow(omz, -1)) * pow(NC, -1) * x * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += -2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals) and z > x:
                result += 4 * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(NC, -1) * CF * pow(omz, -1) - 6 * pow(NC, -1) * CF - 8.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) + 13.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 5.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 4 * pow(NC, -1) * z * CF * pow(omx, -1) + 13.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * CF * pow(omz, -1) + 11.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - pow(NC, -1) * x * pow(pi, 2) * CF - 8.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * CF - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF + 14 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * CF - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 21.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 14 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 24 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += +18 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omz, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * CF + 18 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 18 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 24 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 6 * ln(x) * ln(omx) * pow(NC, -1) * CF + 12 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 15 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 18 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 18 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 15 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 6 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 12 * ln(x) * ln(omz) * pow(NC, -1) * CF + 15 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 6 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 18 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * CF - 2 * ln(x) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(omxmz) * pow(NC, -1) * x * z * CF + 8 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += +8 * ln(z) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * CF + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF + 10 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 15.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * CF - 15.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 15.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 10 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 7 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(z) * ln(omx) * pow(NC, -1) * CF - 7 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 11 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 10 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 12 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 12 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 11 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 5 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 10 * ln(z) * ln(omz) * pow(NC, -1) * CF - 11 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 7 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * x * CF
                result += +12 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omx) * pow(NC, -1) * x * z * CF + 7 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 5 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omz, -1) + 3 * pow(ln(omx), 2) * pow(NC, -1) * CF - 5 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 11.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 7 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 4 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(omx) * ln(omz) * pow(NC, -1) * CF - 4 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 5 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 6 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omz) * pow(NC, -1) * x * z * CF + 6 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) + 5 * pow(ln(omz), 2) * pow(NC, -1) * CF - 11.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 7.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + pow(ln(omz), 2) * pow(NC, -1) * x * CF
                result += +6 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * CF + 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(omz) * ln(omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(omz) * ln(omxmz) * pow(NC, -1) * x * z * CF - Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF - Li2(pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * CF - 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * pow(NC, -1) * x * z * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1)
                result += -2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * CF - 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * omx * pow(omz, -1)) * pow(NC, -1) * x * z * CF - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z > round(1 - x, ndecimals) and z > x:
                result += 4 * pow(NC, -1) * CF * pow(omx, -1) + 4 * pow(NC, -1) * CF * pow(omz, -1) - 6 * pow(NC, -1) * CF - 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) + 5.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 4 * pow(NC, -1) * z * CF * pow(omx, -1) + 5.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 4 * pow(NC, -1) * x * CF * pow(omz, -1) + 7.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) - pow(NC, -1) * x * pow(pi, 2) * CF - 4.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF - 12 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 12 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 12 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * CF - 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) - ln(x) * ln(-omxmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * ln(-xmz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * CF - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(x) * ln(-xmz) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(-xmz) * pow(NC, -1) * x * z * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1)
                result += -3 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) + 6 * pow(ln(x), 2) * pow(NC, -1) * CF - 19.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 10 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 7 * pow(ln(x), 2) * pow(NC, -1) * x * CF + 13 * pow(ln(x), 2) * pow(NC, -1) * x * z * CF - 22 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 16 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omz, -1) - 10 * ln(x) * ln(z) * pow(NC, -1) * CF + 16 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 17 * ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 22 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 20 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 14 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) - 8 * ln(x) * ln(omx) * pow(NC, -1) * CF + 14 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 16 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 12 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 20 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 13 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) + 5 * ln(x) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 10 * ln(x) * ln(omz) * pow(NC, -1) * CF + 13 * ln(x) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) + 11 * ln(x) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 6 * ln(x) * ln(omz) * pow(NC, -1) * x * CF - 16 * ln(x) * ln(omz) * pow(NC, -1) * x * z * CF + 8 * ln(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 8 * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += +8 * ln(z) * pow(NC, -1) * x * z * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(z) * ln(-xmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * CF + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * z * CF * pow(omx, -1) + 3 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(z) * ln(-xmz) * pow(NC, -1) * x * CF - 4 * ln(z) * ln(-xmz) * pow(NC, -1) * x * z * CF + 8 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 11.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * CF - 11.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 13.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * x * CF + 8 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 16 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 11 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 3 * ln(z) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) + 6 * ln(z) * ln(omx) * pow(NC, -1) * CF - 11 * ln(z) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 13 * ln(z) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 10 * ln(z) * ln(omx) * pow(NC, -1) * x * CF + 16 * ln(z) * ln(omx) * pow(NC, -1) * x * z * CF + 10 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 9 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * CF - 9 * ln(z) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(z) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * ln(z) * ln(omz) * pow(NC, -1) * x * CF
                result += +10 * ln(z) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omx) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 3 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omz, -1) + pow(ln(omx), 2) * pow(NC, -1) * CF - 3 * pow(ln(omx), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 9.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * pow(ln(omx), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(omx), 2) * pow(NC, -1) * x * z * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(omx) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * CF - 6 * ln(omx) * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 4 * ln(omx) * ln(omz) * pow(NC, -1) * x * CF + 8 * ln(omx) * ln(omz) * pow(NC, -1) * x * z * CF + 6 * ln(omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 6 * ln(omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 6 * ln(omz) * pow(NC, -1) * x * z * CF - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * CF + 2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * z * CF * pow(omx, -1) + ln(omz) * ln(-omxmz) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += -2 * ln(omz) * ln(-omxmz) * pow(NC, -1) * x * z * CF + 5 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omx, -1) - 2 * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * CF - 9.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF * pow(omx, -1) - 3 * pow(ln(omz), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + pow(ln(omz), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(omz), 2) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * CF + 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(x, -1) * z * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * CF + 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * pow(NC, -1) * x * z * CF - Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omz, -1) + 2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * CF - Li2(pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) + Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1)
                result += -2 * Li2(pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * CF * pow(omx, -1) - Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF * pow(omz, -1) + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * CF + 2 * Li2(x * pow(z, -1) * pow(omx, -1) * omz) * pow(NC, -1) * x * z * CF - 2 * Li2(z) * pow(NC, -1) * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * pow(NC, -1) * CF * pow(omx, -1) + Li2(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(z) * pow(NC, -1) * x * CF - 2 * Li2(z) * pow(NC, -1) * x * z * CF
            if z < round(1 - x, ndecimals):
                result += -NC * CF * pow(omx, -1) - NC * CF * pow(omz, -1) + 3 * NC * CF + 4.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) - 2.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * NC * pow(pi, 2) * CF + NC * z * CF * pow(omx, -1) - 2.0 / 3.0 * NC * z * pow(pi, 2) * CF * pow(omx, -1) + NC * x * CF * pow(omz, -1) - 2.0 / 3.0 * NC * x * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * NC * x * z * pow(pi, 2) * CF + 6 * ln(x) * NC * CF * pow(omx, -1) * pow(omz, -1) + 9 * ln(x) * NC * CF - 6 * ln(x) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * NC * x * CF * pow(omz, -1) - 6 * ln(x) * NC * x * CF + 6 * ln(x) * NC * x * z * CF - 7 * pow(ln(x), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * CF * pow(omx, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * CF * pow(omz, -1) - 7 * pow(ln(x), 2) * NC * CF + 7.0 / 2.0 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) + 7.0 / 2.0 * pow(ln(x), 2) * NC * x * CF * pow(omz, -1) - 7 * pow(ln(x), 2) * NC * x * z * CF + 6 * ln(x) * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(x) * ln(z) * NC * CF * pow(omx, -1) - 3 * ln(x) * ln(z) * NC * CF * pow(omz, -1) + 6 * ln(x) * ln(z) * NC * CF - 3 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) - 3 * ln(x) * ln(z) * NC * x * CF * pow(omz, -1) + 6 * ln(x) * ln(z) * NC * x * z * CF + 12 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * NC * CF * pow(omz, -1) + 12 * ln(x) * ln(omx) * NC * CF - 6 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * ln(omx) * NC * x * CF * pow(omz, -1) + 12 * ln(x) * ln(omx) * NC * x * z * CF + 12 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) - 6 * ln(x) * ln(omz) * NC * CF * pow(omz, -1) + 12 * ln(x) * ln(omz) * NC * CF
                result += -6 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * ln(omz) * NC * x * CF * pow(omz, -1) + 12 * ln(x) * ln(omz) * NC * x * z * CF - 2 * ln(x) * ln(omxmz) * NC * CF * pow(omx, -1) * pow(omz, -1) + ln(x) * ln(omxmz) * NC * CF * pow(omx, -1) + ln(x) * ln(omxmz) * NC * CF * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * NC * CF + ln(x) * ln(omxmz) * NC * z * CF * pow(omx, -1) + ln(x) * ln(omxmz) * NC * x * CF * pow(omz, -1) - 2 * ln(x) * ln(omxmz) * NC * x * z * CF - 2 * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(z) * NC * CF + 2 * ln(z) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * NC * x * CF * pow(omz, -1) + 2 * ln(z) * NC * x * CF - 2 * ln(z) * NC * x * z * CF - pow(ln(z), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * CF * pow(omz, -1) - pow(ln(z), 2) * NC * CF + 1.0 / 2.0 * pow(ln(z), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * x * CF * pow(omz, -1) - pow(ln(z), 2) * NC * x * z * CF - 4 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) + 2 * ln(z) * ln(omx) * NC * CF * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * CF + 2 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omx) * NC * x * CF * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * x * z * CF - 4 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * NC * CF * pow(omz, -1) - 4 * ln(z) * ln(omz) * NC * CF + 2 * ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * NC * x * CF * pow(omz, -1) - 4 * ln(z) * ln(omz) * NC * x * z * CF - 4 * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * NC * CF + 4 * ln(omx) * NC * z * CF * pow(omx, -1) + 4 * ln(omx) * NC * x * CF * pow(omz, -1)
                result += +4 * ln(omx) * NC * x * CF - 4 * ln(omx) * NC * x * z * CF - 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * CF * pow(omz, -1) - 4 * pow(ln(omx), 2) * NC * CF + 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * x * CF * pow(omz, -1) - 4 * pow(ln(omx), 2) * NC * x * z * CF - 10 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 5 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) + 5 * ln(omx) * ln(omz) * NC * CF * pow(omz, -1) - 10 * ln(omx) * ln(omz) * NC * CF + 5 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) + 5 * ln(omx) * ln(omz) * NC * x * CF * pow(omz, -1) - 10 * ln(omx) * ln(omz) * NC * x * z * CF - 4 * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * NC * CF + 4 * ln(omz) * NC * z * CF * pow(omx, -1) + 4 * ln(omz) * NC * x * CF * pow(omz, -1) + 4 * ln(omz) * NC * x * CF - 4 * ln(omz) * NC * x * z * CF - 5 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * NC * CF * pow(omz, -1) - 5 * pow(ln(omz), 2) * NC * CF + 5.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1) + 5.0 / 2.0 * pow(ln(omz), 2) * NC * x * CF * pow(omz, -1) - 5 * pow(ln(omz), 2) * NC * x * z * CF + 2 * ln(omz) * ln(omxmz) * NC * CF * pow(omx, -1) * pow(omz, -1) - ln(omz) * ln(omxmz) * NC * CF * pow(omx, -1) - ln(omz) * ln(omxmz) * NC * CF * pow(omz, -1) + 2 * ln(omz) * ln(omxmz) * NC * CF - ln(omz) * ln(omxmz) * NC * z * CF * pow(omx, -1) - ln(omz) * ln(omxmz) * NC * x * CF * pow(omz, -1) + 2 * ln(omz) * ln(omxmz) * NC * x * z * CF + 2 * Li2(z * pow(omx, -1)) * NC * CF * pow(omx, -1) * pow(omz, -1) - Li2(z * pow(omx, -1)) * NC * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * NC * CF * pow(omz, -1)
                result += +2 * Li2(z * pow(omx, -1)) * NC * CF - Li2(z * pow(omx, -1)) * NC * z * CF * pow(omx, -1) - Li2(z * pow(omx, -1)) * NC * x * CF * pow(omz, -1) + 2 * Li2(z * pow(omx, -1)) * NC * x * z * CF - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * CF * pow(omx, -1) * pow(omz, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * CF * pow(omx, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * CF * pow(omz, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * CF + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * z * CF * pow(omx, -1) + Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * x * CF * pow(omz, -1) - 2 * Li2(x * z * pow(omx, -1) * pow(omz, -1)) * NC * x * z * CF - 2 * Li2(z) * NC * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * NC * CF * pow(omx, -1) + Li2(z) * NC * CF * pow(omz, -1) - 2 * Li2(z) * NC * CF + Li2(z) * NC * z * CF * pow(omx, -1) + Li2(z) * NC * x * CF * pow(omz, -1) - 2 * Li2(z) * NC * x * z * CF
            if z > round(1 - x, ndecimals):
                result += -NC * CF * pow(omx, -1) - NC * CF * pow(omz, -1) + 3 * NC * CF + 4.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omx, -1) * pow(omz, -1) - 2.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * NC * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * NC * pow(pi, 2) * CF + NC * z * CF * pow(omx, -1) - 2.0 / 3.0 * NC * z * pow(pi, 2) * CF * pow(omx, -1) + NC * x * CF * pow(omz, -1) - 2.0 / 3.0 * NC * x * pow(pi, 2) * CF * pow(omz, -1) + 4.0 / 3.0 * NC * x * z * pow(pi, 2) * CF + 6 * ln(x) * NC * CF * pow(omx, -1) * pow(omz, -1) + 9 * ln(x) * NC * CF - 6 * ln(x) * NC * z * CF * pow(omx, -1) - 6 * ln(x) * NC * x * CF * pow(omz, -1) - 6 * ln(x) * NC * x * CF + 6 * ln(x) * NC * x * z * CF - 2 * ln(x) * ln(-omxmz) * NC * CF * pow(omx, -1) * pow(omz, -1) + ln(x) * ln(-omxmz) * NC * CF * pow(omx, -1) + ln(x) * ln(-omxmz) * NC * CF * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * NC * CF + ln(x) * ln(-omxmz) * NC * z * CF * pow(omx, -1) + ln(x) * ln(-omxmz) * NC * x * CF * pow(omz, -1) - 2 * ln(x) * ln(-omxmz) * NC * x * z * CF - 6 * pow(ln(x), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 3 * pow(ln(x), 2) * NC * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * NC * CF * pow(omz, -1) - 6 * pow(ln(x), 2) * NC * CF + 3 * pow(ln(x), 2) * NC * z * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * NC * x * CF * pow(omz, -1) - 6 * pow(ln(x), 2) * NC * x * z * CF + 8 * ln(x) * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) - 4 * ln(x) * ln(z) * NC * CF * pow(omx, -1) - 4 * ln(x) * ln(z) * NC * CF * pow(omz, -1) + 8 * ln(x) * ln(z) * NC * CF - 4 * ln(x) * ln(z) * NC * z * CF * pow(omx, -1) - 4 * ln(x) * ln(z) * NC * x * CF * pow(omz, -1) + 8 * ln(x) * ln(z) * NC * x * z * CF + 10 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) - 5 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) - 5 * ln(x) * ln(omx) * NC * CF * pow(omz, -1) + 10 * ln(x) * ln(omx) * NC * CF
                result += -5 * ln(x) * ln(omx) * NC * z * CF * pow(omx, -1) - 5 * ln(x) * ln(omx) * NC * x * CF * pow(omz, -1) + 10 * ln(x) * ln(omx) * NC * x * z * CF + 10 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - 5 * ln(x) * ln(omz) * NC * CF * pow(omx, -1) - 5 * ln(x) * ln(omz) * NC * CF * pow(omz, -1) + 10 * ln(x) * ln(omz) * NC * CF - 5 * ln(x) * ln(omz) * NC * z * CF * pow(omx, -1) - 5 * ln(x) * ln(omz) * NC * x * CF * pow(omz, -1) + 10 * ln(x) * ln(omz) * NC * x * z * CF - 2 * ln(z) * NC * CF * pow(omx, -1) * pow(omz, -1) - 3 * ln(z) * NC * CF + 2 * ln(z) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * NC * x * CF * pow(omz, -1) + 2 * ln(z) * NC * x * CF - 2 * ln(z) * NC * x * z * CF - pow(ln(z), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * CF * pow(omz, -1) - pow(ln(z), 2) * NC * CF + 1.0 / 2.0 * pow(ln(z), 2) * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * NC * x * CF * pow(omz, -1) - pow(ln(z), 2) * NC * x * z * CF - 4 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * ln(z) * ln(omx) * NC * CF * pow(omx, -1) + 2 * ln(z) * ln(omx) * NC * CF * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * CF + 2 * ln(z) * ln(omx) * NC * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omx) * NC * x * CF * pow(omz, -1) - 4 * ln(z) * ln(omx) * NC * x * z * CF - 6 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 3 * ln(z) * ln(omz) * NC * CF * pow(omx, -1) + 3 * ln(z) * ln(omz) * NC * CF * pow(omz, -1) - 6 * ln(z) * ln(omz) * NC * CF + 3 * ln(z) * ln(omz) * NC * z * CF * pow(omx, -1) + 3 * ln(z) * ln(omz) * NC * x * CF * pow(omz, -1) - 6 * ln(z) * ln(omz) * NC * x * z * CF - 4 * ln(omx) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omx) * NC * CF + 4 * ln(omx) * NC * z * CF * pow(omx, -1) + 4 * ln(omx) * NC * x * CF * pow(omz, -1)
                result += +4 * ln(omx) * NC * x * CF - 4 * ln(omx) * NC * x * z * CF - 4 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * pow(ln(omx), 2) * NC * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * CF * pow(omz, -1) - 4 * pow(ln(omx), 2) * NC * CF + 2 * pow(ln(omx), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(omx), 2) * NC * x * CF * pow(omz, -1) - 4 * pow(ln(omx), 2) * NC * x * z * CF - 8 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) + 4 * ln(omx) * ln(omz) * NC * CF * pow(omx, -1) + 4 * ln(omx) * ln(omz) * NC * CF * pow(omz, -1) - 8 * ln(omx) * ln(omz) * NC * CF + 4 * ln(omx) * ln(omz) * NC * z * CF * pow(omx, -1) + 4 * ln(omx) * ln(omz) * NC * x * CF * pow(omz, -1) - 8 * ln(omx) * ln(omz) * NC * x * z * CF - 4 * ln(omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - 6 * ln(omz) * NC * CF + 4 * ln(omz) * NC * z * CF * pow(omx, -1) + 4 * ln(omz) * NC * x * CF * pow(omz, -1) + 4 * ln(omz) * NC * x * CF - 4 * ln(omz) * NC * x * z * CF + 2 * ln(omz) * ln(-omxmz) * NC * CF * pow(omx, -1) * pow(omz, -1) - ln(omz) * ln(-omxmz) * NC * CF * pow(omx, -1) - ln(omz) * ln(-omxmz) * NC * CF * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * NC * CF - ln(omz) * ln(-omxmz) * NC * z * CF * pow(omx, -1) - ln(omz) * ln(-omxmz) * NC * x * CF * pow(omz, -1) + 2 * ln(omz) * ln(-omxmz) * NC * x * z * CF - 4 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) * pow(omz, -1) + 2 * pow(ln(omz), 2) * NC * CF * pow(omx, -1) + 2 * pow(ln(omz), 2) * NC * CF * pow(omz, -1) - 4 * pow(ln(omz), 2) * NC * CF + 2 * pow(ln(omz), 2) * NC * z * CF * pow(omx, -1) + 2 * pow(ln(omz), 2) * NC * x * CF * pow(omz, -1) - 4 * pow(ln(omz), 2) * NC * x * z * CF + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * CF * pow(omx, -1) * pow(omz, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * CF * pow(omx, -1)
                result += -Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * CF * pow(omz, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * CF - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * z * CF * pow(omx, -1) - Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * x * CF * pow(omz, -1) + 2 * Li2(pow(x, -1) * pow(z, -1) * omx * omz) * NC * x * z * CF - 2 * Li2(pow(z, -1) * omx) * NC * CF * pow(omx, -1) * pow(omz, -1) + Li2(pow(z, -1) * omx) * NC * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * NC * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * NC * CF + Li2(pow(z, -1) * omx) * NC * z * CF * pow(omx, -1) + Li2(pow(z, -1) * omx) * NC * x * CF * pow(omz, -1) - 2 * Li2(pow(z, -1) * omx) * NC * x * z * CF - 2 * Li2(z) * NC * CF * pow(omx, -1) * pow(omz, -1) + Li2(z) * NC * CF * pow(omx, -1) + Li2(z) * NC * CF * pow(omz, -1) - 2 * Li2(z) * NC * CF + Li2(z) * NC * z * CF * pow(omx, -1) + Li2(z) * NC * x * CF * pow(omz, -1) - 2 * Li2(z) * NC * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +1.0 / 2.0 * LMUA * pow(NC, -1) * CF + 2 * LMUA * pow(NC, -1) * x * CF + 1.0 / 2.0 * LMUA * pow(NC, -1) * x * z * CF + 1.0 / 3.0 * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * LMUA * CF - 3.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF + 1.0 / 3.0 * LMUA * x * pow(z, -1) * CF + 3.0 / 2.0 * LMUA * x * CF - 1.0 / 2.0 * LMUA * x * z * CF - 4.0 / 3.0 * LMUA * x * pow(z, 2) * CF - 1.0 / 2.0 * LMUA * NC * CF - 2 * LMUA * NC * x * CF - 1.0 / 2.0 * LMUA * NC * x * z * CF + ln(x) * LMUA * pow(NC, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * CF + ln(x) * LMUA * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * z * CF - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * x * z * CF - ln(x) * LMUA * NC * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * LMUA * NC * CF - ln(x) * LMUA * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * LMUA * NC * z * CF + 1.0 / 2.0 * ln(x) * LMUA * NC * x * CF + 1.0 / 2.0 * ln(x) * LMUA * NC * x * z * CF + ln(z) * LMUA * pow(NC, -1) * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF + ln(z) * LMUA * pow(NC, -1) * x * CF * pow(omz, -1) - 1.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x * CF - 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * x * z * CF + ln(z) * LMUA * CF + ln(z) * LMUA * x * CF + 2 * ln(z) * LMUA * x * z * CF - ln(z) * LMUA * NC * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * LMUA * NC * CF + 1.0 / 2.0 * ln(z) * LMUA * NC * z * CF - ln(z) * LMUA * NC * x * CF * pow(omz, -1) + 1.0 / 2.0 * ln(z) * LMUA * NC * x * CF + 3.0 / 2.0 * ln(z) * LMUA * NC * x * z * CF + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * CF + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * z * CF + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x * CF + 1.0 / 2.0 * ln(omx) * LMUA * pow(NC, -1) * x * z * CF - 1.0 / 2.0 * ln(omx) * LMUA * NC * CF - 1.0 / 2.0 * ln(omx) * LMUA * NC * z * CF - 1.0 / 2.0 * ln(omx) * LMUA * NC * x * CF - 1.0 / 2.0 * ln(omx) * LMUA * NC * x * z * CF + 5.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * CF + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * z * CF + 1.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x * CF + 5.0 / 2.0 * ln(omz) * LMUA * pow(NC, -1) * x * z * CF - 5.0 / 2.0 * ln(omz) * LMUA * NC * CF - 1.0 / 2.0 * ln(omz) * LMUA * NC * z * CF - 1.0 / 2.0 * ln(omz) * LMUA * NC * x * CF - 5.0 / 2.0 * ln(omz) * LMUA * NC * x * z * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += +1.0 / 2.0 * LMUF * pow(NC, -1) * CF + 2 * LMUF * pow(NC, -1) * z * CF + 1.0 / 2.0 * LMUF * pow(NC, -1) * x * z * CF - 2.0 / 3.0 * LMUF * pow(x, -1) * pow(z, -1) * CF + 4.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * pow(z, -1) * CF + LMUF * CF + 1.0 / 2.0 * LMUF * x * pow(z, -1) * CF - LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * pow(z, -1) * CF - 4.0 / 3.0 * LMUF * pow(x, 2) * CF - 1.0 / 2.0 * LMUF * NC * CF - 2 * LMUF * NC * z * CF - 1.0 / 2.0 * LMUF * NC * x * z * CF + ln(x) * LMUF * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * CF + ln(x) * LMUF * pow(NC, -1) * z * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * z * CF - 1.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * CF - 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * z * CF - ln(x) * LMUF * pow(z, -1) * CF + 2 * ln(x) * LMUF * CF - ln(x) * LMUF * x * pow(z, -1) * CF + 2 * ln(x) * LMUF * x * CF - ln(x) * LMUF * NC * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * LMUF * NC * CF - ln(x) * LMUF * NC * z * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * LMUF * NC * z * CF + 1.0 / 2.0 * ln(x) * LMUF * NC * x * CF + 3.0 / 2.0 * ln(x) * LMUF * NC * x * z * CF - ln(z) * LMUF * pow(NC, -1) * CF * pow(omz, -1) + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * CF + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * z * CF - ln(z) * LMUF * pow(NC, -1) * x * CF * pow(omz, -1) + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x * CF + 1.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * x * z * CF + ln(z) * LMUF * NC * CF * pow(omz, -1) - 1.0 / 2.0 * ln(z) * LMUF * NC * CF - 1.0 / 2.0 * ln(z) * LMUF * NC * z * CF + ln(z) * LMUF * NC * x * CF * pow(omz, -1) - 1.0 / 2.0 * ln(z) * LMUF * NC * x * CF - 1.0 / 2.0 * ln(z) * LMUF * NC * x * z * CF + 5.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * CF + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * z * CF + 1.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x * CF + 5.0 / 2.0 * ln(omx) * LMUF * pow(NC, -1) * x * z * CF - 5.0 / 2.0 * ln(omx) * LMUF * NC * CF - 1.0 / 2.0 * ln(omx) * LMUF * NC * z * CF - 1.0 / 2.0 * ln(omx) * LMUF * NC * x * CF - 5.0 / 2.0 * ln(omx) * LMUF * NC * x * z * CF + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * CF + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * z * CF + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x * CF + 1.0 / 2.0 * ln(omz) * LMUF * pow(NC, -1) * x * z * CF - 1.0 / 2.0 * ln(omz) * LMUF * NC * CF - 1.0 / 2.0 * ln(omz) * LMUF * NC * z * CF - 1.0 / 2.0 * ln(omz) * LMUF * NC * x * CF - 1.0 / 2.0 * ln(omz) * LMUF * NC * x * z * CF
        elif orders == "100":
            if z != x and z != round(1 - x, ndecimals):
                result += +11.0 / 3.0 * LMUR * NC * CF + 11.0 / 3.0 * LMUR * NC * x * z * CF - 2.0 / 3.0 * LMUR * NF * CF - 2.0 / 3.0 * LMUR * NF * x * z * CF
        elif orders == "011":
            if z != x and z != round(1 - x, ndecimals):
                result += -1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * z * CF - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x * CF - 1.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * x * z * CF + 1.0 / 2.0 * LMUA * LMUF * NC * CF + 1.0 / 2.0 * LMUA * LMUF * NC * z * CF + 1.0 / 2.0 * LMUA * LMUF * NC * x * CF + 1.0 / 2.0 * LMUA * LMUF * NC * x * z * CF
        return result
    elif rsl == "rs":
        result = 0
        if orders == "000":
            result_r0 = -pow(NC, -1) * CF - 5.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 7 * pow(NC, -1) * x * CF - 5.0 / 12.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF + 19.0 / 9.0 * NC * CF + 7.0 / 12.0 * NC * pow(pi, 2) * CF - 14.0 / 9.0 * NC * x * CF + 7.0 / 12.0 * NC * x * pow(pi, 2) * CF + 2.0 / 9.0 * NF * CF + 8.0 / 9.0 * NF * x * CF + 3.0 / 2.0 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF + 35.0 / 6.0 * ln(x) * NC * CF * pow(omx, -1) - 8.0 / 3.0 * ln(x) * NC * CF - 25.0 / 6.0 * ln(x) * NC * x * CF - 4.0 / 3.0 * ln(x) * NF * CF * pow(omx, -1) + 2.0 / 3.0 * ln(x) * NF * CF + 2.0 / 3.0 * ln(x) * NF * x * CF - pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(x), 2) * pow(NC, -1) * CF + pow(ln(x), 2) * pow(NC, -1) * x * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2 * pow(ln(x), 2) * NC * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * CF - 3.0 / 2.0 * pow(ln(x), 2) * NC * x * CF + 6 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 3 * ln(x) * ln(omx) * pow(NC, -1) * CF - 3 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * NC * CF + 3 * ln(x) * ln(omx) * NC * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 11.0 / 6.0 * ln(omx) * NC * CF + 11.0 / 6.0 * ln(omx) * NC * x * CF - 1.0 / 3.0 * ln(omx) * NF * CF - 1.0 / 3.0 * ln(omx) * NF * x * CF + 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF + 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 3.0 / 2.0 * pow(ln(omx), 2) * NC * CF - 3.0 / 2.0 * pow(ln(omx), 2) * NC * x * CF + 1.0 / 2.0 * Li2(x) * pow(NC, -1) * CF + 1.0 / 2.0 * Li2(x) * pow(NC, -1) * x * CF - Li2(x) * CF - Li2(x) * x * CF - 1.0 / 2.0 * Li2(x) * NC * CF - 1.0 / 2.0 * Li2(x) * NC * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + 11.0 / 6.0 * NC * CF + 11.0 / 6.0 * NC * x * CF - 1.0 / 3.0 * NF * CF - 1.0 / 3.0 * NF * x * CF + 4 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * ln(x) * pow(NC, -1) * CF - 5.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + ln(x) * x * CF - 4 * ln(x) * NC * CF * pow(omx, -1) + 5.0 / 2.0 * ln(x) * NC * CF + 5.0 / 2.0 * ln(x) * NC * x * CF + 3 * ln(omx) * pow(NC, -1) * CF + 3 * ln(omx) * pow(NC, -1) * x * CF - 3 * ln(omx) * NC * CF - 3 * ln(omx) * NC * x * CF
            result_r2 = 3.0 / 2.0 * pow(NC, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * x * CF - 3.0 / 2.0 * NC * CF - 3.0 / 2.0 * NC * x * CF
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z) + result_r2 * ln(1 - z) * ln(1 - z) / (1 - z)
        elif orders == "001":
            result_r0 = -ln(omx) * LMUA * pow(NC, -1) * CF - ln(omx) * LMUA * pow(NC, -1) * x * CF + ln(omx) * LMUA * NC * CF + ln(omx) * LMUA * NC * x * CF - ln(x) * LMUA * NC * CF - ln(x) * LMUA * NC * x * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * CF - 7.0 / 4.0 * LMUA * pow(NC, -1) * x * CF - 1.0 / 4.0 * LMUA * NC * CF + 7.0 / 4.0 * LMUA * NC * x * CF - 2 * ln(x) * LMUA * pow(NC, -1) * CF * pow(omx, -1) + ln(x) * LMUA * pow(NC, -1) * CF + ln(x) * LMUA * pow(NC, -1) * x * CF + 2 * ln(x) * LMUA * NC * CF * pow(omx, -1)
            result_r1 = -2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * pow(NC, -1) * x * CF + 2 * LMUA * NC * CF + 2 * LMUA * NC * x * CF
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "010":
            result_r0 = -2 * ln(omx) * LMUF * pow(NC, -1) * CF - 2 * ln(omx) * LMUF * pow(NC, -1) * x * CF + 2 * ln(omx) * LMUF * NC * CF + 2 * ln(omx) * LMUF * NC * x * CF - 7.0 / 4.0 * LMUF * pow(NC, -1) * CF + 1.0 / 4.0 * LMUF * pow(NC, -1) * x * CF - 2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF + 7.0 / 4.0 * LMUF * NC * CF - 1.0 / 4.0 * LMUF * NC * x * CF - 2 * ln(x) * LMUF * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF + 2 * ln(x) * LMUF * NC * CF * pow(omx, -1) - 3.0 / 2.0 * ln(x) * LMUF * NC * CF - 3.0 / 2.0 * ln(x) * LMUF * NC * x * CF
            result_r1 = -LMUF * pow(NC, -1) * CF - LMUF * pow(NC, -1) * x * CF + LMUF * NC * CF + LMUF * NC * x * CF
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "100":
            result_r0 = -11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * x * CF + 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * x * CF
            result += result_r0 * 1 / (1 - z)
        elif orders == "011":
            result_r0 = +LMUA * LMUF * pow(NC, -1) * CF + LMUA * LMUF * pow(NC, -1) * x * CF - LMUA * LMUF * NC * CF - LMUA * LMUF * NC * x * CF
            result += result_r0 * 1 / (1 - z)
        return result
    elif rsl == "rl":
        result = 0
        if orders == "000":
            result += 29.0 / 4.0 * pow(NC, -1) * CF - 7 * pow(NC, -1) * zeta3 * CF * pow(omx, -1) + 11.0 / 2.0 * pow(NC, -1) * zeta3 * CF + 1.0 / 4.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF - 31.0 / 4.0 * pow(NC, -1) * x * CF + 11.0 / 2.0 * pow(NC, -1) * x * zeta3 * CF + 5.0 / 12.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 52.0 / 27.0 * pow(x, -1) * CF - 41.0 / 36.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 36.0 * x * CF + 1.0 / 2.0 * x * pow(pi, 2) * CF - 34.0 / 27.0 * pow(x, 2) * CF + 1.0 / 3.0 * pow(x, 2) * pow(pi, 2) * CF - 91.0 / 108.0 * NC * CF + 5 * NC * zeta3 * CF * pow(omx, -1) - 8 * NC * zeta3 * CF + 13.0 / 36.0 * NC * pow(pi, 2) * CF * pow(omx, -1) - 13.0 / 36.0 * NC * pow(pi, 2) * CF + 845.0 / 108.0 * NC * x * CF - 8 * NC * x * zeta3 * CF - 7.0 / 9.0 * NC * x * pow(pi, 2) * CF - 37.0 / 54.0 * NF * CF - 1.0 / 9.0 * NF * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 9.0 * NF * pow(pi, 2) * CF - 19.0 / 54.0 * NF * x * CF + 1.0 / 9.0 * NF * x * pow(pi, 2) * CF
            result += -10 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + 21.0 / 4.0 * ln(x) * pow(NC, -1) * CF - ln(x) * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * ln(x) * pow(NC, -1) * pow(pi, 2) * CF + 11 * ln(x) * pow(NC, -1) * x * CF + 2.0 / 3.0 * ln(x) * pow(NC, -1) * x * pow(pi, 2) * CF + 23.0 / 6.0 * ln(x) * CF - 1.0 / 3.0 * ln(x) * pow(pi, 2) * CF - 5.0 / 6.0 * ln(x) * x * CF - 1.0 / 3.0 * ln(x) * x * pow(pi, 2) * CF + 38.0 / 9.0 * ln(x) * pow(x, 2) * CF - 5.0 / 3.0 * ln(x) * NC * CF * pow(omx, -1) + 1.0 / 12.0 * ln(x) * NC * CF + 5.0 / 3.0 * ln(x) * NC * pow(pi, 2) * CF * pow(omx, -1) - ln(x) * NC * pow(pi, 2) * CF + 13.0 / 6.0 * ln(x) * NC * x * CF - ln(x) * NC * x * pow(pi, 2) * CF + 5.0 / 3.0 * ln(x) * NF * CF * pow(omx, -1) - 5.0 / 6.0 * ln(x) * NF * CF - 7.0 / 6.0 * ln(x) * NF * x * CF
            result += -9.0 / 8.0 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + 1.0 / 4.0 * pow(ln(x), 2) * pow(NC, -1) * CF - 3.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF - 13.0 / 8.0 * pow(ln(x), 2) * CF - 13.0 / 8.0 * pow(ln(x), 2) * x * CF - 5.0 / 3.0 * pow(ln(x), 2) * pow(x, 2) * CF - 83.0 / 24.0 * pow(ln(x), 2) * NC * CF * pow(omx, -1) + 49.0 / 24.0 * pow(ln(x), 2) * NC * CF + 55.0 / 24.0 * pow(ln(x), 2) * NC * x * CF + 5.0 / 6.0 * pow(ln(x), 2) * NF * CF * pow(omx, -1) - 5.0 / 12.0 * pow(ln(x), 2) * NF * CF - 5.0 / 12.0 * pow(ln(x), 2) * NF * x * CF
            result += -5.0 / 24.0 * pow(ln(x), 3) * pow(NC, -1) * CF - 5.0 / 24.0 * pow(ln(x), 3) * pow(NC, -1) * x * CF + 5.0 / 12.0 * pow(ln(x), 3) * CF + 5.0 / 12.0 * pow(ln(x), 3) * x * CF - 1.0 / 2.0 * pow(ln(x), 3) * NC * CF * pow(omx, -1) + 11.0 / 24.0 * pow(ln(x), 3) * NC * CF + 11.0 / 24.0 * pow(ln(x), 3) * NC * x * CF - 9.0 / 2.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) + 9.0 / 4.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) * CF + 9.0 / 4.0 * pow(ln(x), 2) * ln(omx) * pow(NC, -1) * x * CF + 5.0 / 2.0 * pow(ln(x), 2) * ln(omx) * NC * CF * pow(omx, -1) - 5.0 / 4.0 * pow(ln(x), 2) * ln(omx) * NC * CF - 5.0 / 4.0 * pow(ln(x), 2) * ln(omx) * NC * x * CF + 1.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, -1) * CF - 1.0 / 2.0 * ln(x) * ln(omx) * CF + 1.0 / 2.0 * ln(x) * ln(omx) * x * CF + 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, 2) * CF + 11.0 / 3.0 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) - 7.0 / 3.0 * ln(x) * ln(omx) * NC * CF - 4.0 / 3.0 * ln(x) * ln(omx) * NC * x * CF - 2.0 / 3.0 * ln(x) * ln(omx) * NF * CF * pow(omx, -1) + 1.0 / 3.0 * ln(x) * ln(omx) * NF * CF + 1.0 / 3.0 * ln(x) * ln(omx) * NF * x * CF + 5.0 / 2.0 * ln(x) * pow(ln(omx), 2) * pow(NC, -1) * CF * pow(omx, -1) - ln(x) * pow(ln(omx), 2) * pow(NC, -1) * CF - ln(x) * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * x * CF - 9.0 / 2.0 * ln(x) * pow(ln(omx), 2) * NC * CF * pow(omx, -1) + 2 * ln(x) * pow(ln(omx), 2) * NC * CF
            result += +2 * ln(x) * pow(ln(omx), 2) * NC * x * CF - 5 * ln(x) * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * Li2(x) * pow(NC, -1) * CF + 2 * ln(x) * Li2(x) * pow(NC, -1) * x * CF + ln(x) * Li2(x) * CF + ln(x) * Li2(x) * x * CF + ln(x) * Li2(x) * NC * CF * pow(omx, -1) - ln(omx) * pow(NC, -1) * CF + 1.0 / 6.0 * ln(omx) * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 2.0 * ln(omx) * pow(NC, -1) * pow(pi, 2) * CF - 27.0 / 4.0 * ln(omx) * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(omx) * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * ln(omx) * pow(x, -1) * CF - 11.0 / 6.0 * ln(omx) * CF + 1.0 / 6.0 * ln(omx) * pow(pi, 2) * CF + 17.0 / 6.0 * ln(omx) * x * CF + 1.0 / 6.0 * ln(omx) * x * pow(pi, 2) * CF - 22.0 / 9.0 * ln(omx) * pow(x, 2) * CF + 19.0 / 9.0 * ln(omx) * NC * CF + 1.0 / 6.0 * ln(omx) * NC * pow(pi, 2) * CF * pow(omx, -1) + 1.0 / 2.0 * ln(omx) * NC * pow(pi, 2) * CF - 47.0 / 36.0 * ln(omx) * NC * x * CF + 1.0 / 2.0 * ln(omx) * NC * x * pow(pi, 2) * CF + 2.0 / 9.0 * ln(omx) * NF * CF + 8.0 / 9.0 * ln(omx) * NF * x * CF
            result += +1.0 / 3.0 * pow(ln(omx), 2) * pow(x, -1) * CF + 1.0 / 4.0 * pow(ln(omx), 2) * CF - 1.0 / 4.0 * pow(ln(omx), 2) * x * CF - 1.0 / 3.0 * pow(ln(omx), 2) * pow(x, 2) * CF + 11.0 / 12.0 * pow(ln(omx), 2) * NC * CF + 11.0 / 12.0 * pow(ln(omx), 2) * NC * x * CF - 1.0 / 6.0 * pow(ln(omx), 2) * NF * CF - 1.0 / 6.0 * pow(ln(omx), 2) * NF * x * CF + 1.0 / 2.0 * pow(ln(omx), 3) * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(omx), 3) * pow(NC, -1) * x * CF - 1.0 / 2.0 * pow(ln(omx), 3) * NC * CF - 1.0 / 2.0 * pow(ln(omx), 3) * NC * x * CF - ln(omx) * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) + ln(omx) * Li2(x) * pow(NC, -1) * CF + ln(omx) * Li2(x) * pow(NC, -1) * x * CF - ln(omx) * Li2(x) * CF - ln(omx) * Li2(x) * x * CF - ln(omx) * Li2(x) * NC * CF * pow(omx, -1) - 3 * Li3(1 - x) * pow(NC, -1) * CF * pow(omx, -1) + 2 * Li3(1 - x) * pow(NC, -1) * CF + 2 * Li3(1 - x) * pow(NC, -1) * x * CF - Li3(1 - x) * CF - Li3(1 - x) * x * CF - 5 * Li3(1 - x) * NC * CF * pow(omx, -1) + 2 * Li3(1 - x) * NC * CF + 2 * Li3(1 - x) * NC * x * CF + 7 * Li3(x) * pow(NC, -1) * CF * pow(omx, -1) - 7.0 / 2.0 * Li3(x) * pow(NC, -1) * CF - 7.0 / 2.0 * Li3(x) * pow(NC, -1) * x * CF - 5 * Li3(x) * NC * CF * pow(omx, -1) + 5.0 / 2.0 * Li3(x) * NC * CF + 5.0 / 2.0 * Li3(x) * NC * x * CF - 3.0 / 2.0 * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 2.0 * Li2(x) * pow(NC, -1) * x * CF - 2.0 / 3.0 * Li2(x) * pow(x, -1) * CF - 3.0 / 2.0 * Li2(x) * CF - 5.0 / 2.0 * Li2(x) * x * CF - 4.0 / 3.0 * Li2(x) * pow(x, 2) * CF - 13.0 / 6.0 * Li2(x) * NC * CF * pow(omx, -1) + 5.0 / 6.0 * Li2(x) * NC * CF + 7.0 / 3.0 * Li2(x) * NC * x * CF + 2.0 / 3.0 * Li2(x) * NF * CF * pow(omx, -1) - 1.0 / 3.0 * Li2(x) * NF * CF - 1.0 / 3.0 * Li2(x) * NF * x * CF
            result_r0 = -pow(NC, -1) * CF - 5.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 7 * pow(NC, -1) * x * CF - 5.0 / 12.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF + 19.0 / 9.0 * NC * CF + 7.0 / 12.0 * NC * pow(pi, 2) * CF - 14.0 / 9.0 * NC * x * CF + 7.0 / 12.0 * NC * x * pow(pi, 2) * CF + 2.0 / 9.0 * NF * CF + 8.0 / 9.0 * NF * x * CF + 3.0 / 2.0 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF + 35.0 / 6.0 * ln(x) * NC * CF * pow(omx, -1) - 8.0 / 3.0 * ln(x) * NC * CF - 25.0 / 6.0 * ln(x) * NC * x * CF - 4.0 / 3.0 * ln(x) * NF * CF * pow(omx, -1) + 2.0 / 3.0 * ln(x) * NF * CF + 2.0 / 3.0 * ln(x) * NF * x * CF - pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(x), 2) * pow(NC, -1) * CF + pow(ln(x), 2) * pow(NC, -1) * x * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2 * pow(ln(x), 2) * NC * CF * pow(omx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * NC * CF - 3.0 / 2.0 * pow(ln(x), 2) * NC * x * CF + 6 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 3 * ln(x) * ln(omx) * pow(NC, -1) * CF - 3 * ln(x) * ln(omx) * pow(NC, -1) * x * CF - 6 * ln(x) * ln(omx) * NC * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * NC * CF + 3 * ln(x) * ln(omx) * NC * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 11.0 / 6.0 * ln(omx) * NC * CF + 11.0 / 6.0 * ln(omx) * NC * x * CF - 1.0 / 3.0 * ln(omx) * NF * CF - 1.0 / 3.0 * ln(omx) * NF * x * CF + 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * CF + 3.0 / 2.0 * pow(ln(omx), 2) * pow(NC, -1) * x * CF - 3.0 / 2.0 * pow(ln(omx), 2) * NC * CF - 3.0 / 2.0 * pow(ln(omx), 2) * NC * x * CF + 1.0 / 2.0 * Li2(x) * pow(NC, -1) * CF + 1.0 / 2.0 * Li2(x) * pow(NC, -1) * x * CF - Li2(x) * CF - Li2(x) * x * CF - 1.0 / 2.0 * Li2(x) * NC * CF - 1.0 / 2.0 * Li2(x) * NC * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + 11.0 / 6.0 * NC * CF + 11.0 / 6.0 * NC * x * CF - 1.0 / 3.0 * NF * CF - 1.0 / 3.0 * NF * x * CF + 4 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) - 5.0 / 2.0 * ln(x) * pow(NC, -1) * CF - 5.0 / 2.0 * ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + ln(x) * x * CF - 4 * ln(x) * NC * CF * pow(omx, -1) + 5.0 / 2.0 * ln(x) * NC * CF + 5.0 / 2.0 * ln(x) * NC * x * CF + 3 * ln(omx) * pow(NC, -1) * CF + 3 * ln(omx) * pow(NC, -1) * x * CF - 3 * ln(omx) * NC * CF - 3 * ln(omx) * NC * x * CF
            result_r2 = 3.0 / 2.0 * pow(NC, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * x * CF - 3.0 / 2.0 * NC * CF - 3.0 / 2.0 * NC * x * CF
            result += result_r0 * ln(1 - z) + result_r1 * ln(1 - z) * ln(1 - z) / 2 + result_r2 * ln(1 - z) * ln(1 - z) * ln(1 - z) / 3
        elif orders == "001":
            result += +3.0 / 4.0 * LMUA * pow(NC, -1) * CF + 1.0 / 6.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF - 3.0 / 4.0 * LMUA * pow(NC, -1) * x * CF + 1.0 / 6.0 * LMUA * pow(NC, -1) * x * pow(pi, 2) * CF - 3.0 / 4.0 * LMUA * NC * CF - 1.0 / 6.0 * LMUA * NC * pow(pi, 2) * CF + 3.0 / 4.0 * LMUA * NC * x * CF - 1.0 / 6.0 * LMUA * NC * x * pow(pi, 2) * CF - 3.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * CF - 3.0 / 4.0 * ln(omx) * LMUA * pow(NC, -1) * x * CF + 3.0 / 4.0 * ln(omx) * LMUA * NC * CF + 3.0 / 4.0 * ln(omx) * LMUA * NC * x * CF - 3.0 / 2.0 * ln(x) * LMUA * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * CF + 3.0 / 4.0 * ln(x) * LMUA * pow(NC, -1) * x * CF + 3.0 / 2.0 * ln(x) * LMUA * NC * CF * pow(omx, -1) - 3.0 / 4.0 * ln(x) * LMUA * NC * CF - 3.0 / 4.0 * ln(x) * LMUA * NC * x * CF
            result_r0 = -ln(omx) * LMUA * pow(NC, -1) * CF - ln(omx) * LMUA * pow(NC, -1) * x * CF + ln(omx) * LMUA * NC * CF + ln(omx) * LMUA * NC * x * CF - ln(x) * LMUA * NC * CF - ln(x) * LMUA * NC * x * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * CF - 7.0 / 4.0 * LMUA * pow(NC, -1) * x * CF - 1.0 / 4.0 * LMUA * NC * CF + 7.0 / 4.0 * LMUA * NC * x * CF - 2 * ln(x) * LMUA * pow(NC, -1) * CF * pow(omx, -1) + ln(x) * LMUA * pow(NC, -1) * CF + ln(x) * LMUA * pow(NC, -1) * x * CF + 2 * ln(x) * LMUA * NC * CF * pow(omx, -1)
            result_r1 = -2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * pow(NC, -1) * x * CF + 2 * LMUA * NC * CF + 2 * LMUA * NC * x * CF
            result += result_r0 * ln(1 - z) + result_r1 * ln(1 - z) * ln(1 - z) / 2
        elif orders == "010":
            result += -1.0 / 2.0 * Li2(x) * LMUF * pow(NC, -1) * CF - 1.0 / 2.0 * Li2(x) * LMUF * pow(NC, -1) * x * CF + Li2(x) * LMUF * CF + Li2(x) * LMUF * x * CF + 1.0 / 2.0 * Li2(x) * LMUF * NC * CF + 1.0 / 2.0 * Li2(x) * LMUF * NC * x * CF - 3.0 / 2.0 * pow(ln(omx), 2) * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * pow(ln(omx), 2) * LMUF * pow(NC, -1) * x * CF + 3.0 / 2.0 * pow(ln(omx), 2) * LMUF * NC * CF + 3.0 / 2.0 * pow(ln(omx), 2) * LMUF * NC * x * CF + 7.0 / 4.0 * LMUF * pow(NC, -1) * CF + 1.0 / 4.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 25.0 / 4.0 * LMUF * pow(NC, -1) * x * CF + 1.0 / 4.0 * LMUF * pow(NC, -1) * x * pow(pi, 2) * CF - 13.0 / 9.0 * LMUF * pow(x, -1) * CF + 11.0 / 6.0 * LMUF * CF - 1.0 / 6.0 * LMUF * pow(pi, 2) * CF - 17.0 / 6.0 * LMUF * x * CF - 1.0 / 6.0 * LMUF * x * pow(pi, 2) * CF + 22.0 / 9.0 * LMUF * pow(x, 2) * CF - 169.0 / 36.0 * LMUF * NC * CF - 5.0 / 12.0 * LMUF * NC * pow(pi, 2) * CF + 149.0 / 36.0 * LMUF * NC * x * CF - 5.0 / 12.0 * LMUF * NC * x * pow(pi, 2) * CF + 1.0 / 9.0 * LMUF * NF * CF - 11.0 / 9.0 * LMUF * NF * x * CF - 3.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * CF - 3.0 / 4.0 * ln(omx) * LMUF * pow(NC, -1) * x * CF - 2.0 / 3.0 * ln(omx) * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * ln(omx) * LMUF * CF + 1.0 / 2.0 * ln(omx) * LMUF * x * CF + 2.0 / 3.0 * ln(omx) * LMUF * pow(x, 2) * CF + 3.0 / 4.0 * ln(omx) * LMUF * NC * CF + 3.0 / 4.0 * ln(omx) * LMUF * NC * x * CF - 6 * ln(x) * ln(omx) * LMUF * pow(NC, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(omx) * LMUF * pow(NC, -1) * CF + 3 * ln(x) * ln(omx) * LMUF * pow(NC, -1) * x * CF + 6 * ln(x) * ln(omx) * LMUF * NC * CF * pow(omx, -1) - 3 * ln(x) * ln(omx) * LMUF * NC * CF - 3 * ln(x) * ln(omx) * LMUF * NC * x * CF - 3 * ln(x) * LMUF * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * CF - 3.0 / 4.0 * ln(x) * LMUF * pow(NC, -1) * x * CF - ln(x) * LMUF * CF - 3 * ln(x) * LMUF * x * CF - 2 * ln(x) * LMUF * pow(x, 2) * CF - 2.0 / 3.0 * ln(x) * LMUF * NC * CF * pow(omx, -1) + 1.0 / 12.0 * ln(x) * LMUF * NC * CF + 19.0 / 12.0 * ln(x) * LMUF * NC * x * CF + 2.0 / 3.0 * ln(x) * LMUF * NF * CF * pow(omx, -1) - 1.0 / 3.0 * ln(x) * LMUF * NF * CF - 1.0 / 3.0 * ln(x) * LMUF * NF * x * CF + pow(ln(x), 2) * LMUF * pow(NC, -1) * CF * pow(omx, -1) - pow(ln(x), 2) * LMUF * pow(NC, -1) * CF - pow(ln(x), 2) * LMUF * pow(NC, -1) * x * CF + pow(ln(x), 2) * LMUF * CF + pow(ln(x), 2) * LMUF * x * CF - 2 * pow(ln(x), 2) * LMUF * NC * CF * pow(omx, -1) + 3.0 / 2.0 * pow(ln(x), 2) * LMUF * NC * CF + 3.0 / 2.0 * pow(ln(x), 2) * LMUF * NC * x * CF
            result_r0 = -2 * ln(omx) * LMUF * pow(NC, -1) * CF - 2 * ln(omx) * LMUF * pow(NC, -1) * x * CF + 2 * ln(omx) * LMUF * NC * CF + 2 * ln(omx) * LMUF * NC * x * CF - 7.0 / 4.0 * LMUF * pow(NC, -1) * CF + 1.0 / 4.0 * LMUF * pow(NC, -1) * x * CF - 2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF + 7.0 / 4.0 * LMUF * NC * CF - 1.0 / 4.0 * LMUF * NC * x * CF - 2 * ln(x) * LMUF * pow(NC, -1) * CF * pow(omx, -1) + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * ln(x) * LMUF * pow(NC, -1) * x * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF + 2 * ln(x) * LMUF * NC * CF * pow(omx, -1) - 3.0 / 2.0 * ln(x) * LMUF * NC * CF - 3.0 / 2.0 * ln(x) * LMUF * NC * x * CF
            result_r1 = -LMUF * pow(NC, -1) * CF - LMUF * pow(NC, -1) * x * CF + LMUF * NC * CF + LMUF * NC * x * CF
            result += result_r0 * ln(1 - z) + result_r1 * ln(1 - z) * ln(1 - z) / 2
        elif orders == "100":
            result += +11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * x * CF - 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * x * CF - 11.0 / 6.0 * ln(omx) * LMUR * NC * CF - 11.0 / 6.0 * ln(omx) * LMUR * NC * x * CF + 1.0 / 3.0 * ln(omx) * LMUR * NF * CF + 1.0 / 3.0 * ln(omx) * LMUR * NF * x * CF - 11.0 / 3.0 * ln(x) * LMUR * NC * CF * pow(omx, -1) + 11.0 / 6.0 * ln(x) * LMUR * NC * CF + 11.0 / 6.0 * ln(x) * LMUR * NC * x * CF + 2.0 / 3.0 * ln(x) * LMUR * NF * CF * pow(omx, -1) - 1.0 / 3.0 * ln(x) * LMUR * NF * CF - 1.0 / 3.0 * ln(x) * LMUR * NF * x * CF
            result_r0 = -11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * x * CF + 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * x * CF
            result += result_r0 * ln(1 - z)
        elif orders == "011":
            result += +3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * x * CF - 3.0 / 4.0 * LMUA * LMUF * NC * CF - 3.0 / 4.0 * LMUA * LMUF * NC * x * CF
            result_r0 = +LMUA * LMUF * pow(NC, -1) * CF + LMUA * LMUF * pow(NC, -1) * x * CF - LMUA * LMUF * NC * CF - LMUA * LMUF * NC * x * CF
            result += result_r0 * ln(1 - z)
        elif orders == "110":
            result += +11.0 / 6.0 * LMUF * LMUR * NC * CF + 11.0 / 6.0 * LMUF * LMUR * NC * x * CF - 1.0 / 3.0 * LMUF * LMUR * NF * CF - 1.0 / 3.0 * LMUF * LMUR * NF * x * CF
        elif orders == "020":
            result += +ln(omx) * pow(LMUF, 2) * pow(NC, -1) * CF + ln(omx) * pow(LMUF, 2) * pow(NC, -1) * x * CF - ln(omx) * pow(LMUF, 2) * NC * CF - ln(omx) * pow(LMUF, 2) * NC * x * CF + 5.0 / 4.0 * pow(LMUF, 2) * pow(NC, -1) * CF + 1.0 / 4.0 * pow(LMUF, 2) * pow(NC, -1) * x * CF + 1.0 / 3.0 * pow(LMUF, 2) * pow(x, -1) * CF + ln(x) * pow(LMUF, 2) * pow(NC, -1) * CF * pow(omx, -1) - 3.0 / 4.0 * ln(x) * pow(LMUF, 2) * pow(NC, -1) * CF - 3.0 / 4.0 * ln(x) * pow(LMUF, 2) * pow(NC, -1) * x * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * x * CF - ln(x) * pow(LMUF, 2) * NC * CF * pow(omx, -1) + 3.0 / 4.0 * ln(x) * pow(LMUF, 2) * NC * CF + 3.0 / 4.0 * ln(x) * pow(LMUF, 2) * NC * x * CF + 1.0 / 4.0 * pow(LMUF, 2) * CF - 1.0 / 4.0 * pow(LMUF, 2) * x * CF - 1.0 / 3.0 * pow(LMUF, 2) * pow(x, 2) * CF - 13.0 / 6.0 * pow(LMUF, 2) * NC * CF - 7.0 / 6.0 * pow(LMUF, 2) * NC * x * CF + 1.0 / 6.0 * pow(LMUF, 2) * NF * CF + 1.0 / 6.0 * pow(LMUF, 2) * NF * x * CF
        return result
    elif rsl == "sr":
        result = 0
        if orders == "000":
            result_0r = -pow(NC, -1) * CF - 5.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 7 * pow(NC, -1) * z * CF - 5.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF + 19.0 / 9.0 * NC * CF + 7.0 / 12.0 * NC * pow(pi, 2) * CF - 14.0 / 9.0 * NC * z * CF + 7.0 / 12.0 * NC * z * pow(pi, 2) * CF + 2.0 / 9.0 * NF * CF + 8.0 / 9.0 * NF * z * CF - 3.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(omz, -1) + 7.0 / 2.0 * ln(z) * pow(NC, -1) * CF + ln(z) * pow(NC, -1) * z * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + 3.0 / 2.0 * ln(z) * NC * CF * pow(omz, -1) - 5.0 / 2.0 * ln(z) * NC * CF + 3 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * z * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF - 2 * pow(ln(z), 2) * NC * CF * pow(omz, -1) + 3.0 / 2.0 * pow(ln(z), 2) * NC * CF + 3.0 / 2.0 * pow(ln(z), 2) * NC * z * CF - 2 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + ln(z) * ln(omz) * pow(NC, -1) * CF + ln(z) * ln(omz) * pow(NC, -1) * z * CF + 2 * ln(z) * ln(omz) * NC * CF * pow(omz, -1) - ln(z) * ln(omz) * NC * CF - ln(z) * ln(omz) * NC * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF + 11.0 / 6.0 * ln(omz) * NC * CF + 11.0 / 6.0 * ln(omz) * NC * z * CF - 1.0 / 3.0 * ln(omz) * NF * CF - 1.0 / 3.0 * ln(omz) * NF * z * CF + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF - 3.0 / 2.0 * pow(ln(omz), 2) * NC * CF - 3.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * CF + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * z * CF - Li2(z) * CF - Li2(z) * z * CF - 1.0 / 2.0 * Li2(z) * NC * CF - 1.0 / 2.0 * Li2(z) * NC * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + 11.0 / 6.0 * NC * CF + 11.0 / 6.0 * NC * z * CF - 1.0 / 3.0 * NF * CF - 1.0 / 3.0 * NF * z * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * z * CF + ln(z) * CF + ln(z) * z * CF + 1.0 / 2.0 * ln(z) * NC * CF + 1.0 / 2.0 * ln(z) * NC * z * CF + 3 * ln(omz) * pow(NC, -1) * CF + 3 * ln(omz) * pow(NC, -1) * z * CF - 3 * ln(omz) * NC * CF - 3 * ln(omz) * NC * z * CF
            result_2r = 3.0 / 2.0 * pow(NC, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * z * CF - 3.0 / 2.0 * NC * CF - 3.0 / 2.0 * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x) + result_2r * ln(1 - x) * ln(1 - x) / (1 - x)
        elif orders == "001":
            result_0r = -7.0 / 4.0 * LMUA * pow(NC, -1) * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * z * CF - 2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF + 7.0 / 4.0 * LMUA * NC * CF - 1.0 / 4.0 * LMUA * NC * z * CF - 2 * ln(z) * LMUA * pow(NC, -1) * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * CF + 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF + 2 * ln(z) * LMUA * NC * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * LMUA * NC * CF - 3.0 / 2.0 * ln(z) * LMUA * NC * z * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * z * CF + 2 * ln(omz) * LMUA * NC * CF + 2 * ln(omz) * LMUA * NC * z * CF
            result_1r = -LMUA * pow(NC, -1) * CF - LMUA * pow(NC, -1) * z * CF + LMUA * NC * CF + LMUA * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "010":
            result_0r = +1.0 / 4.0 * LMUF * pow(NC, -1) * CF - 7.0 / 4.0 * LMUF * pow(NC, -1) * z * CF - 1.0 / 4.0 * LMUF * NC * CF + 7.0 / 4.0 * LMUF * NC * z * CF + 2 * ln(z) * LMUF * pow(NC, -1) * CF * pow(omz, -1) - ln(z) * LMUF * pow(NC, -1) * CF - ln(z) * LMUF * pow(NC, -1) * z * CF - 2 * ln(z) * LMUF * NC * CF * pow(omz, -1) + ln(z) * LMUF * NC * CF + ln(z) * LMUF * NC * z * CF - ln(omz) * LMUF * pow(NC, -1) * CF - ln(omz) * LMUF * pow(NC, -1) * z * CF + ln(omz) * LMUF * NC * CF + ln(omz) * LMUF * NC * z * CF
            result_1r = -2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * pow(NC, -1) * z * CF + 2 * LMUF * NC * CF + 2 * LMUF * NC * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "100":
            result_0r = -11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * z * CF + 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * z * CF
            result += result_0r * 1 / (1 - x)
        elif orders == "011":
            result_0r = +LMUA * LMUF * pow(NC, -1) * CF + LMUA * LMUF * pow(NC, -1) * z * CF - LMUA * LMUF * NC * CF - LMUA * LMUF * NC * z * CF
            result += result_0r * 1 / (1 - x)
        return result
    elif rsl == "ss":
        result = 0
        if orders == "000":
            result_00 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_01 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_02 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result_10 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_11 = -6 * pow(NC, -1) * CF + 6 * NC * CF
            result_20 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result += result_00 * (1 / (1 - x)) * (1 / (1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) / (1 - z)) + result_02 * (1 / (1 - x)) * (ln(1 - z) * ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) / (1 - x)) * (1 / (1 - z)) + result_11 * (ln(1 - x) / (1 - x)) * (ln(1 - z) / (1 - z)) + result_20 * (ln(1 - x) * ln(1 - x) / (1 - x)) * (1 / (1 - z))
        elif orders == "001":
            result_00 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_01 = +4 * LMUA * pow(NC, -1) * CF - 4 * LMUA * NC * CF
            result_10 = +2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * NC * CF
            result += result_00 * (1 / (1 - x)) * (1 / (1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) / (1 - x)) * (1 / (1 - z))
        elif orders == "010":
            result_00 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_01 = +2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * NC * CF
            result_10 = +4 * LMUF * pow(NC, -1) * CF - 4 * LMUF * NC * CF
            result += result_00 * (1 / (1 - x)) * (1 / (1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) / (1 - x)) * (1 / (1 - z))
        elif orders == "100":
            result_00 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_00 * (1 / (1 - x)) * (1 / (1 - z))
        elif orders == "011":
            result_00 = -2 * LMUA * LMUF * pow(NC, -1) * CF + 2 * LMUA * LMUF * NC * CF
            result += result_00 * (1 / (1 - x)) * (1 / (1 - z))
        return result
    elif rsl == "sl":
        result = 0
        if orders == "000":
            result_0l = -4 * pow(NC, -1) * zeta3 * CF - 202.0 / 27.0 * NC * CF + 11 * NC * zeta3 * CF + 11.0 / 18.0 * NC * pow(pi, 2) * CF + 28.0 / 27.0 * NF * CF - 1.0 / 9.0 * NF * pow(pi, 2) * CF
            result_1l = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_2l = -11.0 / 6.0 * NC * CF + 1.0 / 3.0 * NF * CF
            result_3l = -pow(NC, -1) * CF + NC * CF
            result += result_0l * 1 / (1 - x) + result_1l * ln(1 - x) / (1 - x) + result_2l * ln(1 - x) * ln(1 - x) / (1 - x) + result_3l * ln(1 - x) * ln(1 - x) * ln(1 - x) / (1 - x)
            result_00 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_01 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_02 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result_10 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_11 = -6 * pow(NC, -1) * CF + 6 * NC * CF
            result_20 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result += result_00 * (1 / (1 - x)) * (ln(1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_02 * (1 / (1 - x)) * (ln(1 - z) * ln(1 - z) * ln(1 - z) / 3) + result_10 * (ln(1 - x) / (1 - x)) * (ln(1 - z)) + result_11 * (ln(1 - x) / (1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_20 * (ln(1 - x) * ln(1 - x) / (1 - x)) * (ln(1 - z))
        elif orders == "001":
            result_0l = -1.0 / 3.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * LMUA * NC * pow(pi, 2) * CF
            result_1l = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result += result_0l * 1 / (1 - x) + result_1l * ln(1 - x) / (1 - x)
            result_00 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_01 = +4 * LMUA * pow(NC, -1) * CF - 4 * LMUA * NC * CF
            result_10 = +2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * NC * CF
            result += result_00 * (1 / (1 - x)) * (ln(1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_10 * (ln(1 - x) / (1 - x)) * (ln(1 - z))
        elif orders == "010":
            result_0l = -8 * LMUF * pow(NC, -1) * CF - 1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 9.0 * LMUF * NC * CF + 2.0 / 3.0 * LMUF * NC * pow(pi, 2) * CF + 10.0 / 9.0 * LMUF * NF * CF
            result_1l = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_2d = +3 * LMUF * pow(NC, -1) * CF - 3 * LMUF * NC * CF
            result += result_0l * 1 / (1 - x) + result_1l * ln(1 - x) / (1 - x) + result_2d * ln(1 - x) * ln(1 - x) / (1 - x)
            result_00 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_01 = +2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * NC * CF
            result_10 = +4 * LMUF * pow(NC, -1) * CF - 4 * LMUF * NC * CF
            result += result_00 * (1 / (1 - x)) * (ln(1 - z)) + result_01 * (1 / (1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_10 * (ln(1 - x) / (1 - x)) * (ln(1 - z))
        elif orders == "100":
            result_1l = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_1l * ln(1 - x) / (1 - x)
            result_00 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_00 * (1 / (1 - x)) * (ln(1 - z))
        elif orders == "011":
            result_0l = -3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * LMUA * LMUF * NC * CF
            result += result_0l * 1 / (1 - x)
            result_00 = -2 * LMUA * LMUF * pow(NC, -1) * CF + 2 * LMUA * LMUF * NC * CF
            result += result_00 * (1 / (1 - x)) * (ln(1 - z))
        elif orders == "110":
            result_0l = -11.0 / 3.0 * LMUF * LMUR * NC * CF + 2.0 / 3.0 * LMUF * LMUR * NF * CF
            result += result_0l * 1 / (1 - x)
        elif orders == "020":
            result_0l = -3.0 / 2.0 * pow(LMUF, 2) * pow(NC, -1) * CF + 10.0 / 3.0 * pow(LMUF, 2) * NC * CF - 1.0 / 3.0 * pow(LMUF, 2) * NF * CF
            result_1l = -2 * pow(LMUF, 2) * pow(NC, -1) * CF + 2 * pow(LMUF, 2) * NC * CF
            result += result_0l * 1 / (1 - x) + result_1l * ln(1 - x) / (1 - x)
        return result
    elif rsl == "lr":
        result = 0
        if orders == "000":
            result += -1.0 / 4.0 * pow(NC, -1) * CF + 10 * pow(NC, -1) * zeta3 * CF * pow(omz, -1) - 4 * pow(NC, -1) * zeta3 * CF - 1.0 / 4.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) + 7.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 4.0 * pow(NC, -1) * z * CF - 4 * pow(NC, -1) * z * zeta3 * CF + 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 107.0 / 108.0 * pow(z, -1) * CF - 11.0 / 9.0 * CF + 2 * zeta3 * CF - 1.0 / 6.0 * pow(pi, 2) * CF - 4.0 / 9.0 * z * CF + 2 * z * zeta3 * CF - 1.0 / 4.0 * z * pow(pi, 2) * CF + 287.0 / 108.0 * pow(z, 2) * CF + 197.0 / 108.0 * NC * CF - 14 * NC * zeta3 * CF * pow(omz, -1) + 5.0 / 2.0 * NC * zeta3 * CF + 1.0 / 4.0 * NC * pow(pi, 2) * CF * pow(omz, -1) - 29.0 / 36.0 * NC * pow(pi, 2) * CF + 611.0 / 108.0 * NC * z * CF + 5.0 / 2.0 * NC * z * zeta3 * CF - 2.0 / 9.0 * NC * z * pow(pi, 2) * CF - 19.0 / 54.0 * NF * CF + 1.0 / 18.0 * NF * pow(pi, 2) * CF - 37.0 / 54.0 * NF * z * CF + 1.0 / 18.0 * NF * z * pow(pi, 2) * CF
            result += +19.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(omz, -1) - 15.0 / 4.0 * ln(z) * pow(NC, -1) * CF + 1.0 / 2.0 * ln(z) * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 3.0 * ln(z) * pow(NC, -1) * pow(pi, 2) * CF - 29.0 / 4.0 * ln(z) * pow(NC, -1) * z * CF - 1.0 / 3.0 * ln(z) * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * ln(z) * pow(z, -1) * CF - 5 * ln(z) * CF + 1.0 / 6.0 * ln(z) * pow(pi, 2) * CF - 9.0 / 2.0 * ln(z) * z * CF + 1.0 / 6.0 * ln(z) * z * pow(pi, 2) * CF - 31.0 / 18.0 * ln(z) * pow(z, 2) * CF - 113.0 / 18.0 * ln(z) * NC * CF * pow(omz, -1) + 233.0 / 36.0 * ln(z) * NC * CF - 5.0 / 6.0 * ln(z) * NC * pow(pi, 2) * CF * pow(omz, -1) + 1.0 / 2.0 * ln(z) * NC * pow(pi, 2) * CF + 101.0 / 36.0 * ln(z) * NC * z * CF + 1.0 / 2.0 * ln(z) * NC * z * pow(pi, 2) * CF - 5.0 / 9.0 * ln(z) * NF * CF * pow(omz, -1) - 1.0 / 18.0 * ln(z) * NF * CF + 11.0 / 18.0 * ln(z) * NF * z * CF
            result += -9.0 / 8.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) + 21.0 / 8.0 * pow(ln(z), 2) * pow(NC, -1) * CF + 7.0 / 8.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF + 1.0 / 3.0 * pow(ln(z), 2) * pow(z, -1) * CF - 1.0 / 8.0 * pow(ln(z), 2) * CF - 5.0 / 8.0 * pow(ln(z), 2) * z * CF + 49.0 / 24.0 * pow(ln(z), 2) * NC * CF * pow(omz, -1) - 25.0 / 12.0 * pow(ln(z), 2) * NC * CF - 5.0 / 6.0 * pow(ln(z), 2) * NC * z * CF - 1.0 / 6.0 * pow(ln(z), 2) * NF * CF * pow(omz, -1) + 1.0 / 12.0 * pow(ln(z), 2) * NF * CF + 1.0 / 12.0 * pow(ln(z), 2) * NF * z * CF
            result += +5.0 / 3.0 * pow(ln(z), 3) * pow(NC, -1) * CF * pow(omz, -1) - 25.0 / 24.0 * pow(ln(z), 3) * pow(NC, -1) * CF - 25.0 / 24.0 * pow(ln(z), 3) * pow(NC, -1) * z * CF + 5.0 / 12.0 * pow(ln(z), 3) * CF + 5.0 / 12.0 * pow(ln(z), 3) * z * CF - 5.0 / 6.0 * pow(ln(z), 3) * NC * CF * pow(omz, -1) + 5.0 / 8.0 * pow(ln(z), 3) * NC * CF + 5.0 / 8.0 * pow(ln(z), 3) * NC * z * CF + 1.0 / 2.0 * pow(ln(z), 2) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) - 1.0 / 4.0 * pow(ln(z), 2) * ln(omz) * pow(NC, -1) * CF - 1.0 / 4.0 * pow(ln(z), 2) * ln(omz) * pow(NC, -1) * z * CF - 1.0 / 2.0 * pow(ln(z), 2) * ln(omz) * NC * CF * pow(omz, -1) + 1.0 / 4.0 * pow(ln(z), 2) * ln(omz) * NC * CF + 1.0 / 4.0 * pow(ln(z), 2) * ln(omz) * NC * z * CF - 3.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * CF + 3.0 / 2.0 * ln(z) * ln(omz) * pow(NC, -1) * z * CF + 3.0 / 2.0 * ln(z) * ln(omz) * NC * CF - 3.0 / 2.0 * ln(z) * ln(omz) * NC * z * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * CF * pow(omz, -1) + 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * CF + 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * pow(NC, -1) * z * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * z * CF + 5.0 / 2.0 * ln(z) * pow(ln(omz), 2) * NC * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * pow(ln(omz), 2) * NC * CF - 3.0 / 2.0 * ln(z) * pow(ln(omz), 2) * NC * z * CF + 4 * ln(z) * Li2(z) * pow(NC, -1) * CF * pow(omz, -1)
            result += -2 * ln(z) * Li2(z) * pow(NC, -1) * CF - 2 * ln(z) * Li2(z) * pow(NC, -1) * z * CF - 6 * ln(z) * Li2(z) * NC * CF * pow(omz, -1) + 3 * ln(z) * Li2(z) * NC * CF + 3 * ln(z) * Li2(z) * NC * z * CF - 5.0 / 4.0 * ln(omz) * pow(NC, -1) * CF - 1.0 / 6.0 * ln(omz) * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) - 1.0 / 3.0 * ln(omz) * pow(NC, -1) * pow(pi, 2) * CF - 7 * ln(omz) * pow(NC, -1) * z * CF - 1.0 / 3.0 * ln(omz) * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * ln(omz) * pow(z, -1) * CF - 10.0 / 3.0 * ln(omz) * CF + 1.0 / 6.0 * ln(omz) * pow(pi, 2) * CF + 7.0 / 3.0 * ln(omz) * z * CF + 1.0 / 6.0 * ln(omz) * z * pow(pi, 2) * CF + 25.0 / 18.0 * ln(omz) * pow(z, 2) * CF + 67.0 / 36.0 * ln(omz) * NC * CF - 1.0 / 6.0 * ln(omz) * NC * pow(pi, 2) * CF * pow(omz, -1) + 2.0 / 3.0 * ln(omz) * NC * pow(pi, 2) * CF - 14.0 / 9.0 * ln(omz) * NC * z * CF + 2.0 / 3.0 * ln(omz) * NC * z * pow(pi, 2) * CF + 2.0 / 9.0 * ln(omz) * NF * CF + 8.0 / 9.0 * ln(omz) * NF * z * CF + 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(ln(omz), 2) * CF
            result += -1.0 / 4.0 * pow(ln(omz), 2) * z * CF - 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, 2) * CF + 11.0 / 12.0 * pow(ln(omz), 2) * NC * CF + 11.0 / 12.0 * pow(ln(omz), 2) * NC * z * CF - 1.0 / 6.0 * pow(ln(omz), 2) * NF * CF - 1.0 / 6.0 * pow(ln(omz), 2) * NF * z * CF + 1.0 / 2.0 * pow(ln(omz), 3) * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(omz), 3) * pow(NC, -1) * z * CF - 1.0 / 2.0 * pow(ln(omz), 3) * NC * CF - 1.0 / 2.0 * pow(ln(omz), 3) * NC * z * CF + ln(omz) * Li2(z) * pow(NC, -1) * CF * pow(omz, -1) - ln(omz) * Li2(z) * CF - ln(omz) * Li2(z) * z * CF + ln(omz) * Li2(z) * NC * CF * pow(omz, -1) - ln(omz) * Li2(z) * NC * CF - ln(omz) * Li2(z) * NC * z * CF + 3 * Li3(1 - z) * pow(NC, -1) * CF * pow(omz, -1) - Li3(1 - z) * pow(NC, -1) * CF - Li3(1 - z) * pow(NC, -1) * z * CF - Li3(1 - z) * CF - Li3(1 - z) * z * CF + 3 * Li3(1 - z) * NC * CF * pow(omz, -1) - 2 * Li3(1 - z) * NC * CF - 2 * Li3(1 - z) * NC * z * CF - 10 * Li3(z) * pow(NC, -1) * CF * pow(omz, -1) + 6 * Li3(z) * pow(NC, -1) * CF + 6 * Li3(z) * pow(NC, -1) * z * CF - 2 * Li3(z) * CF - 2 * Li3(z) * z * CF + 14 * Li3(z) * NC * CF * pow(omz, -1) - 8 * Li3(z) * NC * CF - 8 * Li3(z) * NC * z * CF + 3.0 / 2.0 * Li2(z) * pow(NC, -1) * CF * pow(omz, -1) - 9.0 / 2.0 * Li2(z) * pow(NC, -1) * CF - 2.0 / 3.0 * Li2(z) * pow(z, -1) * CF + 1.0 / 2.0 * Li2(z) * CF + 2 * Li2(z) * z * CF + 2.0 / 3.0 * Li2(z) * pow(z, 2) * CF - 3.0 / 2.0 * Li2(z) * NC * CF * pow(omz, -1) + 7.0 / 2.0 * Li2(z) * NC * CF - Li2(z) * NC * z * CF
            result_0r = -pow(NC, -1) * CF - 5.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 7 * pow(NC, -1) * z * CF - 5.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF + 19.0 / 9.0 * NC * CF + 7.0 / 12.0 * NC * pow(pi, 2) * CF - 14.0 / 9.0 * NC * z * CF + 7.0 / 12.0 * NC * z * pow(pi, 2) * CF + 2.0 / 9.0 * NF * CF + 8.0 / 9.0 * NF * z * CF - 3.0 / 2.0 * ln(z) * pow(NC, -1) * CF * pow(omz, -1) + 7.0 / 2.0 * ln(z) * pow(NC, -1) * CF + ln(z) * pow(NC, -1) * z * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + 3.0 / 2.0 * ln(z) * NC * CF * pow(omz, -1) - 5.0 / 2.0 * ln(z) * NC * CF + 3 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omz, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * CF - 2 * pow(ln(z), 2) * pow(NC, -1) * z * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF - 2 * pow(ln(z), 2) * NC * CF * pow(omz, -1) + 3.0 / 2.0 * pow(ln(z), 2) * NC * CF + 3.0 / 2.0 * pow(ln(z), 2) * NC * z * CF - 2 * ln(z) * ln(omz) * pow(NC, -1) * CF * pow(omz, -1) + ln(z) * ln(omz) * pow(NC, -1) * CF + ln(z) * ln(omz) * pow(NC, -1) * z * CF + 2 * ln(z) * ln(omz) * NC * CF * pow(omz, -1) - ln(z) * ln(omz) * NC * CF - ln(z) * ln(omz) * NC * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF + 11.0 / 6.0 * ln(omz) * NC * CF + 11.0 / 6.0 * ln(omz) * NC * z * CF - 1.0 / 3.0 * ln(omz) * NF * CF - 1.0 / 3.0 * ln(omz) * NF * z * CF + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * CF + 3.0 / 2.0 * pow(ln(omz), 2) * pow(NC, -1) * z * CF - 3.0 / 2.0 * pow(ln(omz), 2) * NC * CF - 3.0 / 2.0 * pow(ln(omz), 2) * NC * z * CF + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * CF + 1.0 / 2.0 * Li2(z) * pow(NC, -1) * z * CF - Li2(z) * CF - Li2(z) * z * CF - 1.0 / 2.0 * Li2(z) * NC * CF - 1.0 / 2.0 * Li2(z) * NC * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + 11.0 / 6.0 * NC * CF + 11.0 / 6.0 * NC * z * CF - 1.0 / 3.0 * NF * CF - 1.0 / 3.0 * NF * z * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * CF - 1.0 / 2.0 * ln(z) * pow(NC, -1) * z * CF + ln(z) * CF + ln(z) * z * CF + 1.0 / 2.0 * ln(z) * NC * CF + 1.0 / 2.0 * ln(z) * NC * z * CF + 3 * ln(omz) * pow(NC, -1) * CF + 3 * ln(omz) * pow(NC, -1) * z * CF - 3 * ln(omz) * NC * CF - 3 * ln(omz) * NC * z * CF
            result_2r = 3.0 / 2.0 * pow(NC, -1) * CF + 3.0 / 2.0 * pow(NC, -1) * z * CF - 3.0 / 2.0 * NC * CF - 3.0 / 2.0 * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2 + result_2r * ln(1 - x) * ln(1 - x) * ln(1 - x) / 3
        elif orders == "001":
            result += -1.0 / 2.0 * Li2(z) * LMUA * pow(NC, -1) * CF - 1.0 / 2.0 * Li2(z) * LMUA * pow(NC, -1) * z * CF + Li2(z) * LMUA * CF + Li2(z) * LMUA * z * CF + 1.0 / 2.0 * Li2(z) * LMUA * NC * CF + 1.0 / 2.0 * Li2(z) * LMUA * NC * z * CF - 3.0 / 2.0 * pow(ln(omz), 2) * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * pow(ln(omz), 2) * LMUA * pow(NC, -1) * z * CF + 3.0 / 2.0 * pow(ln(omz), 2) * LMUA * NC * CF + 3.0 / 2.0 * pow(ln(omz), 2) * LMUA * NC * z * CF + 7.0 / 4.0 * LMUA * pow(NC, -1) * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 25.0 / 4.0 * LMUA * pow(NC, -1) * z * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * z * pow(pi, 2) * CF + 7.0 / 18.0 * LMUA * pow(z, -1) * CF + 10.0 / 3.0 * LMUA * CF - 1.0 / 6.0 * LMUA * pow(pi, 2) * CF - 7.0 / 3.0 * LMUA * z * CF - 1.0 / 6.0 * LMUA * z * pow(pi, 2) * CF - 25.0 / 18.0 * LMUA * pow(z, 2) * CF - 169.0 / 36.0 * LMUA * NC * CF - 5.0 / 12.0 * LMUA * NC * pow(pi, 2) * CF + 149.0 / 36.0 * LMUA * NC * z * CF - 5.0 / 12.0 * LMUA * NC * z * pow(pi, 2) * CF + 1.0 / 9.0 * LMUA * NF * CF - 3.0 / 4.0 * ln(omz) * LMUA * pow(NC, -1) * CF - 3.0 / 4.0 * ln(omz) * LMUA * pow(NC, -1) * z * CF - 2.0 / 3.0 * ln(omz) * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * LMUA * CF + 1.0 / 2.0 * ln(omz) * LMUA * z * CF + 2.0 / 3.0 * ln(omz) * LMUA * pow(z, 2) * CF + 3.0 / 4.0 * ln(omz) * LMUA * NC * CF + 3.0 / 4.0 * ln(omz) * LMUA * NC * z * CF + 2 * ln(z) * ln(omz) * LMUA * pow(NC, -1) * CF * pow(omz, -1) - ln(z) * ln(omz) * LMUA * pow(NC, -1) * CF - ln(z) * ln(omz) * LMUA * pow(NC, -1) * z * CF - 2 * ln(z) * ln(omz) * LMUA * NC * CF * pow(omz, -1) + ln(z) * ln(omz) * LMUA * NC * CF + ln(z) * ln(omz) * LMUA * NC * z * CF - 3 * pow(ln(z), 2) * LMUA * pow(NC, -1) * CF * pow(omz, -1) + 2 * pow(ln(z), 2) * LMUA * pow(NC, -1) * CF + 2 * pow(ln(z), 2) * LMUA * pow(NC, -1) * z * CF - pow(ln(z), 2) * LMUA * CF - pow(ln(z), 2) * LMUA * z * CF + 2 * pow(ln(z), 2) * LMUA * NC * CF * pow(omz, -1) - 3.0 / 2.0 * pow(ln(z), 2) * LMUA * NC * CF - 3.0 / 2.0 * pow(ln(z), 2) * LMUA * NC * z * CF + 3 * ln(z) * LMUA * pow(NC, -1) * CF * pow(omz, -1) - 17.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) * CF - 7.0 / 4.0 * ln(z) * LMUA * pow(NC, -1) * z * CF - 2.0 / 3.0 * ln(z) * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * ln(z) * LMUA * CF + 2 * ln(z) * LMUA * z * CF + 2.0 / 3.0 * ln(z) * LMUA * pow(z, 2) * CF - 20.0 / 3.0 * ln(z) * LMUA * NC * CF * pow(omz, -1) + 61.0 / 12.0 * ln(z) * LMUA * NC * CF + 31.0 / 12.0 * ln(z) * LMUA * NC * z * CF + 2.0 / 3.0 * ln(z) * LMUA * NF * CF * pow(omz, -1) - 1.0 / 3.0 * ln(z) * LMUA * NF * CF - 1.0 / 3.0 * ln(z) * LMUA * NF * z * CF - 11.0 / 9.0 * LMUA * NF * z * CF
            result_0r = -7.0 / 4.0 * LMUA * pow(NC, -1) * CF + 1.0 / 4.0 * LMUA * pow(NC, -1) * z * CF - 2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF + 7.0 / 4.0 * LMUA * NC * CF - 1.0 / 4.0 * LMUA * NC * z * CF - 2 * ln(z) * LMUA * pow(NC, -1) * CF * pow(omz, -1) + 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * CF + 3.0 / 2.0 * ln(z) * LMUA * pow(NC, -1) * z * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF + 2 * ln(z) * LMUA * NC * CF * pow(omz, -1) - 3.0 / 2.0 * ln(z) * LMUA * NC * CF - 3.0 / 2.0 * ln(z) * LMUA * NC * z * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * CF - 2 * ln(omz) * LMUA * pow(NC, -1) * z * CF + 2 * ln(omz) * LMUA * NC * CF + 2 * ln(omz) * LMUA * NC * z * CF
            result_1r = -LMUA * pow(NC, -1) * CF - LMUA * pow(NC, -1) * z * CF + LMUA * NC * CF + LMUA * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2
        elif orders == "010":
            result += +3.0 / 4.0 * LMUF * pow(NC, -1) * CF + 1.0 / 6.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF - 3.0 / 4.0 * LMUF * pow(NC, -1) * z * CF + 1.0 / 6.0 * LMUF * pow(NC, -1) * z * pow(pi, 2) * CF - 3.0 / 4.0 * LMUF * NC * CF - 1.0 / 6.0 * LMUF * NC * pow(pi, 2) * CF + 3.0 / 4.0 * LMUF * NC * z * CF - 1.0 / 6.0 * LMUF * NC * z * pow(pi, 2) * CF - 3.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) * CF - 3.0 / 4.0 * ln(omz) * LMUF * pow(NC, -1) * z * CF + 3.0 / 4.0 * ln(omz) * LMUF * NC * CF + 3.0 / 4.0 * ln(omz) * LMUF * NC * z * CF - 3.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) * CF - 3.0 / 4.0 * ln(z) * LMUF * pow(NC, -1) * z * CF - 3.0 / 2.0 * ln(z) * LMUF * NC * CF * pow(omz, -1) + 3.0 / 4.0 * ln(z) * LMUF * NC * CF + 3.0 / 4.0 * ln(z) * LMUF * NC * z * CF + 3.0 / 2.0 * ln(z) * LMUF * pow(NC, -1) * CF * pow(omz, -1)
            result_0r = +1.0 / 4.0 * LMUF * pow(NC, -1) * CF - 7.0 / 4.0 * LMUF * pow(NC, -1) * z * CF - 1.0 / 4.0 * LMUF * NC * CF + 7.0 / 4.0 * LMUF * NC * z * CF + 2 * ln(z) * LMUF * pow(NC, -1) * CF * pow(omz, -1) - ln(z) * LMUF * pow(NC, -1) * CF - ln(z) * LMUF * pow(NC, -1) * z * CF - 2 * ln(z) * LMUF * NC * CF * pow(omz, -1) + ln(z) * LMUF * NC * CF + ln(z) * LMUF * NC * z * CF - ln(omz) * LMUF * pow(NC, -1) * CF - ln(omz) * LMUF * pow(NC, -1) * z * CF + ln(omz) * LMUF * NC * CF + ln(omz) * LMUF * NC * z * CF
            result_1r = -2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * pow(NC, -1) * z * CF + 2 * LMUF * NC * CF + 2 * LMUF * NC * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2
        elif orders == "100":
            result += +11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * z * CF - 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * z * CF - 11.0 / 6.0 * ln(omz) * LMUR * NC * CF - 11.0 / 6.0 * ln(omz) * LMUR * NC * z * CF + 1.0 / 3.0 * ln(omz) * LMUR * NF * CF + 1.0 / 3.0 * ln(omz) * LMUR * NF * z * CF + 11.0 / 3.0 * ln(z) * LMUR * NC * CF * pow(omz, -1) - 11.0 / 6.0 * ln(z) * LMUR * NC * CF - 11.0 / 6.0 * ln(z) * LMUR * NC * z * CF - 2.0 / 3.0 * ln(z) * LMUR * NF * CF * pow(omz, -1) + 1.0 / 3.0 * ln(z) * LMUR * NF * CF + 1.0 / 3.0 * ln(z) * LMUR * NF * z * CF
            result_0r = -11.0 / 6.0 * LMUR * NC * CF - 11.0 / 6.0 * LMUR * NC * z * CF + 1.0 / 3.0 * LMUR * NF * CF + 1.0 / 3.0 * LMUR * NF * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "011":
            result += +3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 4.0 * LMUA * LMUF * pow(NC, -1) * z * CF - 3.0 / 4.0 * LMUA * LMUF * NC * CF - 3.0 / 4.0 * LMUA * LMUF * NC * z * CF
            result_0r = +LMUA * LMUF * pow(NC, -1) * CF + LMUA * LMUF * pow(NC, -1) * z * CF - LMUA * LMUF * NC * CF - LMUA * LMUF * NC * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "101":
            result += +11.0 / 6.0 * LMUA * LMUR * NC * CF + 11.0 / 6.0 * LMUA * LMUR * NC * z * CF - 1.0 / 3.0 * LMUA * LMUR * NF * CF - 1.0 / 3.0 * LMUA * LMUR * NF * z * CF
        elif orders == "002":
            result += +5.0 / 4.0 * pow(LMUA, 2) * pow(NC, -1) * CF + 1.0 / 4.0 * pow(LMUA, 2) * pow(NC, -1) * z * CF + 1.0 / 3.0 * pow(LMUA, 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(LMUA, 2) * CF - 1.0 / 4.0 * pow(LMUA, 2) * z * CF - 1.0 / 3.0 * pow(LMUA, 2) * pow(z, 2) * CF - 13.0 / 6.0 * pow(LMUA, 2) * NC * CF - 7.0 / 6.0 * pow(LMUA, 2) * NC * z * CF + 1.0 / 6.0 * pow(LMUA, 2) * NF * CF + 1.0 / 6.0 * pow(LMUA, 2) * NF * z * CF + ln(omz) * pow(LMUA, 2) * pow(NC, -1) * CF + ln(omz) * pow(LMUA, 2) * pow(NC, -1) * z * CF - ln(omz) * pow(LMUA, 2) * NC * CF - ln(omz) * pow(LMUA, 2) * NC * z * CF + ln(z) * pow(LMUA, 2) * pow(NC, -1) * CF * pow(omz, -1) - 3.0 / 4.0 * ln(z) * pow(LMUA, 2) * pow(NC, -1) * CF - 3.0 / 4.0 * ln(z) * pow(LMUA, 2) * pow(NC, -1) * z * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * z * CF - ln(z) * pow(LMUA, 2) * NC * CF * pow(omz, -1) + 3.0 / 4.0 * ln(z) * pow(LMUA, 2) * NC * CF + 3.0 / 4.0 * ln(z) * pow(LMUA, 2) * NC * z * CF
        return result
    elif rsl == "ls":
        result = 0
        if orders == "000":
            result_l0 = -4 * pow(NC, -1) * zeta3 * CF - 202.0 / 27.0 * NC * CF + 11 * NC * zeta3 * CF + 11.0 / 18.0 * NC * pow(pi, 2) * CF + 28.0 / 27.0 * NF * CF - 1.0 / 9.0 * NF * pow(pi, 2) * CF
            result_l1 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_l2 = -11.0 / 6.0 * NC * CF + 1.0 / 3.0 * NF * CF
            result_l3 = -pow(NC, -1) * CF + NC * CF
            result += result_l0 * 1 / (1 - z) + result_l1 * ln(1 - z) / (1 - z) + result_l2 * ln(1 - z) * ln(1 - z) / (1 - z) + result_l3 * ln(1 - z) * ln(1 - z) * ln(1 - z) / (1 - z)
            result_00 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_01 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_02 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result_10 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_11 = -6 * pow(NC, -1) * CF + 6 * NC * CF
            result_20 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result += result_00 * (ln(1 - x)) * (1 / (1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) / (1 - z)) + result_02 * (ln(1 - x)) * (ln(1 - z) * ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (1 / (1 - z)) + result_11 * (ln(1 - x) * ln(1 - x) / 2) * (ln(1 - z) / (1 - z)) + result_20 * (ln(1 - x) * ln(1 - x) * ln(1 - x) / 3) * (1 / (1 - z))
        elif orders == "001":
            result_l0 = -8 * LMUA * pow(NC, -1) * CF - 1.0 / 3.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 9.0 * LMUA * NC * CF + 2.0 / 3.0 * LMUA * NC * pow(pi, 2) * CF + 10.0 / 9.0 * LMUA * NF * CF
            result_l1 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_l2 = +3 * LMUA * pow(NC, -1) * CF - 3 * LMUA * NC * CF
            result += result_l0 * 1 / (1 - z) + result_l1 * ln(1 - z) / (1 - z) + result_l2 * ln(1 - z) * ln(1 - z) / (1 - z)
            result_00 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_01 = +4 * LMUA * pow(NC, -1) * CF - 4 * LMUA * NC * CF
            result_10 = +2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * NC * CF
            result += result_00 * (ln(1 - x)) * (1 / (1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (1 / (1 - z))
        elif orders == "010":
            result_l0 = -1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * LMUF * NC * pow(pi, 2) * CF
            result_l1 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result += result_l0 * 1 / (1 - z) + result_l1 * ln(1 - z) / (1 - z)
            result_00 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_01 = +2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * NC * CF
            result_10 = +4 * LMUF * pow(NC, -1) * CF - 4 * LMUF * NC * CF
            result += result_00 * (ln(1 - x)) * (1 / (1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) / (1 - z)) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (1 / (1 - z))
        elif orders == "100":
            result_l1 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_l1 * ln(1 - z) / (1 - z)
            result_00 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_00 * (ln(1 - x)) * (1 / (1 - z))
        elif orders == "011":
            result_l0 = -3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * LMUA * LMUF * NC * CF
            result += result_l0 * 1 / (1 - z)
            result_00 = -2 * LMUA * LMUF * pow(NC, -1) * CF + 2 * LMUA * LMUF * NC * CF
            result += result_00 * (ln(1 - x)) * (1 / (1 - z))
        elif orders == "101":
            result_l0 = -11.0 / 3.0 * LMUA * LMUR * NC * CF + 2.0 / 3.0 * LMUA * LMUR * NF * CF
            result += result_l0 * 1 / (1 - z)
        elif orders == "002":
            result_l0 = +10.0 / 3.0 * pow(LMUA, 2) * NC * CF - 1.0 / 3.0 * pow(LMUA, 2) * NF * CF - 3.0 / 2.0 * pow(LMUA, 2) * pow(NC, -1) * CF
            result_l1 = -2 * pow(LMUA, 2) * pow(NC, -1) * CF + 2 * pow(LMUA, 2) * NC * CF
            result += result_l0 * 1 / (1 - z) + result_l1 * ln(1 - z) / (1 - z)
        return result
    elif rsl == "ll":
        result = 0
        if orders == "000":
            result += -511.0 / 32.0 * pow(NC, -1) * CF + 15.0 / 2.0 * pow(NC, -1) * zeta3 * CF - 29.0 / 24.0 * pow(NC, -1) * pow(pi, 2) * CF + 7.0 / 180.0 * pow(NC, -1) * pow(pi, 4) * CF - 1537.0 / 96.0 * NC * CF + 41.0 / 6.0 * NC * zeta3 * CF - 277.0 / 216.0 * NC * pow(pi, 2) * CF + 1.0 / 18.0 * NC * pow(pi, 4) * CF + 127.0 / 24.0 * NF * CF + 2.0 / 3.0 * NF * zeta3 * CF + 19.0 / 54.0 * NF * pow(pi, 2) * CF
            result_0l = -4 * pow(NC, -1) * zeta3 * CF - 202.0 / 27.0 * NC * CF + 11 * NC * zeta3 * CF + 11.0 / 18.0 * NC * pow(pi, 2) * CF + 28.0 / 27.0 * NF * CF - 1.0 / 9.0 * NF * pow(pi, 2) * CF
            result_1l = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_2l = -11.0 / 6.0 * NC * CF + 1.0 / 3.0 * NF * CF
            result_3l = -pow(NC, -1) * CF + NC * CF
            result += result_0l * ln(1 - x) + result_1l * ln(1 - x) * ln(1 - x) / 2 + result_2l * ln(1 - x) * ln(1 - x) * ln(1 - x) / 3 + result_3l * ln(1 - x) * ln(1 - x) * ln(1 - x) * ln(1 - x) / 4
            result_l0 = -4 * pow(NC, -1) * zeta3 * CF - 202.0 / 27.0 * NC * CF + 11 * NC * zeta3 * CF + 11.0 / 18.0 * NC * pow(pi, 2) * CF + 28.0 / 27.0 * NF * CF - 1.0 / 9.0 * NF * pow(pi, 2) * CF
            result_l1 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_l2 = -11.0 / 6.0 * NC * CF + 1.0 / 3.0 * NF * CF
            result_l3 = -pow(NC, -1) * CF + NC * CF
            result += result_l0 * ln(1 - z) + result_l1 * ln(1 - z) * ln(1 - z) / 2 + result_l2 * ln(1 - z) * ln(1 - z) * ln(1 - z) / 3 + result_l3 * ln(1 - z) * ln(1 - z) * ln(1 - z) * ln(1 - z) / 4
            result_00 = 8 * pow(NC, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 5.0 / 9.0 * NC * CF - NC * pow(pi, 2) * CF - 10.0 / 9.0 * NF * CF
            result_01 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_02 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result_10 = -11.0 / 3.0 * NC * CF + 2.0 / 3.0 * NF * CF
            result_11 = -6 * pow(NC, -1) * CF + 6 * NC * CF
            result_20 = -3 * pow(NC, -1) * CF + 3 * NC * CF
            result += result_00 * (ln(1 - x)) * (ln(1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_02 * (ln(1 - x)) * (ln(1 - z) * ln(1 - z) * ln(1 - z) / 3) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (ln(1 - z)) + result_11 * (ln(1 - x) * ln(1 - x) / 2) * (ln(1 - z) * ln(1 - z) / 2) + result_20 * (ln(1 - x) * ln(1 - x) * ln(1 - x) / 3) * (ln(1 - z))
        elif orders == "001":
            result += -93.0 / 16.0 * LMUA * pow(NC, -1) * CF + 5 * LMUA * pow(NC, -1) * zeta3 * CF - 1.0 / 4.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 245.0 / 48.0 * LMUA * NC * CF - 2 * LMUA * NC * zeta3 * CF - 13.0 / 36.0 * LMUA * NC * pow(pi, 2) * CF + 1.0 / 12.0 * LMUA * NF * CF + 1.0 / 9.0 * LMUA * NF * pow(pi, 2) * CF
            result_0l = -1.0 / 3.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * LMUA * NC * pow(pi, 2) * CF
            result_1l = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result += result_0l * ln(1 - x) + result_1l * ln(1 - x) * ln(1 - x) / 2
            result_l0 = -8 * LMUA * pow(NC, -1) * CF - 1.0 / 3.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 9.0 * LMUA * NC * CF + 2.0 / 3.0 * LMUA * NC * pow(pi, 2) * CF + 10.0 / 9.0 * LMUA * NF * CF
            result_l1 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_l2 = +3 * LMUA * pow(NC, -1) * CF - 3 * LMUA * NC * CF
            result += result_l0 * ln(1 - z) + result_l1 * ln(1 - z) * ln(1 - z) / 2 + result_l2 * ln(1 - z) * ln(1 - z) * ln(1 - z) / 3
            result_00 = +3.0 / 2.0 * LMUA * pow(NC, -1) * CF - 3.0 / 2.0 * LMUA * NC * CF
            result_01 = +4 * LMUA * pow(NC, -1) * CF - 4 * LMUA * NC * CF
            result_10 = +2 * LMUA * pow(NC, -1) * CF - 2 * LMUA * NC * CF
            result += result_00 * (ln(1 - x)) * (ln(1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (ln(1 - z))
        elif orders == "010":
            result += -93.0 / 16.0 * LMUF * pow(NC, -1) * CF + 5 * LMUF * pow(NC, -1) * zeta3 * CF - 1.0 / 4.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 245.0 / 48.0 * LMUF * NC * CF - 2 * LMUF * NC * zeta3 * CF - 13.0 / 36.0 * LMUF * NC * pow(pi, 2) * CF + 1.0 / 12.0 * LMUF * NF * CF + 1.0 / 9.0 * LMUF * NF * pow(pi, 2) * CF
            result_0l = -8 * LMUF * pow(NC, -1) * CF - 1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 5.0 / 9.0 * LMUF * NC * CF + 2.0 / 3.0 * LMUF * NC * pow(pi, 2) * CF + 10.0 / 9.0 * LMUF * NF * CF
            result_1l = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_2d = +3 * LMUF * pow(NC, -1) * CF - 3 * LMUF * NC * CF
            result += result_0l * ln(1 - x) + result_1l * ln(1 - x) * ln(1 - x) / 2 + result_2d * ln(1 - x) * ln(1 - x) * ln(1 - x) / 3
            result_l0 = -1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * LMUF * NC * pow(pi, 2) * CF
            result_l1 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result += result_l0 * ln(1 - z) + result_l1 * ln(1 - z) * ln(1 - z) / 2
            result_00 = +3.0 / 2.0 * LMUF * pow(NC, -1) * CF - 3.0 / 2.0 * LMUF * NC * CF
            result_01 = +2 * LMUF * pow(NC, -1) * CF - 2 * LMUF * NC * CF
            result_10 = +4 * LMUF * pow(NC, -1) * CF - 4 * LMUF * NC * CF
            result += result_00 * (ln(1 - x)) * (ln(1 - z)) + result_01 * (ln(1 - x)) * (ln(1 - z) * ln(1 - z) / 2) + result_10 * (ln(1 - x) * ln(1 - x) / 2) * (ln(1 - z))
        elif orders == "100":
            result += -44.0 / 3.0 * LMUR * NC * CF + 8.0 / 3.0 * LMUR * NF * CF
            result_1l = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_1l * ln(1 - x) * ln(1 - x) / 2
            result_l1 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_l1 * ln(1 - z) * ln(1 - z) / 2
            result_00 = +11.0 / 3.0 * LMUR * NC * CF - 2.0 / 3.0 * LMUR * NF * CF
            result += result_00 * (ln(1 - x)) * (ln(1 - z))
        elif orders == "011":
            result += -9.0 / 8.0 * LMUA * LMUF * pow(NC, -1) * CF + 9.0 / 8.0 * LMUA * LMUF * NC * CF
            result_0l = -3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * LMUA * LMUF * NC * CF
            result += result_0l * ln(1 - x)
            result_l0 = -3.0 / 2.0 * LMUA * LMUF * pow(NC, -1) * CF + 3.0 / 2.0 * LMUA * LMUF * NC * CF
            result += result_l0 * ln(1 - z)
            result_00 = -2 * LMUA * LMUF * pow(NC, -1) * CF + 2 * LMUA * LMUF * NC * CF
            result += result_00 * (ln(1 - x)) * (ln(1 - z))
        elif orders == "101":
            result += -11.0 / 4.0 * LMUA * LMUR * NC * CF + 1.0 / 2.0 * LMUA * LMUR * NF * CF
            result_l0 = -11.0 / 3.0 * LMUA * LMUR * NC * CF + 2.0 / 3.0 * LMUA * LMUR * NF * CF
            result += result_l0 * ln(1 - z)
        elif orders == "110":
            result += -11.0 / 4.0 * LMUF * LMUR * NC * CF + 1.0 / 2.0 * LMUF * LMUR * NF * CF
            result_0l = -11.0 / 3.0 * LMUF * LMUR * NC * CF + 2.0 / 3.0 * LMUF * LMUR * NF * CF
            result += result_0l * ln(1 - x)
        elif orders == "002":
            result += -9.0 / 16.0 * pow(LMUA, 2) * pow(NC, -1) * CF + 1.0 / 6.0 * pow(LMUA, 2) * pow(NC, -1) * pow(pi, 2) * CF + 31.0 / 16.0 * pow(LMUA, 2) * NC * CF - 1.0 / 6.0 * pow(LMUA, 2) * NC * pow(pi, 2) * CF - 1.0 / 4.0 * pow(LMUA, 2) * NF * CF
            result_l0 = +10.0 / 3.0 * pow(LMUA, 2) * NC * CF - 1.0 / 3.0 * pow(LMUA, 2) * NF * CF - 3.0 / 2.0 * pow(LMUA, 2) * pow(NC, -1) * CF
            result_l1 = -2 * pow(LMUA, 2) * pow(NC, -1) * CF + 2 * pow(LMUA, 2) * NC * CF
            result += result_l0 * ln(1 - z) + result_l1 * ln(1 - z) * ln(1 - z) / 2
        elif orders == "020":
            result += -9.0 / 16.0 * pow(LMUF, 2) * pow(NC, -1) * CF + 1.0 / 6.0 * pow(LMUF, 2) * pow(NC, -1) * pow(pi, 2) * CF + 31.0 / 16.0 * pow(LMUF, 2) * NC * CF - 1.0 / 6.0 * pow(LMUF, 2) * NC * pow(pi, 2) * CF - 1.0 / 4.0 * pow(LMUF, 2) * NF * CF
            result_0l = -3.0 / 2.0 * pow(LMUF, 2) * pow(NC, -1) * CF + 10.0 / 3.0 * pow(LMUF, 2) * NC * CF - 1.0 / 3.0 * pow(LMUF, 2) * NF * CF
            result_1l = -2 * pow(LMUF, 2) * pow(NC, -1) * CF + 2 * pow(LMUF, 2) * NC * CF
            result += result_0l * ln(1 - x) + result_1l * ln(1 - x) * ln(1 - x) / 2
        return result
    else:
        raise ValueError("Invalid rsl value")

def ct_nnlo_q2qb_eq(x, z, rsl, orders):

    omz = 1.0 - z
    opz = 1.0 + z
    omx = 1.0 - x
    opx = 1.0 + x
    op6xpxsq = 1.0 + 6.0 * x + x * x
    xmz = x - z
    omxmz = 1.0 - x - z
    poly2 = 1 + 2 * x + x * x - 4 * x * z
    sqrtxz1 = sqrt(1 - 2 * z + z * z + 4 * x * z)
    sqrtxz2 = sqrt(poly2)
    sqrtxz3 = sqrt(x / z)

    if rsl == "rr":
        result = 0
        if orders == "000":
            if z != x and z != round(1 - x, ndecimals):
                result += -2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(z, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(x, -2) * z * pow(pi, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(x, -1) * z * pow(pi, 2) * CF * pow(opx, -1) + 4 * pow(NC, -1) * pow(z, -1) * CF + 8 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF * pow(omx, -1) * pow(opz, -1) - 8 * pow(NC, -1) * pow(z, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 16 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 16 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 12 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF * pow(omx, -1) * pow(opz, -1) - 12 * pow(NC, -1) * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF * pow(omx, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1)
                result += -2.0 / 3.0 * pow(NC, -1) * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF * pow(omx, -1) - 16 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 32 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + 64 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF - 12 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(omx, -1) * pow(opz, -1) + 24 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 48 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1) - 48 * pow(NC, -1) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF - 8 * pow(NC, -1) * CF + 6 * pow(NC, -1) * pow(rln2, 2) * CF * pow(omx, -1) - 2 * pow(NC, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 8.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * pow(sqrtxz1, -1) * CF - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) * pow(opz, -1) - 1.0 / 2.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(omz, -1) * pow(opx, -1) - 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF - 16 * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 16 * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) - 12 * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(omx, -1) * pow(opz, -1) + 12 * pow(NC, -1) * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(omx, -1) + 10 * pow(NC, -1) * z * CF - 6 * pow(NC, -1) * z * pow(rln2, 2) * CF * pow(omx, -1)
                result += -2.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(omx, -1) - 1.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * CF * pow(opx, -1) - 7.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * CF - 8 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF * pow(opz, -1) + 8 * pow(NC, -1) * x * pow(z, -1) * pow(rln2, 2) * CF - 16 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) + 16 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 12 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF * pow(opz, -1) + 12 * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * pow(rln2, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF * pow(omz, -1) + 1.0 / 2.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF * pow(opz, -1) + 2.0 / 3.0 * pow(NC, -1) * x * pow(z, -1) * pow(pi, 2) * sqrtxz1 * CF - 48 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 32 * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF - 36 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1) + 24 * pow(NC, -1) * x * pow(sqrtxz1, -1) * pow(rln2, 2) * CF + 7 * pow(NC, -1) * x * CF - 8 * pow(NC, -1) * x * pow(rln2, 2) * CF - 2 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * pow(sqrtxz1, -1) * CF + 2.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF * pow(omz, -1) + 1.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 16 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 16 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF + 12 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1)
                result += -12 * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * pow(rln2, 2) * CF - 19.0 / 2.0 * pow(NC, -1) * x * z * CF + 8 * pow(NC, -1) * x * z * pow(rln2, 2) * CF + 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * pow(sqrtxz1, -1) * CF - 2.0 / 3.0 * pow(NC, -1) * x * z * pow(pi, 2) * CF + 64 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 48 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF * pow(opz, -1) - 48 * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * pow(rln2, 2) * CF + 8.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8.0 / 3.0 * pow(NC, -1) * pow(x, 2) * pow(pi, 2) * pow(sqrtxz1, -1) * CF - 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 3.0 * pow(x, -2) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(x, -2) * z * pow(pi, 2) * CF - 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 4.0 / 3.0 * pow(x, -2) * pow(z, 2) * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * pow(z, -1) * CF - 26.0 / 9.0 * pow(x, -1) * CF - 1.0 / 3.0 * pow(x, -1) * pow(pi, 2) * CF + 2.0 / 3.0 * pow(x, -1) * z * pow(pi, 2) * CF - 4.0 / 3.0 * pow(x, -1) * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) - 71.0 / 36.0 * pow(z, -1) * CF + 1.0 / 6.0 * pow(z, -1) * pow(pi, 2) * CF - 26.0 / 3.0 * CF - 6 * pow(rln2, 2) * CF * pow(omx, -1) - 6 * sqrtxz1 * rln2 * CF * pow(omx, -1) + 5.0 / 6.0 * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 6.0 * pow(pi, 2) * CF + 157.0 / 12.0 * z * CF - 4 * z * pow(rln2, 2) * CF * pow(omx, -1) + 8 * z * pow(rln2, 2) * CF - 5.0 / 3.0 * z * pow(pi, 2) * CF * pow(omx, -1) - 4.0 / 3.0 * z * pow(pi, 2) * CF * pow(opx, -1)
                result += -2.0 / 3.0 * z * pow(pi, 2) * CF + 43.0 / 18.0 * pow(z, 2) * CF - 16 * pow(z, 2) * pow(rln2, 2) * CF * pow(omx, -1) + 2 * pow(z, 2) * pow(pi, 2) * CF * pow(omx, -1) + 2.0 / 3.0 * pow(z, 2) * pow(pi, 2) * CF * pow(opx, -1) + 121.0 / 36.0 * x * pow(z, -1) * CF + 1.0 / 6.0 * x * pow(z, -1) * pow(pi, 2) * CF + 4 * x * CF + 4 * x * pow(rln2, 2) * CF + 4 * x * sqrtxz1 * rln2 * CF - 5.0 / 6.0 * x * pow(pi, 2) * CF - 119.0 / 12.0 * x * z * CF + 1.0 / 3.0 * x * z * pow(pi, 2) * CF - 77.0 / 18.0 * x * pow(z, 2) * CF + 16 * x * pow(z, 2) * pow(rln2, 2) * CF - 4.0 / 3.0 * x * pow(z, 2) * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * pow(z, -1) * CF + 44.0 / 9.0 * pow(x, 2) * CF + 8 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * sqrtxz3 * CF + 23 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3 * ArcTan(z * sqrtxz3) * ln(z * sqrtxz3) * x * z * sqrtxz3 * CF - 8 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * sqrtxz3 * CF - 23 * ArcTan(sqrtxz3) * ln(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * ArcTan(sqrtxz3) * ln(sqrtxz3) * x * z * sqrtxz3 * CF
                result += -4 * InvTanInt(-sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(-sqrtxz3) * sqrtxz3 * CF - 23.0 / 2.0 * InvTanInt(-sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(-sqrtxz3) * x * z * sqrtxz3 * CF - 8 * InvTanInt(z * sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF - 3 * InvTanInt(z * sqrtxz3) * sqrtxz3 * CF - 23 * InvTanInt(z * sqrtxz3) * pow(z, 2) * sqrtxz3 * CF + 3 * InvTanInt(z * sqrtxz3) * x * z * sqrtxz3 * CF + 4 * InvTanInt(sqrtxz3) * pow(NC, -1) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * pow(x, -1) * z * sqrtxz3 * CF + 3.0 / 2.0 * InvTanInt(sqrtxz3) * sqrtxz3 * CF + 23.0 / 2.0 * InvTanInt(sqrtxz3) * pow(z, 2) * sqrtxz3 * CF - 3.0 / 2.0 * InvTanInt(sqrtxz3) * x * z * sqrtxz3 * CF - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += +64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF - 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + 6 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF + 48 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 48 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1)
                result += -32 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * rln2 * CF - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 8 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * rln2 * CF - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 64 * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 8 * ln(1 + sqrtxz1 - z) * rln2 * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * rln2 * CF + 6 * ln(1 + sqrtxz1 - z) * sqrtxz1 * CF * pow(omx, -1) - 12 * ln(1 + sqrtxz1 - z) * z * rln2 * CF + 24 * ln(1 + sqrtxz1 - z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 6 * ln(1 + sqrtxz1 - z) * x * rln2 * CF - 4 * ln(1 + sqrtxz1 - z) * x * sqrtxz1 * CF + 4 * ln(1 + sqrtxz1 - z) * x * z * rln2 * CF - 24 * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * rln2 * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1)
                result += +16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * pow(ln(1 + sqrtxz1 - z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF * pow(omx, -1) - 2 * pow(ln(1 + sqrtxz1 - z), 2) * CF + 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF * pow(omx, -1) + 4 * pow(ln(1 + sqrtxz1 - z), 2) * z * CF - 8 * pow(ln(1 + sqrtxz1 - z), 2) * pow(z, 2) * CF * pow(omx, -1) + 2 * pow(ln(1 + sqrtxz1 - z), 2) * x * CF - 4 * pow(ln(1 + sqrtxz1 - z), 2) * x * z * CF + 8 * pow(ln(1 + sqrtxz1 - z), 2) * x * pow(z, 2) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1)
                result += +8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 6 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 6 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF
                result += +8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF + 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * z * CF - 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * CF + 4 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * z * CF + 8 * ln(1 + sqrtxz1 - z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) - 32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1)
                result += +32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF - 6 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + 6 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF + 24 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 16 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 8 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * rln2 * CF - 32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 32 * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 4 * ln(1 + sqrtxz1 + z) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * z * rln2 * CF * pow(omx, -1) - 4 * ln(1 + sqrtxz1 + z) * z * rln2 * CF + 8 * ln(1 + sqrtxz1 + z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 2 * ln(1 + sqrtxz1 + z) * x * rln2 * CF - 4 * ln(1 + sqrtxz1 + z) * x * z * rln2 * CF
                result += -8 * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * rln2 * CF + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 3 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 2 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * pow(ln(1 - 2 * z + pow(z, 2) + 4 * x * z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF
                result += -8 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * pow(x, -2) * CF + 8 * ln(x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 8 * ln(x) * pow(NC, -1) * pow(x, -2) * z * CF - 8 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 3.0 / 2.0 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 8 * ln(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + ln(x) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(x) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) + 8 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(x) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 32 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(x) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 2 * ln(x) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(x) * pow(NC, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * pow(NC, -1) * CF + 3 * ln(x) * pow(NC, -1) * rln2 * CF * pow(omx, -1)
                result += -ln(x) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * ln(x) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(x) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 1.0 / 2.0 * ln(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * ln(x) * pow(NC, -1) * z * CF - 3 * ln(x) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 9 * ln(x) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) + 4 * ln(x) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(x) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(x) * pow(NC, -1) * x * CF - 4 * ln(x) * pow(NC, -1) * x * rln2 * CF + 8 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(x) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 4 * ln(x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * pow(NC, -1) * x * z * rln2 * CF + 32 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(x) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 4 * ln(x) * pow(x, -2) * CF * pow(opx, -1) + 4 * ln(x) * pow(x, -2) * CF + 8 * ln(x) * pow(x, -2) * z * CF * pow(opx, -1) - 8 * ln(x) * pow(x, -2) * z * CF - 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 16 * ln(x) * pow(x, -2) * pow(z, 2) * CF + 1.0 / 2.0 * ln(x) * pow(x, -1) * pow(poly2, -1) * CF - 9.0 / 2.0 * ln(x) * pow(x, -1) * CF + 8 * ln(x) * pow(x, -1) * z * CF - 16 * ln(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 4.0 / 3.0 * ln(x) * pow(z, -1) * CF * pow(omx, -1)
                result += +5.0 / 3.0 * ln(x) * pow(z, -1) * CF - 1.0 / 2.0 * ln(x) * pow(poly2, -1) * CF - 1.0 / 2.0 * ln(x) * CF * pow(omx, -1) + 4 * ln(x) * CF * pow(opx, -1) - 7.0 / 2.0 * ln(x) * CF - 5 * ln(x) * rln2 * CF * pow(omx, -1) - 2 * ln(x) * rln2 * CF - 3 * ln(x) * sqrtxz1 * CF * pow(omx, -1) - 1.0 / 2.0 * ln(x) * z * CF * pow(omx, -1) - 8 * ln(x) * z * CF * pow(opx, -1) + 5.0 / 2.0 * ln(x) * z * CF + 2 * ln(x) * z * rln2 * CF * pow(omx, -1) + 8 * ln(x) * z * rln2 * CF + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF * pow(omx, -1) + 4.0 / 3.0 * ln(x) * pow(z, 2) * CF - 16 * ln(x) * pow(z, 2) * rln2 * CF * pow(omx, -1) + 11.0 / 3.0 * ln(x) * x * pow(z, -1) * CF - ln(x) * x * CF * pow(xmz, -1) - 17.0 / 2.0 * ln(x) * x * CF + 4 * ln(x) * x * rln2 * CF + 2 * ln(x) * x * sqrtxz1 * CF + 13.0 / 2.0 * ln(x) * x * z * CF - 4 * ln(x) * x * z * rln2 * CF - 8.0 / 3.0 * ln(x) * x * pow(z, 2) * CF + 16 * ln(x) * x * pow(z, 2) * rln2 * CF + 2 * ln(x) * pow(x, 2) * pow(z, -1) * CF + 2 * ln(x) * pow(x, 2) * CF * pow(xmz, -1) - 5.0 / 2.0 * ln(x) * pow(x, 2) * CF - 1.0 / 2.0 * ln(x) * pow(x, 3) * pow(poly2, -1) * CF - 2 * ln(x) * pow(x, 3) * CF * pow(xmz, -1) + 1.0 / 2.0 * ln(x) * pow(x, 4) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 - sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 - sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF
                result += -4 * ln(x) * ln(1 - sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 - sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 + sqrtxz2 + x) * z * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(sqrtxz2, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz2 + x) * x * z * pow(sqrtxz2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz2 + x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * ln(x) * ln(1 + sqrtxz2 + x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1)
                result += -4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 - z) * CF - 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 - z) * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 - z) * x * CF + 4 * ln(x) * ln(1 + sqrtxz1 - z) * x * z * CF - 8 * ln(x) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1)
                result += +4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 3 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 3 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 12 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF
                result += -4 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(x) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 3 * ln(x) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1) - 4 * ln(x) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(x) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + sqrtxz1 + z) * x * CF - 8 * ln(x) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1)
                result += -2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF + ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) - ln(x) * ln(1 + x * pow(z, -1)) * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * pow(z, -1)) * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(1 + x * pow(z, -1)) * x * CF - 2 * ln(x) * ln(1 + x * pow(z, -1)) * x * z * CF + 4 * ln(x) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * CF - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x) * pow(NC, -1) * x * z * CF + 4 * ln(x) * ln(1 + x) * CF * pow(opx, -1)
                result += +2 * ln(x) * ln(1 + x) * CF - 8 * ln(x) * ln(1 + x) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x) * z * CF + 8 * ln(x) * ln(1 + x) * pow(z, 2) * CF * pow(opx, -1) + 6 * ln(x) * ln(1 + x) * x * CF - 12 * ln(x) * ln(1 + x) * x * z * CF + 8 * ln(x) * ln(1 + x) * x * pow(z, 2) * CF + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += -2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(1 + x * z) * pow(NC, -1) * x * CF + ln(x) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) - ln(x) * ln(1 + x * z) * pow(x, -2) * CF - 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * pow(x, -2) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF + ln(x) * ln(1 + x * z) * pow(x, -1) * CF - 2 * ln(x) * ln(1 + x * z) * pow(x, -1) * z * CF + 4 * ln(x) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x * z) * CF * pow(omx, -1) + ln(x) * ln(1 + x * z) * CF * pow(opx, -1) - 4 * ln(x) * ln(1 + x * z) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(1 + x * z) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(1 + x * z) * z * CF - 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(x) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x * z) * x * CF + 8 * ln(x) * ln(1 + x * z) * x * pow(z, 2) * CF - 2 * ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2 * ln(x) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(z + x) * pow(NC, -1) * CF * pow(omx, -1) + 2 * ln(x) * ln(z + x) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(z + x) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(z + x) * CF * pow(omx, -1) - ln(x) * ln(z + x) * CF
                result += +4 * ln(x) * ln(z + x) * z * CF * pow(omx, -1) - 2 * ln(x) * ln(z + x) * z * CF + 4 * ln(x) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) - ln(x) * ln(z + x) * x * CF - 2 * ln(x) * ln(z + x) * x * z * CF - 4 * ln(x) * ln(z + x) * x * pow(z, 2) * CF + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -2) * z * CF + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 12 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1)
                result += +12 * pow(ln(x), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 2 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omx, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * CF * pow(omz, -1) * pow(opx, -1) + pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + pow(ln(x), 2) * pow(NC, -1) * z * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 7.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * CF + 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 3 * pow(ln(x), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 9 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 6 * pow(ln(x), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * x * CF * pow(omz, -1) + pow(ln(x), 2) * pow(NC, -1) * x * CF - 3 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 3 * pow(ln(x), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 12 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 12 * pow(ln(x), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF * pow(opx, -1) - 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -2) * CF - 3 * pow(ln(x), 2) * pow(x, -2) * z * CF * pow(opx, -1) + 3 * pow(ln(x), 2) * pow(x, -2) * z * CF + 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 6 * pow(ln(x), 2) * pow(x, -2) * pow(z, 2) * CF + 3.0 / 2.0 * pow(ln(x), 2) * pow(x, -1) * CF - 3 * pow(ln(x), 2) * pow(x, -1) * z * CF + 6 * pow(ln(x), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += -pow(ln(x), 2) * pow(z, -1) * CF + 2 * pow(ln(x), 2) * CF * pow(omx, -1) - 5.0 / 2.0 * pow(ln(x), 2) * CF * pow(opx, -1) - 4 * pow(ln(x), 2) * z * CF * pow(omx, -1) + 5 * pow(ln(x), 2) * z * CF * pow(opx, -1) + 4 * pow(ln(x), 2) * z * CF + 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(x), 2) * pow(z, 2) * CF * pow(opx, -1) - pow(ln(x), 2) * x * pow(z, -1) * CF - pow(ln(x), 2) * x * CF + 6 * pow(ln(x), 2) * x * z * CF - 4 * pow(ln(x), 2) * x * pow(z, 2) * CF - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -2) * z * CF - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1)
                result += +2 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 8 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(omx, -1) + ln(x) * ln(z) * pow(NC, -1) * CF * pow(omz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 6 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + ln(x) * ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(x) * ln(z) * pow(NC, -1) * x * CF - 2 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 2 * ln(x) * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(z) * pow(NC, -1) * x * z * CF - 8 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - ln(x) * ln(z) * pow(x, -2) * CF * pow(opx, -1) + ln(x) * ln(z) * pow(x, -2) * CF
                result += +2 * ln(x) * ln(z) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(z) * pow(x, -2) * z * CF - 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(x) * ln(z) * pow(x, -2) * pow(z, 2) * CF - ln(x) * ln(z) * pow(x, -1) * CF + 2 * ln(x) * ln(z) * pow(x, -1) * z * CF - 4 * ln(x) * ln(z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(z) * pow(z, -1) * CF - 7 * ln(x) * ln(z) * CF * pow(omx, -1) - ln(x) * ln(z) * CF * pow(opx, -1) + ln(x) * ln(z) * z * CF * pow(omx, -1) + 2 * ln(x) * ln(z) * z * CF * pow(opx, -1) + 2 * ln(x) * ln(z) * z * CF - 8 * ln(x) * ln(z) * pow(z, 2) * CF * pow(omx, -1) - 4 * ln(x) * ln(z) * pow(z, 2) * CF * pow(opx, -1) + ln(x) * ln(z) * x * pow(z, -1) * CF + 2 * ln(x) * ln(z) * x * CF + 2 * ln(x) * ln(z) * x * z * CF + 4 * ln(x) * ln(z) * x * pow(z, 2) * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * CF - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -2) * z * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1)
                result += +4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + ln(x) * ln(omx) * pow(NC, -1) * pow(z, -1) * CF + 4 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omx, -1) - 4 * ln(x) * ln(omx) * pow(NC, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * CF - 2 * ln(x) * ln(omx) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 3 * ln(x) * ln(omx) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * ln(x) * ln(omx) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * ln(x) * ln(omx) * pow(NC, -1) * x * CF + 2 * ln(x) * ln(omx) * pow(NC, -1) * x * z * CF + 2 * ln(x) * ln(omx) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(x) * ln(omx) * pow(x, -2) * CF - 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * ln(x) * ln(omx) * pow(x, -2) * z * CF + 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(x, -2) * pow(z, 2) * CF + 2 * ln(x) * ln(omx) * pow(x, -1) * CF - 4 * ln(x) * ln(omx) * pow(x, -1) * z * CF + 8 * ln(x) * ln(omx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 3 * ln(x) * ln(omx) * CF * pow(omx, -1) - 2 * ln(x) * ln(omx) * CF * pow(opx, -1) + 6 * ln(x) * ln(omx) * z * CF * pow(omx, -1) + 4 * ln(x) * ln(omx) * z * CF * pow(opx, -1) - 8 * ln(x) * ln(omx) * pow(z, 2) * CF * pow(omx, -1) + 2 * ln(x) * ln(omx) * x * CF - 4 * ln(x) * ln(omx) * x * z * CF + 8 * ln(x) * ln(omx) * x * pow(z, 2) * CF + 4 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1)
                result += +8 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * ln(x) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(x) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(x) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * ln(x) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(x) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + ln(x) * ln(omz) * pow(z, -1) * CF - 2 * ln(x) * ln(omz) * CF + ln(x) * ln(omz) * x * pow(z, -1) * CF - 2 * ln(x) * ln(omz) * x * CF - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -2) * z * CF - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1)
                result += +4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * CF * pow(opx, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * CF + 4 * ln(x) * ln(opx) * pow(NC, -1) * x * z * CF - 2 * ln(x) * ln(opx) * pow(x, -2) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * pow(x, -2) * CF + 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * pow(x, -2) * z * CF - 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * ln(x) * ln(opx) * pow(x, -2) * pow(z, 2) * CF - 2 * ln(x) * ln(opx) * pow(x, -1) * CF + 4 * ln(x) * ln(opx) * pow(x, -1) * z * CF - 8 * ln(x) * ln(opx) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * CF * pow(opx, -1) + 2 * ln(x) * ln(opx) * CF + 4 * ln(x) * ln(opx) * z * CF * pow(opx, -1) - 4 * ln(x) * ln(opx) * z * CF - 8 * ln(x) * ln(opx) * pow(z, 2) * CF * pow(opx, -1) - 2 * ln(x) * ln(opx) * x * CF + 4 * ln(x) * ln(opx) * x * z * CF - 8 * ln(x) * ln(opx) * x * pow(z, 2) * CF + 12 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 12 * ln(z) * pow(NC, -1) * pow(z, -1) * rln2 * CF * pow(omx, -1) + 8 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1)
                result += +16 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 32 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 16 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + 64 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * ln(z) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF + ln(z) * pow(NC, -1) * CF * pow(omx, -1) - ln(z) * pow(NC, -1) * CF * pow(omz, -1) - ln(z) * pow(NC, -1) * CF + 9 * ln(z) * pow(NC, -1) * rln2 * CF * pow(omx, -1) - ln(z) * pow(NC, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 16 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + ln(z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * ln(z) * pow(NC, -1) * z * CF - 9 * ln(z) * pow(NC, -1) * z * rln2 * CF * pow(omx, -1) - 12 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF * pow(opz, -1) + 12 * ln(z) * pow(NC, -1) * x * pow(z, -1) * rln2 * CF - 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1)
                result += +16 * ln(z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 24 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 48 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 32 * ln(z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + ln(z) * pow(NC, -1) * x * CF * pow(omz, -1) + ln(z) * pow(NC, -1) * x * CF - 12 * ln(z) * pow(NC, -1) * x * rln2 * CF + 8 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 16 * ln(z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF - 2 * ln(z) * pow(NC, -1) * x * z * CF + 12 * ln(z) * pow(NC, -1) * x * z * rln2 * CF + 32 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 64 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 64 * ln(z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * pow(z, -1) * CF + 1.0 / 2.0 * ln(z) * pow(x, -1) * pow(poly2, -1) * CF + 2.0 / 3.0 * ln(z) * pow(x, -1) * CF * pow(omz, -1) - 11.0 / 6.0 * ln(z) * pow(x, -1) * CF + 1.0 / 6.0 * ln(z) * pow(z, -1) * CF + 1.0 / 2.0 * ln(z) * pow(poly2, -1) * CF + 3 * ln(z) * CF * pow(omx, -1) - ln(z) * CF * pow(omz, -1) - 7 * ln(z) * CF - 7 * ln(z) * rln2 * CF * pow(omx, -1) + 2 * ln(z) * rln2 * CF - 3 * ln(z) * sqrtxz1 * CF * pow(omx, -1) + 3 * ln(z) * z * CF * pow(omx, -1) + 5 * ln(z) * z * CF - 10 * ln(z) * z * rln2 * CF * pow(omx, -1) + 8 * ln(z) * z * rln2 * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF - 16 * ln(z) * pow(z, 2) * rln2 * CF * pow(omx, -1) - 5.0 / 6.0 * ln(z) * x * pow(z, -1) * CF
                result += +ln(z) * x * CF * pow(omz, -1) + ln(z) * x * CF * pow(xmz, -1) + ln(z) * x * CF + 4 * ln(z) * x * rln2 * CF + 2 * ln(z) * x * sqrtxz1 * CF - 4 * ln(z) * x * z * CF + 4 * ln(z) * x * z * rln2 * CF + 4.0 / 3.0 * ln(z) * x * pow(z, 2) * CF + 16 * ln(z) * x * pow(z, 2) * rln2 * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * pow(z, -1) * CF - 2.0 / 3.0 * ln(z) * pow(x, 2) * CF * pow(omz, -1) - 2 * ln(z) * pow(x, 2) * CF * pow(xmz, -1) - 1.0 / 6.0 * ln(z) * pow(x, 2) * CF - 1.0 / 2.0 * ln(z) * pow(x, 3) * pow(poly2, -1) * CF + 2 * ln(z) * pow(x, 3) * CF * pow(xmz, -1) - 1.0 / 2.0 * ln(z) * pow(x, 4) * pow(poly2, -1) * CF - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 3 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 3 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * CF * pow(omx, -1)
                result += +4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 4 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * CF - 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 3 * ln(z) * ln(1 + sqrtxz1 - z) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF * pow(omx, -1) - 4 * ln(z) * ln(1 + sqrtxz1 - z) * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 - z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 - z) * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 - z) * x * pow(z, 2) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1)
                result += -16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 6 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * CF * pow(omx, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 6 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * x * z * CF - 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(z) * ln(1 + sqrtxz1 + z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * ln(z) * ln(1 + sqrtxz1 + z) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF * pow(omx, -1)
                result += -4 * ln(z) * ln(1 + sqrtxz1 + z) * z * CF + 8 * ln(z) * ln(1 + sqrtxz1 + z) * pow(z, 2) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + sqrtxz1 + z) * x * CF - 4 * ln(z) * ln(1 + sqrtxz1 + z) * x * z * CF - 8 * ln(z) * ln(1 + sqrtxz1 + z) * x * pow(z, 2) * CF - 4 * ln(z) * ln(1 + z) * pow(NC, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2 * ln(z) * ln(1 + z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1)
                result += +2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(NC, -1) * x * z * CF - ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF - ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * CF * pow(opx, -1) + ln(z) * ln(1 + x * pow(z, -1)) * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * pow(z, -1)) * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * pow(z, -1)) * x * CF + 2 * ln(z) * ln(1 + x * pow(z, -1)) * x * z * CF - 4 * ln(z) * ln(1 + x * pow(z, -1)) * x * pow(z, 2) * CF + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1)
                result += +2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * ln(z) * ln(1 + x * z) * pow(NC, -1) * x * CF + ln(z) * ln(1 + x * z) * pow(x, -2) * CF * pow(opx, -1) - ln(z) * ln(1 + x * z) * pow(x, -2) * CF - 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * pow(x, -2) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * pow(x, -2) * pow(z, 2) * CF + ln(z) * ln(1 + x * z) * pow(x, -1) * CF - 2 * ln(z) * ln(1 + x * z) * pow(x, -1) * z * CF + 4 * ln(z) * ln(1 + x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1)
                result += -2 * ln(z) * ln(1 + x * z) * CF * pow(omx, -1) + ln(z) * ln(1 + x * z) * CF * pow(opx, -1) - 4 * ln(z) * ln(1 + x * z) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(1 + x * z) * z * CF * pow(opx, -1) + 4 * ln(z) * ln(1 + x * z) * z * CF - 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * ln(z) * ln(1 + x * z) * pow(z, 2) * CF * pow(opx, -1) + 2 * ln(z) * ln(1 + x * z) * x * CF + 8 * ln(z) * ln(1 + x * z) * x * pow(z, 2) * CF + 2 * ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * ln(z) * ln(z + x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * ln(z) * ln(z + x) * pow(NC, -1) * CF * pow(omx, -1) - 2 * ln(z) * ln(z + x) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * pow(z, -1) * CF - 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * CF + 2 * ln(z) * ln(z + x) * pow(NC, -1) * x * z * CF - 2 * ln(z) * ln(z + x) * CF * pow(omx, -1) + ln(z) * ln(z + x) * CF - 4 * ln(z) * ln(z + x) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(z + x) * z * CF - 4 * ln(z) * ln(z + x) * pow(z, 2) * CF * pow(omx, -1) + ln(z) * ln(z + x) * x * CF + 2 * ln(z) * ln(z + x) * x * z * CF + 4 * ln(z) * ln(z + x) * x * pow(z, 2) * CF - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * CF + pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(x, -2) * z * CF
                result += -pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 20 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 20 * pow(ln(z), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) * pow(opz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF * pow(omx, -1) + pow(ln(z), 2) * pow(NC, -1) * CF * pow(opx, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 5 * pow(ln(z), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(omx, -1) + pow(ln(z), 2) * pow(NC, -1) * z * CF * pow(opx, -1) - pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 3 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * CF - 5 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1)
                result += +5 * pow(ln(z), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 15 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 10 * pow(ln(z), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - pow(ln(z), 2) * pow(NC, -1) * x * CF + 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 5 * pow(ln(z), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 3 * pow(ln(z), 2) * pow(NC, -1) * x * z * CF + 20 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 20 * pow(ln(z), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -2) * CF + pow(ln(z), 2) * pow(x, -2) * z * CF * pow(opx, -1) - pow(ln(z), 2) * pow(x, -2) * z * CF - 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 2 * pow(ln(z), 2) * pow(x, -2) * pow(z, 2) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(x, -1) * CF + pow(ln(z), 2) * pow(x, -1) * z * CF - 2 * pow(ln(z), 2) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + pow(ln(z), 2) * CF * pow(omx, -1) - 1.0 / 2.0 * pow(ln(z), 2) * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * z * CF * pow(omx, -1) + pow(ln(z), 2) * z * CF * pow(opx, -1) - 2 * pow(ln(z), 2) * z * CF + 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(omx, -1) - 2 * pow(ln(z), 2) * pow(z, 2) * CF * pow(opx, -1) - 3 * pow(ln(z), 2) * x * CF + 2 * pow(ln(z), 2) * x * z * CF - 4 * pow(ln(z), 2) * x * pow(z, 2) * CF - ln(z) * ln(omx) * CF - ln(z) * ln(omx) * x * CF - 2 * ln(z) * ln(omx) * x * z * CF + 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1)
                result += +8 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(z) * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * ln(z) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(z) * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * ln(z) * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(z) * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - ln(z) * ln(omz) * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * z * CF * pow(omx, -1) + 2 * ln(z) * ln(omz) * x * CF - 4 * ln(z) * ln(omz) * x * z * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 6.0 * ln(omx) * pow(z, -1) * CF - 3.0 / 2.0 * ln(omx) * CF + 3.0 / 2.0 * ln(omx) * z * CF - 2.0 / 3.0 * ln(omx) * pow(z, 2) * CF - 5.0 / 6.0 * ln(omx) * x * pow(z, -1) * CF - 1.0 / 2.0 * ln(omx) * x * CF + 1.0 / 2.0 * ln(omx) * x * z * CF + 4.0 / 3.0 * ln(omx) * x * pow(z, 2) * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1)
                result += +16 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) + 32 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 32 * ln(omz) * pow(NC, -1) * pow(sqrtxz1, -1) * rln2 * CF - 8 * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * rln2 * CF * pow(omx, -1) - 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF * pow(opz, -1) + 8 * ln(omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * rln2 * CF - 24 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) + 16 * ln(omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * rln2 * CF + 8 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 8 * ln(omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * rln2 * CF + 32 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF * pow(opz, -1) - 32 * ln(omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * rln2 * CF + 2.0 / 3.0 * ln(omz) * pow(x, -1) * pow(z, -1) * CF - 4.0 / 3.0 * ln(omz) * pow(x, -1) * CF + 1.0 / 6.0 * ln(omz) * pow(z, -1) * CF - 3.0 / 2.0 * ln(omz) * CF + 3.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF - 5.0 / 6.0 * ln(omz) * x * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * x * CF + 1.0 / 2.0 * ln(omz) * x * z * CF + 4.0 / 3.0 * ln(omz) * x * pow(z, 2) * CF - 2.0 / 3.0 * ln(omz) * pow(x, 2) * pow(z, -1) * CF + 4.0 / 3.0 * ln(omz) * pow(x, 2) * CF - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1)
                result += -32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 24 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 32 * ln(omz) * ln(1 + sqrtxz1 - z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF
                result += +4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 12 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * ln(omz) * ln(1 - 2 * z + pow(z, 2) + 4 * x * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * pow(ln(omz), 2) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * pow(ln(omz), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1)
                result += -4 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * pow(ln(omz), 2) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * pow(ln(omz), 2) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * pow(ln(omz), 2) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF
                result += -1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) - 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * z * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 3) * pow(sqrtxz2, -1) * CF
                result += -1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(x, -1) + 1.0 / 2.0 * pow(x, -1) * sqrtxz2) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1)
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF - 6 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1)
                result += +4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 3 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1)
                result += +4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * x * z * CF + 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * CF + 6 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * pow(z, -1) - 1.0 / 2.0 * pow(z, -1) * sqrtxz1) * x * z * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF
                result += +1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 3.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF - 1.0 / 2.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF + Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, -1) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * z * pow(sqrtxz2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * pow(poly2, -1) * CF + 3.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(sqrtxz2, -1) * CF + 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * z * pow(sqrtxz2, -1) * CF - 4 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * x * pow(z, 2) * pow(sqrtxz2, -1) * CF + 1.0 / 2.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * pow(sqrtxz2, -1) * CF - Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 2) * z * pow(sqrtxz2, -1) * CF
                result += -1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 3) * pow(sqrtxz2, -1) * CF + 1.0 / 4.0 * Li2(1.0 / 2.0 + 1.0 / 2.0 * sqrtxz2 - 1.0 / 2.0 * x) * pow(x, 5) * pow(sqrtxz2, -1) * pow(poly2, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * z * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 - 1.0 / 2.0 * z) * x * pow(z, 2) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1)
                result += +4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF + 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF + 12 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * CF - 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * x * z * CF
                result += -16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 3 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * CF * pow(omx, -1) - 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF * pow(omx, -1) + 4 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * z * CF - 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * pow(z, 2) * CF * pow(omx, -1) + 2 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * CF + 8 * Li2(1.0 / 2.0 - 1.0 / 2.0 * sqrtxz1 + 1.0 / 2.0 * z) * x * pow(z, 2) * CF + Li2(1 - x * pow(z, -1)) * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * z * CF * pow(omx, -1) - 2 * Li2(1 - x * pow(z, -1)) * x * CF + 4 * Li2(1 - x * pow(z, -1)) * x * z * CF + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF
                result += -24 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(pow(sqrtxz1, -1) * omz) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1) + 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 24 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 16 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF
                result += +8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 8 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 32 * Li2(-sqrtxz1 * pow(omz, -1)) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF - 4 * Li2(-z) * pow(NC, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2 * Li2(-z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(-z) * pow(NC, -1) * z * CF * pow(omx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * CF - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1)
                result += -2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 2 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(-x * pow(z, -1)) * pow(NC, -1) * x * z * CF + Li2(-x * pow(z, -1)) * pow(x, -2) * CF * pow(opx, -1) - Li2(-x * pow(z, -1)) * pow(x, -2) * CF - 2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * pow(x, -2) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * pow(x, -2) * pow(z, 2) * CF + Li2(-x * pow(z, -1)) * pow(x, -1) * CF - 2 * Li2(-x * pow(z, -1)) * pow(x, -1) * z * CF + 4 * Li2(-x * pow(z, -1)) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x * pow(z, -1)) * CF * pow(omx, -1) + Li2(-x * pow(z, -1)) * CF * pow(opx, -1) - 2 * Li2(-x * pow(z, -1)) * CF + 4 * Li2(-x * pow(z, -1)) * z * CF * pow(omx, -1) - 2 * Li2(-x * pow(z, -1)) * z * CF * pow(opx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(omx, -1) + 4 * Li2(-x * pow(z, -1)) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * pow(z, -1)) * x * z * CF - 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1)
                result += -4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * CF + 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(x, -2) * z * CF - 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 4 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(-x) * pow(NC, -1) * CF - 4 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) + 4 * Li2(-x) * pow(NC, -1) * x * pow(z, -1) * CF + 4 * Li2(-x) * pow(NC, -1) * x * CF - 2 * Li2(-x) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(-x) * pow(x, -2) * CF + 4 * Li2(-x) * pow(x, -2) * z * CF * pow(opx, -1) - 4 * Li2(-x) * pow(x, -2) * z * CF - 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) + 8 * Li2(-x) * pow(x, -2) * pow(z, 2) * CF - 2 * Li2(-x) * pow(x, -1) * CF + 4 * Li2(-x) * pow(x, -1) * z * CF - 8 * Li2(-x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x) * CF * pow(opx, -1) + 4 * Li2(-x) * CF - 4 * Li2(-x) * z * CF * pow(opx, -1) - 8 * Li2(-x) * z * CF + 4 * Li2(-x) * x * CF - 8 * Li2(-x) * x * z * CF + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1)
                result += +2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * CF - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -2) * z * CF + 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) * pow(opz, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * CF * pow(omx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * CF * pow(opx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(omx, -1) - 2 * Li2(-x * z) * pow(NC, -1) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 2 * Li2(-x * z) * pow(NC, -1) * x * pow(z, -1) * CF * pow(opz, -1) - 4 * Li2(-x * z) * pow(NC, -1) * x * CF + Li2(-x * z) * pow(x, -2) * CF * pow(opx, -1) - Li2(-x * z) * pow(x, -2) * CF - 2 * Li2(-x * z) * pow(x, -2) * z * CF * pow(opx, -1) + 2 * Li2(-x * z) * pow(x, -2) * z * CF + 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 4 * Li2(-x * z) * pow(x, -2) * pow(z, 2) * CF + Li2(-x * z) * pow(x, -1) * CF - 2 * Li2(-x * z) * pow(x, -1) * z * CF + 4 * Li2(-x * z) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - 2 * Li2(-x * z) * CF * pow(omx, -1)
                result += +Li2(-x * z) * CF * pow(opx, -1) - 4 * Li2(-x * z) * z * CF * pow(omx, -1) - 2 * Li2(-x * z) * z * CF * pow(opx, -1) + 4 * Li2(-x * z) * z * CF - 4 * Li2(-x * z) * pow(z, 2) * CF * pow(omx, -1) + 4 * Li2(-x * z) * pow(z, 2) * CF * pow(opx, -1) + 2 * Li2(-x * z) * x * CF + 8 * Li2(-x * z) * x * pow(z, 2) * CF + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) * pow(opz, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(z, -1) * sqrtxz1 * CF * pow(omx, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(omx, -1) + 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(sqrtxz1, -1) * CF - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) * pow(opz, -1) + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * z * pow(sqrtxz1, -1) * CF * pow(omx, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF * pow(opz, -1)
                result += +4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(z, -1) * sqrtxz1 * CF - 12 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF * pow(opz, -1) + 8 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * pow(sqrtxz1, -1) * CF + 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 4 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * x * z * pow(sqrtxz1, -1) * CF + 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF * pow(opz, -1) - 16 * Li2(-1 / (1 + sqrtxz1 - z) + 1 / (1 + sqrtxz1 - z) * sqrtxz1 + 1 / (1 + sqrtxz1 - z) * z) * pow(NC, -1) * pow(x, 2) * pow(sqrtxz1, -1) * CF + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(omz, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * pow(z, -1) * CF - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * CF * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * CF - 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(x, -2) * z * CF + 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * pow(z, -1) * CF * pow(opx, -1)
                result += -4 * Li2(x) * pow(NC, -1) * pow(x, -1) * CF * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(x, -1) * z * CF * pow(opx, -1) - 2 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omx, -1) + 4 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(omz, -1) * pow(opx, -1) - 4 * Li2(x) * pow(NC, -1) * pow(z, -1) * CF * pow(opx, -1) + Li2(x) * pow(NC, -1) * pow(z, -1) * CF + 4 * Li2(x) * pow(NC, -1) * CF * pow(omx, -1) - 4 * Li2(x) * pow(NC, -1) * CF * pow(omz, -1) * pow(opx, -1) - 2 * Li2(x) * pow(NC, -1) * CF - 2 * Li2(x) * pow(NC, -1) * z * CF * pow(omx, -1) + 4 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF * pow(omz, -1) - 3 * Li2(x) * pow(NC, -1) * x * pow(z, -1) * CF - 4 * Li2(x) * pow(NC, -1) * x * CF * pow(omz, -1) - 2 * Li2(x) * pow(NC, -1) * x * CF + 2 * Li2(x) * pow(NC, -1) * x * z * CF + 2 * Li2(x) * pow(x, -2) * CF * pow(opx, -1) - 2 * Li2(x) * pow(x, -2) * CF - 4 * Li2(x) * pow(x, -2) * z * CF * pow(opx, -1) + 4 * Li2(x) * pow(x, -2) * z * CF + 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF * pow(opx, -1) - 8 * Li2(x) * pow(x, -2) * pow(z, 2) * CF + 2 * Li2(x) * pow(x, -1) * CF - 4 * Li2(x) * pow(x, -1) * z * CF + 8 * Li2(x) * pow(x, -1) * pow(z, 2) * CF * pow(opx, -1) - Li2(x) * pow(z, -1) * CF - 3 * Li2(x) * CF * pow(omx, -1) - 2 * Li2(x) * CF * pow(opx, -1) + 2 * Li2(x) * CF + 6 * Li2(x) * z * CF * pow(omx, -1) + 4 * Li2(x) * z * CF * pow(opx, -1) - 8 * Li2(x) * pow(z, 2) * CF * pow(omx, -1) - Li2(x) * x * pow(z, -1) * CF + 4 * Li2(x) * x * CF - 4 * Li2(x) * x * z * CF + 8 * Li2(x) * x * pow(z, 2) * CF - Li2(z) * CF * pow(omx, -1) + Li2(z) * CF + 2 * Li2(z) * z * CF * pow(omx, -1) + 3 * Li2(z) * x * CF - 2 * Li2(z) * x * z * CF
        elif orders == "001":
            if z != x and z != round(1 - x, ndecimals):
                result += +ln(z) * LMUA * CF + ln(z) * LMUA * x * CF + 2 * ln(z) * LMUA * x * z * CF + 1.0 / 3.0 * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * LMUA * CF - 3.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF + 1.0 / 3.0 * LMUA * x * pow(z, -1) * CF + 3.0 / 2.0 * LMUA * x * CF - 1.0 / 2.0 * LMUA * x * z * CF - 4.0 / 3.0 * LMUA * x * pow(z, 2) * CF
        elif orders == "010":
            if z != x and z != round(1 - x, ndecimals):
                result += -ln(x) * LMUF * pow(z, -1) * CF + 2 * ln(x) * LMUF * CF - ln(x) * LMUF * x * pow(z, -1) * CF + 2 * ln(x) * LMUF * x * CF - 2.0 / 3.0 * LMUF * pow(x, -1) * pow(z, -1) * CF + 4.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * pow(z, -1) * CF + LMUF * CF + 1.0 / 2.0 * LMUF * x * pow(z, -1) * CF - LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * pow(z, -1) * CF - 4.0 / 3.0 * LMUF * pow(x, 2) * CF
        return result
    elif rsl == "rs":
        result = 0
        if orders == "000":
            result_r0 = -2 * pow(NC, -1) * CF + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 2 * pow(NC, -1) * x * CF + 1.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF - ln(x) * pow(NC, -1) * CF - ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * CF + 2 * ln(x) * ln(1 + x) * pow(NC, -1) * x * CF - pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF - 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 4 * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * CF + 2 * Li2(-x) * pow(NC, -1) * x * CF - Li2(x) * CF - Li2(x) * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + ln(x) * CF + ln(x) * x * CF
            result += result_r0 * 1 / (1 - z) + result_r1 * ln(1 - z) / (1 - z)
        elif orders == "010":
            result_r0 = -2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF
            result += result_r0 * 1 / (1 - z)
        return result
    elif rsl == "rl":
        result = 0
        if orders == "000":
            result += -15.0 / 4.0 * pow(NC, -1) * CF + 2 * pow(NC, -1) * zeta3 * CF * pow(opx, -1) - pow(NC, -1) * zeta3 * CF + 4.0 / 3.0 * pow(NC, -1) * pow(rln2, 3) * CF * pow(opx, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(rln2, 3) * CF - 1.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * rln2 * CF * pow(opx, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * rln2 * CF + 15.0 / 4.0 * pow(NC, -1) * x * CF + pow(NC, -1) * x * zeta3 * CF + 2.0 / 3.0 * pow(NC, -1) * x * pow(rln2, 3) * CF - 1.0 / 12.0 * pow(NC, -1) * x * pow(pi, 2) * CF - 1.0 / 3.0 * pow(NC, -1) * x * pow(pi, 2) * rln2 * CF + 52.0 / 27.0 * pow(x, -1) * CF - 41.0 / 36.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 36.0 * x * CF + 1.0 / 2.0 * x * pow(pi, 2) * CF - 34.0 / 27.0 * pow(x, 2) * CF + 1.0 / 3.0 * pow(x, 2) * pow(pi, 2) * CF - 2 * ln(1 + x) * pow(NC, -1) * pow(rln2, 2) * CF * pow(opx, -1) + ln(1 + x) * pow(NC, -1) * pow(rln2, 2) * CF - 1.0 / 3.0 * ln(1 + x) * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 6.0 * ln(1 + x) * pow(NC, -1) * pow(pi, 2) * CF - ln(1 + x) * pow(NC, -1) * x * pow(rln2, 2) * CF - 1.0 / 6.0 * ln(1 + x) * pow(NC, -1) * x * pow(pi, 2) * CF + 2.0 / 3.0 * pow(ln(1 + x), 3) * pow(NC, -1) * CF * pow(opx, -1) - 1.0 / 3.0 * pow(ln(1 + x), 3) * pow(NC, -1) * CF
            result += +1.0 / 3.0 * pow(ln(1 + x), 3) * pow(NC, -1) * x * CF - 3.0 / 4.0 * ln(x) * pow(NC, -1) * CF - 2.0 / 3.0 * ln(x) * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 3.0 * ln(x) * pow(NC, -1) * pow(pi, 2) * CF - 19.0 / 4.0 * ln(x) * pow(NC, -1) * x * CF - 1.0 / 3.0 * ln(x) * pow(NC, -1) * x * pow(pi, 2) * CF + 23.0 / 6.0 * ln(x) * CF - 1.0 / 3.0 * ln(x) * pow(pi, 2) * CF - 5.0 / 6.0 * ln(x) * x * CF - 1.0 / 3.0 * ln(x) * x * pow(pi, 2) * CF + 38.0 / 9.0 * ln(x) * pow(x, 2) * CF + ln(x) * ln(1 + x) * pow(NC, -1) * CF + ln(x) * ln(1 + x) * pow(NC, -1) * x * CF + pow(ln(x), 2) * pow(NC, -1) * x * CF - 13.0 / 8.0 * pow(ln(x), 2) * CF - 13.0 / 8.0 * pow(ln(x), 2) * x * CF - 5.0 / 3.0 * pow(ln(x), 2) * pow(x, 2) * CF - 4 * pow(ln(x), 2) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) + 2 * pow(ln(x), 2) * ln(1 + x) * pow(NC, -1) * CF - 2 * pow(ln(x), 2) * ln(1 + x) * pow(NC, -1) * x * CF + 1.0 / 2.0 * pow(ln(x), 3) * pow(NC, -1) * CF * pow(opx, -1) - 1.0 / 4.0 * pow(ln(x), 3) * pow(NC, -1) * CF + 1.0 / 4.0 * pow(ln(x), 3) * pow(NC, -1) * x * CF + 5.0 / 12.0 * pow(ln(x), 3) * CF + 5.0 / 12.0 * pow(ln(x), 3) * x * CF - 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, -1) * CF - 1.0 / 2.0 * ln(x) * ln(omx) * CF
            result += +1.0 / 2.0 * ln(x) * ln(omx) * x * CF + 2.0 / 3.0 * ln(x) * ln(omx) * pow(x, 2) * CF + 4 * ln(x) * ln(omx) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(omx) * ln(1 + x) * pow(NC, -1) * CF + 2 * ln(x) * ln(omx) * ln(1 + x) * pow(NC, -1) * x * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * CF - 1.0 / 2.0 * ln(x) * pow(ln(omx), 2) * x * CF - 4 * ln(x) * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) + 2 * ln(x) * Li2(-x) * pow(NC, -1) * CF - 2 * ln(x) * Li2(-x) * pow(NC, -1) * x * CF + ln(x) * Li2(x) * CF + ln(x) * Li2(x) * x * CF - 2 * ln(omx) * pow(NC, -1) * CF - 2 * ln(omx) * pow(NC, -1) * pow(rln2, 2) * CF * pow(opx, -1) + ln(omx) * pow(NC, -1) * pow(rln2, 2) * CF + 1.0 / 3.0 * ln(omx) * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 6.0 * ln(omx) * pow(NC, -1) * pow(pi, 2) * CF + 2 * ln(omx) * pow(NC, -1) * x * CF - ln(omx) * pow(NC, -1) * x * pow(rln2, 2) * CF + 1.0 / 6.0 * ln(omx) * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * ln(omx) * pow(x, -1) * CF - 11.0 / 6.0 * ln(omx) * CF + 1.0 / 6.0 * ln(omx) * pow(pi, 2) * CF + 17.0 / 6.0 * ln(omx) * x * CF + 1.0 / 6.0 * ln(omx) * x * pow(pi, 2) * CF - 22.0 / 9.0 * ln(omx) * pow(x, 2) * CF + 4 * ln(omx) * ln(1 + x) * pow(NC, -1) * rln2 * CF * pow(opx, -1) - 2 * ln(omx) * ln(1 + x) * pow(NC, -1) * rln2 * CF + 2 * ln(omx) * ln(1 + x) * pow(NC, -1) * x * rln2 * CF - 2 * ln(omx) * pow(ln(1 + x), 2) * pow(NC, -1) * CF * pow(opx, -1) + ln(omx) * pow(ln(1 + x), 2) * pow(NC, -1) * CF - ln(omx) * pow(ln(1 + x), 2) * pow(NC, -1) * x * CF + 1.0 / 3.0 * pow(ln(omx), 2) * pow(x, -1) * CF + 1.0 / 4.0 * pow(ln(omx), 2) * CF - 1.0 / 4.0 * pow(ln(omx), 2) * x * CF
            result += -1.0 / 3.0 * pow(ln(omx), 2) * pow(x, 2) * CF + 4 * ln(omx) * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(omx) * Li2(-x) * pow(NC, -1) * CF + 2 * ln(omx) * Li2(-x) * pow(NC, -1) * x * CF - ln(omx) * Li2(x) * CF - ln(omx) * Li2(x) * x * CF + ln(opx) * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 2.0 * ln(opx) * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 2.0 * ln(opx) * pow(NC, -1) * x * pow(pi, 2) * CF - 4 * Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * pow(NC, -1) * CF * pow(opx, -1) + 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * pow(NC, -1) * CF - 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * x) * pow(NC, -1) * x * CF - 4 * Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * pow(NC, -1) * CF * pow(opx, -1) + 2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * pow(NC, -1) * CF - 2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * x) * pow(NC, -1) * x * CF + 4 * Li3(1 - x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * Li3(1 - x) * pow(NC, -1) * CF + 2 * Li3(1 - x) * pow(NC, -1) * x * CF - Li3(1 - x) * CF - Li3(1 - x) * x * CF - 4 * Li3(1 / (1 + x) - 1 / (1 + x) * x) * pow(NC, -1) * CF * pow(opx, -1) + 2 * Li3(1 / (1 + x) - 1 / (1 + x) * x) * pow(NC, -1) * CF - 2 * Li3(1 / (1 + x) - 1 / (1 + x) * x) * pow(NC, -1) * x * CF + 2 * Li3(x) * pow(NC, -1) * CF * pow(opx, -1) - Li3(x) * pow(NC, -1) * CF + Li3(x) * pow(NC, -1) * x * CF + Li2(-x) * pow(NC, -1) * CF + Li2(-x) * pow(NC, -1) * x * CF + Li2(x) * pow(NC, -1) * CF + Li2(x) * pow(NC, -1) * x * CF - 2.0 / 3.0 * Li2(x) * pow(x, -1) * CF - 3.0 / 2.0 * Li2(x) * CF - 5.0 / 2.0 * Li2(x) * x * CF - 4.0 / 3.0 * Li2(x) * pow(x, 2) * CF
            result_r0 = -2 * pow(NC, -1) * CF + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 2 * pow(NC, -1) * x * CF + 1.0 / 6.0 * pow(NC, -1) * x * pow(pi, 2) * CF + 13.0 / 9.0 * pow(x, -1) * CF - 11.0 / 6.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 17.0 / 6.0 * x * CF + 1.0 / 6.0 * x * pow(pi, 2) * CF - 22.0 / 9.0 * pow(x, 2) * CF - ln(x) * pow(NC, -1) * CF - ln(x) * pow(NC, -1) * x * CF + ln(x) * CF + 3 * ln(x) * x * CF + 2 * ln(x) * pow(x, 2) * CF + 4 * ln(x) * ln(1 + x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * ln(x) * ln(1 + x) * pow(NC, -1) * CF + 2 * ln(x) * ln(1 + x) * pow(NC, -1) * x * CF - pow(ln(x), 2) * pow(NC, -1) * CF * pow(opx, -1) + 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * CF - 1.0 / 2.0 * pow(ln(x), 2) * pow(NC, -1) * x * CF - pow(ln(x), 2) * CF - pow(ln(x), 2) * x * CF + 2.0 / 3.0 * ln(omx) * pow(x, -1) * CF + 1.0 / 2.0 * ln(omx) * CF - 1.0 / 2.0 * ln(omx) * x * CF - 2.0 / 3.0 * ln(omx) * pow(x, 2) * CF + 4 * Li2(-x) * pow(NC, -1) * CF * pow(opx, -1) - 2 * Li2(-x) * pow(NC, -1) * CF + 2 * Li2(-x) * pow(NC, -1) * x * CF - Li2(x) * CF - Li2(x) * x * CF
            result_r1 = 2.0 / 3.0 * pow(x, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * x * CF - 2.0 / 3.0 * pow(x, 2) * CF + ln(x) * CF + ln(x) * x * CF
            result += result_r0 * ln(1 - z) + result_r1 * ln(1 - z) * ln(1 - z) / 2
        elif orders == "010":
            result += +2 * LMUF * pow(NC, -1) * CF - 1.0 / 3.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF * pow(opx, -1) + 1.0 / 6.0 * LMUF * pow(NC, -1) * pow(pi, 2) * CF - 2 * LMUF * pow(NC, -1) * x * CF - 1.0 / 6.0 * LMUF * pow(NC, -1) * x * pow(pi, 2) * CF - 13.0 / 9.0 * LMUF * pow(x, -1) * CF + 11.0 / 6.0 * LMUF * CF - 1.0 / 6.0 * LMUF * pow(pi, 2) * CF - 17.0 / 6.0 * LMUF * x * CF - 1.0 / 6.0 * LMUF * x * pow(pi, 2) * CF + 22.0 / 9.0 * LMUF * pow(x, 2) * CF - 4 * Li2(-x) * LMUF * pow(NC, -1) * CF * pow(opx, -1) + 2 * Li2(-x) * LMUF * pow(NC, -1) * CF - 2 * Li2(-x) * LMUF * pow(NC, -1) * x * CF + Li2(x) * LMUF * CF + Li2(x) * LMUF * x * CF - 2.0 / 3.0 * ln(omx) * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * ln(omx) * LMUF * CF + 1.0 / 2.0 * ln(omx) * LMUF * x * CF + 2.0 / 3.0 * ln(omx) * LMUF * pow(x, 2) * CF + ln(x) * LMUF * pow(NC, -1) * CF + ln(x) * LMUF * pow(NC, -1) * x * CF - ln(x) * LMUF * CF - 3 * ln(x) * LMUF * x * CF - 2 * ln(x) * LMUF * pow(x, 2) * CF - 4 * ln(x) * ln(1 + x) * LMUF * pow(NC, -1) * CF * pow(opx, -1) + 2 * ln(x) * ln(1 + x) * LMUF * pow(NC, -1) * CF - 2 * ln(x) * ln(1 + x) * LMUF * pow(NC, -1) * x * CF + pow(ln(x), 2) * LMUF * pow(NC, -1) * CF * pow(opx, -1) - 1.0 / 2.0 * pow(ln(x), 2) * LMUF * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(x), 2) * LMUF * pow(NC, -1) * x * CF + pow(ln(x), 2) * LMUF * CF + pow(ln(x), 2) * LMUF * x * CF
            result_r0 = -2.0 / 3.0 * LMUF * pow(x, -1) * CF - 1.0 / 2.0 * LMUF * CF + 1.0 / 2.0 * LMUF * x * CF + 2.0 / 3.0 * LMUF * pow(x, 2) * CF - ln(x) * LMUF * CF - ln(x) * LMUF * x * CF
            result += result_r0 * ln(1 - z)
        elif orders == "020":
            result += +1.0 / 3.0 * pow(LMUF, 2) * pow(x, -1) * CF + 1.0 / 4.0 * pow(LMUF, 2) * CF - 1.0 / 4.0 * pow(LMUF, 2) * x * CF - 1.0 / 3.0 * pow(LMUF, 2) * pow(x, 2) * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * CF + 1.0 / 2.0 * ln(x) * pow(LMUF, 2) * x * CF
        return result
    elif rsl == "sr":
        result = 0
        if orders == "000":
            result_0r = -2 * pow(NC, -1) * CF + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 2 * pow(NC, -1) * z * CF + 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF - ln(z) * pow(NC, -1) * CF - ln(z) * pow(NC, -1) * z * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + 4 * ln(z) * ln(1 + z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * ln(z) * ln(1 + z) * pow(NC, -1) * CF + 2 * ln(z) * ln(1 + z) * pow(NC, -1) * z * CF - pow(ln(z), 2) * pow(NC, -1) * CF * pow(opz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF + 4 * Li2(-z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * Li2(-z) * pow(NC, -1) * CF + 2 * Li2(-z) * pow(NC, -1) * z * CF - Li2(z) * CF - Li2(z) * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + ln(z) * CF + ln(z) * z * CF
            result += result_0r * 1 / (1 - x) + result_1r * ln(1 - x) / (1 - x)
        elif orders == "001":
            result_0r = -2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF
            result += result_0r * 1 / (1 - x)
        return result
    elif rsl == "ss":
        result = 0
        return result
    elif rsl == "sl":
        result = 0
        return result
    elif rsl == "lr":
        result = 0
        if orders == "000":
            result += 1.0 / 4.0 * pow(NC, -1) * CF + 4.0 / 3.0 * pow(NC, -1) * pow(rln2, 3) * CF * pow(opz, -1) - 2.0 / 3.0 * pow(NC, -1) * pow(rln2, 3) * CF - 1.0 / 12.0 * pow(NC, -1) * pow(pi, 2) * CF - 2.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * rln2 * CF * pow(opz, -1) + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * rln2 * CF - 1.0 / 4.0 * pow(NC, -1) * z * CF + 2.0 / 3.0 * pow(NC, -1) * z * pow(rln2, 3) * CF - 1.0 / 12.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 1.0 / 3.0 * pow(NC, -1) * z * pow(pi, 2) * rln2 * CF - 107.0 / 108.0 * pow(z, -1) * CF - 11.0 / 9.0 * CF + 2 * zeta3 * CF - 1.0 / 6.0 * pow(pi, 2) * CF - 4.0 / 9.0 * z * CF + 2 * z * zeta3 * CF - 1.0 / 4.0 * z * pow(pi, 2) * CF + 287.0 / 108.0 * pow(z, 2) * CF - 2 * ln(1 + z) * pow(NC, -1) * pow(rln2, 2) * CF * pow(opz, -1) + ln(1 + z) * pow(NC, -1) * pow(rln2, 2) * CF + 1.0 / 3.0 * ln(1 + z) * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) - 1.0 / 6.0 * ln(1 + z) * pow(NC, -1) * pow(pi, 2) * CF - ln(1 + z) * pow(NC, -1) * z * pow(rln2, 2) * CF + 1.0 / 6.0 * ln(1 + z) * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 4.0 * ln(z) * pow(NC, -1) * CF + 1.0 / 4.0 * ln(z) * pow(NC, -1) * z * CF - 7.0 / 18.0 * ln(z) * pow(z, -1) * CF - 5 * ln(z) * CF + 1.0 / 6.0 * ln(z) * pow(pi, 2) * CF - 9.0 / 2.0 * ln(z) * z * CF + 1.0 / 6.0 * ln(z) * z * pow(pi, 2) * CF
            result += -31.0 / 18.0 * ln(z) * pow(z, 2) * CF + ln(z) * ln(1 + z) * pow(NC, -1) * CF + ln(z) * ln(1 + z) * pow(NC, -1) * z * CF - pow(ln(z), 2) * pow(NC, -1) * CF - pow(ln(z), 2) * pow(NC, -1) * z * CF + 1.0 / 3.0 * pow(ln(z), 2) * pow(z, -1) * CF - 1.0 / 8.0 * pow(ln(z), 2) * CF - 5.0 / 8.0 * pow(ln(z), 2) * z * CF + 3 * pow(ln(z), 2) * ln(1 + z) * pow(NC, -1) * CF * pow(opz, -1) - 3.0 / 2.0 * pow(ln(z), 2) * ln(1 + z) * pow(NC, -1) * CF + 3.0 / 2.0 * pow(ln(z), 2) * ln(1 + z) * pow(NC, -1) * z * CF - 5.0 / 6.0 * pow(ln(z), 3) * pow(NC, -1) * CF * pow(opz, -1) + 5.0 / 12.0 * pow(ln(z), 3) * pow(NC, -1) * CF - 5.0 / 12.0 * pow(ln(z), 3) * pow(NC, -1) * z * CF + 5.0 / 12.0 * pow(ln(z), 3) * CF + 5.0 / 12.0 * pow(ln(z), 3) * z * CF + 4 * ln(z) * ln(omz) * ln(1 + z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * ln(z) * ln(omz) * ln(1 + z) * pow(NC, -1) * CF + 2 * ln(z) * ln(omz) * ln(1 + z) * pow(NC, -1) * z * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * CF - 1.0 / 2.0 * ln(z) * pow(ln(omz), 2) * z * CF + 2 * ln(z) * Li2(-z) * pow(NC, -1) * CF * pow(opz, -1) - ln(z) * Li2(-z) * pow(NC, -1) * CF
            result += +ln(z) * Li2(-z) * pow(NC, -1) * z * CF - 2 * ln(omz) * pow(NC, -1) * CF - 2 * ln(omz) * pow(NC, -1) * pow(rln2, 2) * CF * pow(opz, -1) + ln(omz) * pow(NC, -1) * pow(rln2, 2) * CF + 1.0 / 3.0 * ln(omz) * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) - 1.0 / 6.0 * ln(omz) * pow(NC, -1) * pow(pi, 2) * CF + 2 * ln(omz) * pow(NC, -1) * z * CF - ln(omz) * pow(NC, -1) * z * pow(rln2, 2) * CF + 1.0 / 6.0 * ln(omz) * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * ln(omz) * pow(z, -1) * CF - 10.0 / 3.0 * ln(omz) * CF + 1.0 / 6.0 * ln(omz) * pow(pi, 2) * CF + 7.0 / 3.0 * ln(omz) * z * CF + 1.0 / 6.0 * ln(omz) * z * pow(pi, 2) * CF + 25.0 / 18.0 * ln(omz) * pow(z, 2) * CF + 4 * ln(omz) * ln(1 + z) * pow(NC, -1) * rln2 * CF * pow(opz, -1) - 2 * ln(omz) * ln(1 + z) * pow(NC, -1) * rln2 * CF + 2 * ln(omz) * ln(1 + z) * pow(NC, -1) * z * rln2 * CF - 2 * ln(omz) * pow(ln(1 + z), 2) * pow(NC, -1) * CF * pow(opz, -1) + ln(omz) * pow(ln(1 + z), 2) * pow(NC, -1) * CF - ln(omz) * pow(ln(1 + z), 2) * pow(NC, -1) * z * CF + 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(ln(omz), 2) * CF - 1.0 / 4.0 * pow(ln(omz), 2) * z * CF - 1.0 / 3.0 * pow(ln(omz), 2) * pow(z, 2) * CF + 4 * ln(omz) * Li2(-z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * ln(omz) * Li2(-z) * pow(NC, -1) * CF + 2 * ln(omz) * Li2(-z) * pow(NC, -1) * z * CF - ln(omz) * Li2(z) * CF - ln(omz) * Li2(z) * z * CF + 2.0 / 3.0 * ln(opz) * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) - 1.0 / 3.0 * ln(opz) * pow(NC, -1) * pow(pi, 2) * CF + 1.0 / 3.0 * ln(opz) * pow(NC, -1) * z * pow(pi, 2) * CF - 4 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(opz, -1) + 2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * pow(NC, -1) * CF
            result += -2 * Li3(1.0 / 2.0 - 1.0 / 2.0 * z) * pow(NC, -1) * z * CF - 4 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * pow(NC, -1) * CF * pow(opz, -1) + 2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * pow(NC, -1) * CF - 2 * Li3(1.0 / 2.0 + 1.0 / 2.0 * z) * pow(NC, -1) * z * CF + 4 * Li3(1 - z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * Li3(1 - z) * pow(NC, -1) * CF + 2 * Li3(1 - z) * pow(NC, -1) * z * CF - Li3(1 - z) * CF - Li3(1 - z) * z * CF + 2 * Li3(-z) * pow(NC, -1) * CF * pow(opz, -1) - Li3(-z) * pow(NC, -1) * CF + Li3(-z) * pow(NC, -1) * z * CF + 4 * Li3(1 / (1 + z)) * pow(NC, -1) * CF * pow(opz, -1) - 2 * Li3(1 / (1 + z)) * pow(NC, -1) * CF + 2 * Li3(1 / (1 + z)) * pow(NC, -1) * z * CF - 4 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * pow(NC, -1) * CF * pow(opz, -1) + 2 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * pow(NC, -1) * CF - 2 * Li3(1 / (1 + z) - 1 / (1 + z) * z) * pow(NC, -1) * z * CF + 2 * Li3(z) * pow(NC, -1) * CF * pow(opz, -1) - Li3(z) * pow(NC, -1) * CF + Li3(z) * pow(NC, -1) * z * CF - 2 * Li3(z) * CF - 2 * Li3(z) * z * CF + Li2(-z) * pow(NC, -1) * CF + Li2(-z) * pow(NC, -1) * z * CF + Li2(z) * pow(NC, -1) * CF + Li2(z) * pow(NC, -1) * z * CF - 2.0 / 3.0 * Li2(z) * pow(z, -1) * CF + 1.0 / 2.0 * Li2(z) * CF + 2 * Li2(z) * z * CF + 2.0 / 3.0 * Li2(z) * pow(z, 2) * CF
            result_0r = -2 * pow(NC, -1) * CF + 1.0 / 3.0 * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) - 1.0 / 6.0 * pow(NC, -1) * pow(pi, 2) * CF + 2 * pow(NC, -1) * z * CF + 1.0 / 6.0 * pow(NC, -1) * z * pow(pi, 2) * CF - 7.0 / 18.0 * pow(z, -1) * CF - 10.0 / 3.0 * CF + 1.0 / 6.0 * pow(pi, 2) * CF + 7.0 / 3.0 * z * CF + 1.0 / 6.0 * z * pow(pi, 2) * CF + 25.0 / 18.0 * pow(z, 2) * CF - ln(z) * pow(NC, -1) * CF - ln(z) * pow(NC, -1) * z * CF + 2.0 / 3.0 * ln(z) * pow(z, -1) * CF - 1.0 / 2.0 * ln(z) * CF - 2 * ln(z) * z * CF - 2.0 / 3.0 * ln(z) * pow(z, 2) * CF + 4 * ln(z) * ln(1 + z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * ln(z) * ln(1 + z) * pow(NC, -1) * CF + 2 * ln(z) * ln(1 + z) * pow(NC, -1) * z * CF - pow(ln(z), 2) * pow(NC, -1) * CF * pow(opz, -1) + 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * CF - 1.0 / 2.0 * pow(ln(z), 2) * pow(NC, -1) * z * CF + pow(ln(z), 2) * CF + pow(ln(z), 2) * z * CF + 2.0 / 3.0 * ln(omz) * pow(z, -1) * CF + 1.0 / 2.0 * ln(omz) * CF - 1.0 / 2.0 * ln(omz) * z * CF - 2.0 / 3.0 * ln(omz) * pow(z, 2) * CF + 4 * Li2(-z) * pow(NC, -1) * CF * pow(opz, -1) - 2 * Li2(-z) * pow(NC, -1) * CF + 2 * Li2(-z) * pow(NC, -1) * z * CF - Li2(z) * CF - Li2(z) * z * CF
            result_1r = 2.0 / 3.0 * pow(z, -1) * CF + 1.0 / 2.0 * CF - 1.0 / 2.0 * z * CF - 2.0 / 3.0 * pow(z, 2) * CF + ln(z) * CF + ln(z) * z * CF
            result += result_0r * ln(1 - x) + result_1r * ln(1 - x) * ln(1 - x) / 2
        elif orders == "001":
            result += -4 * Li2(-z) * LMUA * pow(NC, -1) * CF * pow(opz, -1) + 2 * Li2(-z) * LMUA * pow(NC, -1) * CF - 2 * Li2(-z) * LMUA * pow(NC, -1) * z * CF + Li2(z) * LMUA * CF + Li2(z) * LMUA * z * CF - 2.0 / 3.0 * ln(omz) * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * ln(omz) * LMUA * CF + 1.0 / 2.0 * ln(omz) * LMUA * z * CF + 2.0 / 3.0 * ln(omz) * LMUA * pow(z, 2) * CF + ln(z) * LMUA * pow(NC, -1) * CF + ln(z) * LMUA * pow(NC, -1) * z * CF - 2.0 / 3.0 * ln(z) * LMUA * pow(z, -1) * CF + 1.0 / 2.0 * ln(z) * LMUA * CF + 2 * ln(z) * LMUA * z * CF + 2.0 / 3.0 * ln(z) * LMUA * pow(z, 2) * CF - 4 * ln(z) * ln(1 + z) * LMUA * pow(NC, -1) * CF * pow(opz, -1) + 2 * ln(z) * ln(1 + z) * LMUA * pow(NC, -1) * CF - 2 * ln(z) * ln(1 + z) * LMUA * pow(NC, -1) * z * CF + 2 * LMUA * pow(NC, -1) * CF - 1.0 / 3.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF * pow(opz, -1) + 1.0 / 6.0 * LMUA * pow(NC, -1) * pow(pi, 2) * CF - 2 * LMUA * pow(NC, -1) * z * CF - 1.0 / 6.0 * LMUA * pow(NC, -1) * z * pow(pi, 2) * CF + 7.0 / 18.0 * LMUA * pow(z, -1) * CF + 10.0 / 3.0 * LMUA * CF - 1.0 / 6.0 * LMUA * pow(pi, 2) * CF - 7.0 / 3.0 * LMUA * z * CF - 1.0 / 6.0 * LMUA * z * pow(pi, 2) * CF - 25.0 / 18.0 * LMUA * pow(z, 2) * CF + pow(ln(z), 2) * LMUA * pow(NC, -1) * CF * pow(opz, -1) - 1.0 / 2.0 * pow(ln(z), 2) * LMUA * pow(NC, -1) * CF + 1.0 / 2.0 * pow(ln(z), 2) * LMUA * pow(NC, -1) * z * CF - pow(ln(z), 2) * LMUA * CF - pow(ln(z), 2) * LMUA * z * CF
            result_0r = -2.0 / 3.0 * LMUA * pow(z, -1) * CF - 1.0 / 2.0 * LMUA * CF + 1.0 / 2.0 * LMUA * z * CF + 2.0 / 3.0 * LMUA * pow(z, 2) * CF - ln(z) * LMUA * CF - ln(z) * LMUA * z * CF
            result += result_0r * ln(1 - x)
        elif orders == "002":
            result += +1.0 / 3.0 * pow(LMUA, 2) * pow(z, -1) * CF + 1.0 / 4.0 * pow(LMUA, 2) * CF - 1.0 / 4.0 * pow(LMUA, 2) * z * CF - 1.0 / 3.0 * pow(LMUA, 2) * pow(z, 2) * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * CF + 1.0 / 2.0 * ln(z) * pow(LMUA, 2) * z * CF
        return result
    elif rsl == "ls":
        result = 0
        return result
    elif rsl == "ll":
        result = 0
        return result
    else:
        raise ValueError("Invalid rsl value")
