// Split orders:
tmp = 0;
// Order 000:
tmp +=  + (-1)*3 * pow(z,-1) * CF + 10 * CF + 3 * x * pow(z,-1) * CF + (-1)* 10 * x * CF + 1. / 6. * pow(pi, 2) * pow(z,-1) * CF + (-1)* 1. / 3. * pow(pi, 2) * CF + 1. / 6. * pow(pi, 2) * x * pow(z,-1) * CF + (-1)* 1. / 3. * pow(pi, 2) * x * CF + (-1)* 3 * ln(x) * pow(z,-1) * CF + 1. / 2. * ln(x) * CF * pow(poly2,-1) + 8 * ln(x) * CF + 3 * ln(x) * x * pow(z,-1) * CF + (-1)* 1. / 2. * ln(x) * x * CF * pow(poly2,-1) + (-1)* 4 * ln(x) * x * CF + (-1)* 1. / 2. * ln(x) * pow(x, 2) * CF * pow(poly2,-1) + 1. / 2. * ln(x) * pow(x, 3) * CF * pow(poly2,-1) + 1. / 4. * ln(x) * ln(1- sqrtxz2+x) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * ln(x) * ln(1- sqrtxz2+x) * CF * pow(sqrtxz2,-1) + 1. / 2. * ln(x) * ln(1- sqrtxz2+x) * x * CF * pow(sqrtxz2,-1) + 0;
tmp += (-1)* ln(x) * ln(1- sqrtxz2+x) * x * z * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * ln(x) * ln(1- sqrtxz2+x) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * ln(x) * ln(1- sqrtxz2+x) * pow(x, 2) * CF * pow(sqrtxz2,-1) + 1. / 4. * ln(x) * ln(1- sqrtxz2+x) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 1. / 4. * ln(x) * ln(1+sqrtxz2+x) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 7. / 4. * ln(x) * ln(1+sqrtxz2+x) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * ln(x) * ln(1+sqrtxz2+x) * x * CF * pow(sqrtxz2,-1) + ln(x) * ln(1+sqrtxz2+x) * x * z * CF * pow(sqrtxz2,-1) + 1. / 2. * ln(x) * ln(1+sqrtxz2+x) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 7. / 4. * ln(x) * ln(1+sqrtxz2+x) * pow(x, 2) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 4. * ln(x) * ln(1+sqrtxz2+x) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)*pow(ln(x), 2) * pow(z,-1) * CF + 2 * pow(ln(x), 2) * CF + (-1)* pow(ln(x), 2) * x * pow(z,-1) * CF + 2 * pow(ln(x), 2) * x * CF + ln(x) * ln(z) * pow(z,-1) * CF + (-1)* ln(x) * ln(z) * CF + ln(x) * ln(z) * x * pow(z,-1) * CF + (-1)*
             ln(x) * ln(z) * x * CF + ln(x) * ln(omz) * pow(z,-1) * CF + 0;
tmp += (-1)* 2 * ln(x) * ln(omz) * CF + ln(x) * ln(omz) * x * pow(z,-1) * CF + (-1)* 2 * ln(x) * ln(omz) * x * CF + 5. / 2. * ln(z) * pow(z,-1) * CF + 1. / 2. * ln(z) * CF * pow(poly2,-1) + ln(z) * CF * pow(omz,-1) + (-1)* 2 * ln(z) * CF + (-1)* 5. / 2. * ln(z) * x * pow(z,-1) * CF + 1. / 2. * ln(z) * x * CF * pow(poly2,-1) + (-1)* ln(z) * x * CF * pow(omz,-1) + 2 * ln(z) * x * CF + (-1)* 1. / 2. * ln(z) * pow(x, 2) * CF * pow(poly2,-1) + (-1)* 1. / 2. * ln(z) * pow(x, 3) * CF * pow(poly2,-1) + 5. / 2. * ln(omx) * pow(z,-1) * CF + (-1)* 5 * ln(omx) * CF + (-1)* 5. / 2. * ln(omx) * x * pow(z,-1) * CF + 5 * ln(omx) * x * CF + 5. / 2. * ln(omz) * pow(z,-1) * CF + (-1)* 5 * ln(omz) * CF + (-1)* 5. / 2. * ln(omz) * x * pow(z,-1) * CF + 0;
tmp += 5 * ln(omz) * x * CF + 1. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * CF * pow(sqrtxz2,-1) + 1. / 2. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * x * CF * pow(sqrtxz2,-1) + (-1)* Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * x * z * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 2) * CF * pow(sqrtxz2,-1) + 1. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)- 1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)*1. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * CF * pow(sqrtxz2,-1) *
                 pow(poly2,-1) + (-1)*
             7. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * x * CF * pow(sqrtxz2,-1) + Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * x * z * CF * pow(sqrtxz2,-1) + 1. / 2. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 7. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 2) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 4. * Li2(1. / 2.- 1. / 2. * pow(x,-1)+1. / 2. * pow(x,-1) * sqrtxz2) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 1. / 4. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* 7. / 4. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * x * CF * pow(sqrtxz2,-1) + Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * x * z * CF * pow(sqrtxz2,-1) + 1. / 2. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 0;
tmp += (-1)* 7. / 4. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 2) * CF * pow(sqrtxz2,-1) + (-1)* 1. / 4. * Li2(1. / 2.- 1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 1. / 4. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * CF * pow(sqrtxz2,-1) + 1. / 2. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * x * CF * pow(sqrtxz2,-1) + (-1)*Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * x * z * CF * pow(sqrtxz2,-1) + (-1)* 1. / 2. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 2) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + 7. / 4. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 2) * CF * pow(sqrtxz2,-1) + 1. / 4. * Li2(1. / 2.+1. / 2. * sqrtxz2- 1. / 2. * x) * pow(x, 4) * CF * pow(sqrtxz2,-1) * pow(poly2,-1) + (-1)* Li2(x) * pow(z,-1) * CF + 2 * Li2(x) * CF + (-1)* Li2(x) * x * pow(z,-1) * CF + 2 * Li2(x) * x * CF + 0;
// Order 010:
tmp += (-1)* 5. / 2. * pow(z,-1) * LMUF * CF + 5 * LMUF * CF + 5. / 2. * x * pow(z,-1) * LMUF * CF + (-1)* 5 * x * LMUF * CF + (-1)* ln(x) * pow(z,-1) * LMUF * CF + 2 * ln(x) * LMUF * CF + (-1)* ln(x) * x * pow(z,-1) * LMUF * CF + 2 * ln(x) * x * LMUF * CF + 0;
