// Split orders:
res = 0;
// Order 000:
res += 1169. / 54. * pow(z,-1) * CF * NC + 4. / 3. * pow(z,-1) * CF * NC * pow(rln2, 3) + 3 * CF * pow(NC,-1) + (-1)* 295. / 18. * CF * NC + 4. / 3. * CF * NC * pow(rln2, 3) + 13. / 8. * z * CF * pow(NC,-1) + (-1)* 389. / 72. * z * CF * NC + 2. / 3. * z * CF * NC * pow(rln2, 3) + (-1)*
          269. / 54. * pow(z, 2) * CF * NC + (-1)* 5 * zeta3 * pow(z,-1) * CF * pow(NC,-1) + (-1)* 14 * zeta3 * pow(z,-1) * CF * NC + 3 * zeta3 * CF * pow(NC,-1) + (-1)* 3. / 2. * zeta3 * z * CF * pow(NC,-1) + (-1)* 12 * zeta3 * z * CF * NC + (-1)* 1. / 4. * pow(pi, 2) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 1. / 4. * pow(pi, 2) * pow(z,-1) * CF * NC + (-1)*2. / 3. * pow(pi, 2) * pow(z,-1) * CF * NC * rln2 + 2. / 3. * pow(pi, 2) * CF * pow(NC,-1) + (-1)* 5. / 3. * pow(pi, 2) * CF * NC + (-1)* 2. / 3. * pow(pi, 2) * CF * NC * rln2 + 0;
res += (-1)* 1. / 8. * pow(pi, 2) * z * CF * pow(NC,-1) + 7. / 24. * pow(pi, 2) * z * CF * NC + (-1)* 1. / 3. * pow(pi, 2) * z * CF * NC * rln2 + (-1)* 2 * ln(1+z) * pow(z,-1) * CF * NC * pow(rln2, 2) + (-1)* 2 * ln(1+z) * CF * NC * pow(rln2, 2) + (-1)* ln(1+z) * z * CF * NC * pow(rln2, 2) + 1. / 3. * ln(1+z) * pow(pi, 2) * pow(z,-1) * CF * NC + 1. / 3. * ln(1+z) * pow(pi, 2) * CF * NC + 1. / 6. * ln(1+z) * pow(pi, 2) * z * CF * NC + 9. / 2. * ln(z) * pow(z,-1) * CF * pow(NC,-1) + 71. / 18. * ln(z) * pow(z,-1) * CF * NC + (-1)* 67. / 8. * ln(z) * CF * pow(NC,-1) + 247. / 8. * ln(z) * CF * NC + 45. / 8. * ln(z) * z * CF * pow(NC,-1) + 31. / 8. * ln(z) * z * CF * NC + 31. / 9. * ln(z) * pow(z, 2) * CF * NC + 1. / 3. * ln(z) * pow(pi, 2) * pow(z,-1) * CF * pow(NC,-1) + (-1)* ln(z) * pow(pi, 2) * pow(z,-1) * CF * NC + (-1)* 1. / 2. * ln(z) * pow(pi, 2) * CF * pow(NC,-1) + (-1)* 1. / 6. * ln(z) * pow(pi, 2) * CF * NC + 0;
res += 1. / 4. * ln(z) * pow(pi, 2) * z * CF * pow(NC,-1) + (-1)* 11. / 12. * ln(z) * pow(pi, 2) * z * CF * NC + ln(z) * ln(1+z) * z * CF * NC + (-1)* 20. / 3. * pow(ln(z), 2) * pow(z,-1) * CF * NC + pow(ln(z), 2) * CF * pow(NC,-1) + (-1)* 5 * pow(ln(z), 2) * CF * NC + (-1)* 13. / 16. * pow(ln(z), 2) * z * CF * pow(NC,-1) + (-1)* 7. / 16. * pow(ln(z), 2) * z * CF * NC + 3 * pow(ln(z), 2) * ln(1+z) * pow(z,-1) * CF * NC + 3 * pow(ln(z), 2) * ln(1+z) * CF * NC + 3. / 2. * pow(ln(z), 2) * ln(1+z) * z * CF * NC + (-1)* 10. / 3. * pow(ln(z), 3) * pow(z,-1) * CF * NC + (-1)* 5. / 12. * pow(ln(z), 3) * CF * pow(NC,-1) + (-1)*5. / 4. * pow(ln(z), 3) * CF * NC + 5. / 24. * pow(ln(z), 3) * z * CF * pow(NC,-1) + (-1)* 65. / 24. * pow(ln(z), 3) * z * CF * NC + 2 * pow(ln(z), 2) * ln(omz) * pow(z,-1) * CF * pow(NC,-1) + pow(ln(z), 2) * ln(omz) * pow(z,-1) * CF * NC + (-1)* 2 * pow(ln(z), 2) * ln(omz) * CF * pow(NC,-1) + (-1)* pow(ln(z), 2) * ln(omz) * CF * NC + 0;
res += pow(ln(z), 2) * ln(omz) * z * CF * pow(NC,-1) + 1. / 2. * pow(ln(z), 2) * ln(omz) * z * CF * NC + 3 * ln(z) * ln(omz) * z * CF * NC + 4 * ln(z) * ln(omz) * ln(1+z) * pow(z,-1) * CF * NC + 4 * ln(z) * ln(omz) * ln(1+z) * CF * NC + 2 * ln(z) * ln(omz) * ln(1+z) * z * CF * NC + 3 * ln(z) * pow(ln(omz), 2) * pow(z,-1) * CF * NC + 3. / 2. * ln(z) * pow(ln(omz), 2) * CF * pow(NC,-1) + 15. / 2. * ln(z) * pow(ln(omz), 2) * CF * NC + (-1)* 3. / 4. * ln(z) * pow(ln(omz), 2) * z * CF * pow(NC,-1) + 21. / 4. * ln(z) * pow(ln(omz), 2) * z * CF * NC + 2 * ln(z) * Li2(-z) * pow(z,-1) * CF * NC + 2 * ln(z) * Li2(-z) * CF * NC + ln(z) * Li2(-z) * z * CF * NC + 6 * ln(z) * Li2(z) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 4 * ln(z) * Li2(z) * pow(z,-1) * CF * NC + (-1)* 6 * ln(z) * Li2(z) * CF * pow(NC,-1) + 4 * ln(z) * Li2(z) * CF * NC + 3 * ln(z) * Li2(z) * z * CF * pow(NC,-1) + (-1)* 2 * ln(z) * Li2(z) * z * CF * NC + 0;
res += 9. / 2. * ln(omz) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 55. / 18. * ln(omz) * pow(z,-1) * CF * NC + (-1)* 2 * ln(omz) * pow(z,-1) * CF * NC * pow(rln2, 2) + (-1)* 9. / 2. * ln(omz) * CF * pow(NC,-1) + 23. / 3. * ln(omz) * CF * NC + (-1)* 2 * ln(omz) * CF * NC * pow(rln2, 2) + 5. / 2. * ln(omz) * z * CF * pow(NC,-1) + (-1)* 31. / 6. * ln(omz) * z * CF * NC + (-1)* ln(omz) * z * CF * NC * pow(rln2, 2) + (-1)* 13. / 9. * ln(omz) * pow(z, 2) * CF * NC + 2. / 3. * ln(omz) * pow(pi, 2) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 2. / 3. * ln(omz) * pow(pi, 2) * pow(z,-1) * CF * NC + (-1)* ln(omz) * pow(pi, 2) * CF * pow(NC,-1) + (-1)* ln(omz) * pow(pi, 2) * CF * NC + 1. / 2. * ln(omz) * pow(pi, 2) * z * CF * pow(NC,-1) + (-1)* 7. / 6. * ln(omz) * pow(pi, 2) * z * CF * NC + 4 * ln(omz) * ln(1+z) * pow(z,-1) * CF * NC * rln2 + 4 * ln(omz) * ln(1+z) * CF * NC * rln2 + 2 * ln(omz) * ln(1+z) * z * CF * NC * rln2 + (-1)* 2 * ln(omz) * pow(ln(1+z), 2) * pow(z,-1) * CF * NC + 0;
res += (-1)*2 * ln(omz) * pow(ln(1+z), 2) * CF * NC + (-1)* ln(omz) * pow(ln(1+z), 2) * z * CF * NC + 3. / 2. * pow(ln(omz), 2) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 20. / 3. * pow(ln(omz), 2) * pow(z,-1) * CF * NC + (-1)* 2 * pow(ln(omz), 2) * CF * pow(NC,-1) + 6 * pow(ln(omz), 2) * CF * NC + 1. / 8. * pow(ln(omz), 2) * z * CF * pow(NC,-1) + (-1)* 1. / 8. * pow(ln(omz), 2) * z * CF * NC + 2. / 3. * pow(ln(omz), 2) * pow(z, 2) * CF * NC + (-1)* 5. / 6. * pow(ln(omz), 3) * pow(z,-1) * CF * pow(NC,-1) + 7. / 6. * pow(ln(omz), 3) * pow(z,-1) * CF * NC + 5. / 6. * pow(ln(omz), 3) * CF * pow(NC,-1) + (-1)* 7. / 6. * pow(ln(omz), 3) * CF * NC + (-1)* 5. / 12. * pow(ln(omz), 3) * z * CF * pow(NC,-1) + 7. / 12. * pow(ln(omz), 3) * z * CF * NC + (-1)* 2 * ln(omz) * Li2(1- z) * pow(z,-1) * CF * pow(NC,-1) + (-1)* 2 * ln(omz) * Li2(1- z) * pow(z,-1) * CF * NC + 3 * ln(omz) * Li2(1- z) * CF * pow(NC,-1) + 9 * ln(omz) * Li2(1- z) * CF * NC + (-1)* 3. / 2. * ln(omz) * Li2(1- z) * z * CF * pow(NC,-1) + 0;
res += 3. / 2. * ln(omz) * Li2(1- z) * z * CF * NC + 4 * ln(omz) * Li2(-z) * pow(z,-1) * CF * NC + 4 * ln(omz) * Li2(-z) * CF * NC + 2 * ln(omz) * Li2(-z) * z * CF * NC + 3 * ln(omz) * Li2(z) * pow(z,-1) * CF * pow(NC,-1) + 3 * ln(omz) * Li2(z) * pow(z,-1) * CF * NC + (-1)* ln(omz) * Li2(z) * CF * pow(NC,-1) + 11 * ln(omz) * Li2(z) * CF * NC + 1. / 2. * ln(omz) * Li2(z) * z * CF * pow(NC,-1) + 13. / 2. * ln(omz) * Li2(z) * z * CF * NC + 2. / 3. * ln(opz) * pow(pi, 2) * pow(z,-1) * CF * NC + 2. / 3. * ln(opz) * pow(pi, 2) * CF * NC + 1. / 3. * ln(opz) * pow(pi, 2) * z * CF * NC + (-1)* 4 * Li3(1. / 2.- 1. / 2. * z) * pow(z,-1) * CF * NC + (-1)* 4 * Li3(1. / 2.- 1. / 2. * z) * CF * NC + (-1)* 2 * Li3(1. / 2.- 1. / 2. * z) * z * CF * NC + (-1)* 4 * Li3(1. / 2.+1. / 2. * z) * pow(z,-1) * CF * NC + (-1)* 4 * Li3(1. / 2.+1. / 2. * z) * CF * NC + (-1)* 2 * Li3(1. / 2.+1. / 2. * z) * z * CF * NC + 3 * Li3(1- z) * pow(z,-1) * CF * pow(NC,-1) + 0;
res += 7 * Li3(1- z) * pow(z,-1) * CF * NC + (-1)* 2 * Li3(1- z) * CF * pow(NC,-1) + 8 * Li3(1- z) * CF * NC + Li3(1- z) * z * CF * pow(NC,-1) + 6 * Li3(1- z) * z * CF * NC + 2 * Li3(-z) * pow(z,-1) * CF * NC + 2 * Li3(-z) * CF * NC + Li3(-z) * z * CF * NC + 4 * Li3(1 / (1+z)) * pow(z,-1) * CF * NC + 4 * Li3(1 / (1+z)) * CF * NC + 2 * Li3(1 / (1+z)) * z * CF * NC + (-1)* 4 * Li3(1 / (1+z)- 1 / (1+z) * z) * pow(z,-1) * CF * NC + (-1)* 4 * Li3(1 / (1+z)- 1 / (1+z) * z) * CF * NC + (-1)* 2 * Li3(1 / (1+z)- 1 / (1+z) * z) * z * CF * NC + (-1)* 6 * Li3(z) * pow(z,-1) * CF * pow(NC,-1) + 20 * Li3(z) * pow(z,-1) * CF * NC + 8 * Li3(z) * CF * pow(NC,-1) + (-1)* 2 * Li3(z) * CF * NC + (-1)* 4 * Li3(z) * z * CF * pow(NC,-1) + 15 * Li3(z) * z * CF * NC + 0;
res += Li2(-z) * z * CF * NC + (-1)* 3. / 2. * Li2(z) * pow(z,-1) * CF * pow(NC,-1) + 89. / 6. * Li2(z) * pow(z,-1) * CF * NC + (-1)* 2 * Li2(z) * CF * NC + Li2(z) * z * CF * pow(NC,-1) + Li2(z) * z * CF * NC + (-1)* 4. / 3. * Li2(z) * pow(z, 2) * CF * NC + 0;
// Order 001:
res += (-1)* 9. / 2. * pow(z,-1) * LMUA * CF * pow(NC,-1) + 55. / 18. * pow(z,-1) * LMUA * CF * NC + 17. / 4. * LMUA * CF * pow(NC,-1) + (-1)* 95. / 12. * LMUA * CF * NC + (-1)* 7. / 4. * z * LMUA * CF * pow(NC,-1) + 1. / 3. * z * LMUA * CF * NF + 31. / 12. * z * LMUA * CF * NC + 13. / 9. * pow(z, 2) * LMUA * CF * NC + (-1)* 1. / 3. * pow(pi, 2) * pow(z,-1) * LMUA * CF * pow(NC,-1) + 1. / 3. * pow(pi, 2) * pow(z,-1) * LMUA * CF * NC + 1. / 2. * pow(pi, 2) * LMUA * CF * pow(NC,-1) + 1. / 6. * pow(pi, 2) * LMUA * CF * NC + (-1)* 1. / 4. * pow(pi, 2) * z * LMUA * CF * pow(NC,-1) + 7. / 12. * pow(pi, 2) * z * LMUA * CF * NC + 2. / 3. * ln(z) * pow(z,-1) * LMUA * CF * NF + 29. / 3. * ln(z) * pow(z,-1) * LMUA * CF * NC + (-1)* 3. / 2. * ln(z) * LMUA * CF * pow(NC,-1) + (-1)*2. / 3. * ln(z) * LMUA * CF * NF + 19. / 6. * ln(z) * LMUA * CF * NC + 3. / 4. * ln(z) * z * LMUA * CF * pow(NC,-1) + 0;
res += 1. / 3. * ln(z) * z * LMUA * CF * NF + (-1)* 55. / 12. * ln(z) * z * LMUA * CF * NC + (-1)* 4. / 3. * ln(z) * pow(z, 2) * LMUA * CF * NC + (-1)* 4 * ln(z) * ln(1+z) * pow(z,-1) * LMUA * CF * NC + (-1)* 4 * ln(z) * ln(1+z) * LMUA * CF * NC + (-1)* 2 * ln(z) * ln(1+z) * z * LMUA * CF * NC + 6 * pow(ln(z), 2) * pow(z,-1) * LMUA * CF * NC + pow(ln(z), 2) * LMUA * CF * pow(NC,-1) + 3 * pow(ln(z), 2) * LMUA * CF * NC + (-1)* 1. / 2. * pow(ln(z), 2) * z * LMUA * CF * pow(NC,-1) + 11. / 2. * pow(ln(z), 2) * z * LMUA * CF * NC + (-1)* 2 * ln(z) * ln(omz) * pow(z,-1) * LMUA * CF * pow(NC,-1) + (-1)* 6 * ln(z) * ln(omz) * pow(z,-1) * LMUA * CF * NC + 2 * ln(z) * ln(omz) * LMUA * CF * pow(NC,-1) + 6 * ln(z) * ln(omz) * LMUA * CF * NC + (-1)* ln(z) * ln(omz) * z * LMUA * CF * pow(NC,-1) + (-1)* 3 * ln(z) * ln(omz) * z * LMUA * CF * NC + (-1)* 3. / 2. * ln(omz) * pow(z,-1) * LMUA * CF * pow(NC,-1) + 2. / 3. * ln(omz) * pow(z,-1) * LMUA * CF * NF + 49. / 6. * ln(omz) * pow(z,-1) * LMUA * CF * NC + 0;
res += 5. / 2. * ln(omz) * LMUA * CF * pow(NC,-1) + (-1)* 2. / 3. * ln(omz) * LMUA * CF * NF + (-1)* 41. / 6. * ln(omz) * LMUA * CF * NC + 1. / 3. * ln(omz) * z * LMUA * CF * NF + (-1)* 17. / 6. * ln(omz) * z * LMUA * CF * NC + (-1)* 4. / 3. * ln(omz) * pow(z, 2) * LMUA * CF * NC + 2 * pow(ln(omz), 2) * pow(z,-1) * LMUA * CF * pow(NC,-1) + (-1)* 4 * pow(ln(omz), 2) * pow(z,-1) * LMUA * CF * NC + (-1)* 2 * pow(ln(omz), 2) * LMUA * CF * pow(NC,-1) + 4 * pow(ln(omz), 2) * LMUA * CF * NC + pow(ln(omz), 2) * z * LMUA * CF * pow(NC,-1) + (-1)* 2 * pow(ln(omz), 2) * z * LMUA * CF * NC + (-1)* 4 * Li2(-z) * pow(z,-1) * LMUA * CF * NC + (-1)* 4 * Li2(-z) * LMUA * CF * NC + (-1)* 2 * Li2(-z) * z * LMUA * CF * NC + (-1)* 6 * Li2(z) * pow(z,-1) * LMUA * CF * pow(NC,-1) + (-1)* 6 * Li2(z) * pow(z,-1) * LMUA * CF * NC + 5 * Li2(z) * LMUA * CF * pow(NC,-1) + (-1)* Li2(z) * LMUA * CF * NC + (-1)* 5. / 2. * Li2(z) * z * LMUA * CF * pow(NC,-1) + 0;
res += (-1)* 11. / 2. * Li2(z) * z * LMUA * CF * NC + 0;
// Order 101:
res += 2. / 3. * pow(z,-1) * LMUA * LMUR * CF * NF + (-1)* 11. / 3. * pow(z,-1) * LMUA * LMUR * CF * NC + (-1)* 2. / 3. * LMUA * LMUR * CF * NF + 11. / 3. * LMUA * LMUR * CF * NC + 1. / 3. * z * LMUA * LMUR * CF * NF + (-1)* 11. / 6. * z * LMUA * LMUR * CF * NC + 0;
// Order 011:
res += (-1)* 3. / 2. * pow(z,-1) * LMUA * LMUF * CF * pow(NC,-1) + 3. / 2. * pow(z,-1) * LMUA * LMUF * CF * NC + 3. / 2. * LMUA * LMUF * CF * pow(NC,-1) + (-1)* 3. / 2. * LMUA * LMUF * CF * NC + (-1)* 3. / 4. * z * LMUA * LMUF * CF * pow(NC,-1) + 3. / 4. * z * LMUA * LMUF * CF * NC + 0;
// Order 002:
res += (-1)* 2. / 3. * pow(z,-1) * pow(LMUA, 2) * CF * NF + (-1)* 3. / 2. * pow(z,-1) * pow(LMUA, 2) * CF * NC + (-1)* 1. / 2. * pow(LMUA, 2) * CF * pow(NC,-1) + 2. / 3. * pow(LMUA, 2) * CF * NF + 5. / 6. * pow(LMUA, 2) * CF * NC + 1. / 8. * z * pow(LMUA, 2) * CF * pow(NC,-1) + (-1)* 1. / 3. * z * pow(LMUA, 2) * CF * NF + 53. / 24. * z * pow(LMUA, 2) * CF * NC + 2. / 3. * pow(z, 2) * pow(LMUA, 2) * CF * NC + (-1)* 2 * ln(z) * pow(z,-1) * pow(LMUA, 2) * CF * NC + (-1)* 1. / 2. * ln(z) * pow(LMUA, 2) * CF * pow(NC,-1) + (-1)* 3. / 2. * ln(z) * pow(LMUA, 2) * CF * NC + 1. / 4. * ln(z) * z * pow(LMUA, 2) * CF * pow(NC,-1) + (-1)* 9. / 4. * ln(z) * z * pow(LMUA, 2) * CF * NC + (-1)* ln(omz) * pow(z,-1) * pow(LMUA, 2) * CF * pow(NC,-1) + 3 * ln(omz) * pow(z,-1) * pow(LMUA, 2) * CF * NC + ln(omz) * pow(LMUA, 2) * CF * pow(NC,-1) + (-1)* 3 * ln(omz) * pow(LMUA, 2) * CF * NC + (-1)* 1. / 2. * ln(omz) * z * pow(LMUA, 2) * CF * pow(NC,-1) + 3. / 2. * ln(omz) * z * pow(LMUA, 2) * CF * NC + 0;
// Order 100:
res += (-1)* 1. / 3. * z * LMUR * CF * NF + 11. / 6. * z * LMUR * CF * NC + (-1)* 2. / 3. * ln(z) * pow(z,-1) * LMUR * CF * NF + 11. / 3. * ln(z) * pow(z,-1) * LMUR * CF * NC + 2. / 3. * ln(z) * LMUR * CF * NF + (-1)* 11. / 3. * ln(z) * LMUR * CF * NC + (-1)* 1. / 3. * ln(z) * z * LMUR * CF * NF + 11. / 6. * ln(z) * z * LMUR * CF * NC + (-1)* 2. / 3. * ln(omz) * pow(z,-1) * LMUR * CF * NF + 11. / 3. * ln(omz) * pow(z,-1) * LMUR * CF * NC + 2. / 3. * ln(omz) * LMUR * CF * NF + (-1)* 11. / 3. * ln(omz) * LMUR * CF * NC + (-1)* 1. / 3. * ln(omz) * z * LMUR * CF * NF + 11. / 6. * ln(omz) * z * LMUR * CF * NC + 0;
// Order 010:
res += 3. / 4. * z * LMUF * CF * pow(NC,-1) + (-1)* 3. / 4. * z * LMUF * CF * NC + (-1)* 1. / 3. * pow(pi, 2) * pow(z,-1) * LMUF * CF * pow(NC,-1) + 1. / 3. * pow(pi, 2) * pow(z,-1) * LMUF * CF * NC + 1. / 3. * pow(pi, 2) * LMUF * CF * pow(NC,-1) + (-1)* 1. / 3. * pow(pi, 2) * LMUF * CF * NC + (-1)* 1. / 6. * pow(pi, 2) * z * LMUF * CF * pow(NC,-1) + 1. / 6. * pow(pi, 2) * z * LMUF * CF * NC + 3. / 2. * ln(z) * pow(z,-1) * LMUF * CF * pow(NC,-1) + (-1)* 3. / 2. * ln(z) * pow(z,-1) * LMUF * CF * NC + (-1)* 3. / 2. * ln(z) * LMUF * CF * pow(NC,-1) + 3. / 2. * ln(z) * LMUF * CF * NC + 3. / 4. * ln(z) * z * LMUF * CF * pow(NC,-1) + (-1)*
           3. / 4. * ln(z) * z * LMUF * CF * NC + 3. / 2. * ln(omz) * pow(z,-1) * LMUF * CF * pow(NC,-1) + (-1)*3. / 2. * ln(omz) * pow(z,-1) * LMUF * CF * NC + (-1)* 3. / 2. * ln(omz) * LMUF * CF * pow(NC,-1) + 3. / 2. * ln(omz) * LMUF * CF * NC + 3. / 4. * ln(omz) * z * LMUF * CF * pow(NC,-1) + (-1)* 3. / 4. * ln(omz) * z * LMUF * CF * NC + 0;
